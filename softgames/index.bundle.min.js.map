{"version":3,"sources":["webpack:///webpack/bootstrap 041dae8d84c8b9d830fa","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/index.ts","webpack:///./src/scripts/vendor/basarat/typescript-collections/util.ts","webpack:///./src/scripts/vendor/primus/eventemitter3/index.js","webpack:///./src/scripts/index.ts","webpack:///./src/scripts/app/softgamesApp.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/pixi-app-wrapper.ts","webpack:///./src/scripts/vendor/darsain/fpsmeter/fpsmeter.js","webpack:///../src/ContainerMixin.ts","webpack:///../src/DisplayObjectMixin.ts","webpack:///../src/InteractionManagerMixin.ts","webpack:///../src/xporter.ts","webpack:///../src/Group.ts","webpack:///../src/Layer.ts","webpack:///../src/Stage.ts","webpack:///../src/renderers.ts","webpack:///external \"PIXI\"","webpack:///./src/scripts/vendor/sindresorhus/screenfull/screenfull.js","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/info/media-info-viewer.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/util/math.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-bottom-center.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-bottom-left.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-bottom-right.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-middle.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-middle-left.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-middle-right.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-top-center.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-top-left.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-top-right.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/scale/scale-full-size.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/scale/scale-keep-aspect-ratio.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/scale/scale-none.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/event/pixi-app-wrapper-event.ts","webpack:///./src/scripts/vendor/dacaher/pixi-app-wrapper/util/dom.ts","webpack:///./src/scripts/vendor/dacaher/pixi-assets-loader/index.ts","webpack:///./src/scripts/vendor/dacaher/pixi-assets-loader/pixi-assets-loader.ts","webpack:///./src/scripts/vendor/basarat/typescript-collections/PriorityQueue.ts","webpack:///./src/scripts/vendor/basarat/typescript-collections/Heap.ts","webpack:///./src/scripts/vendor/basarat/typescript-collections/arrays.ts","webpack:///./src/scripts/vendor/dacaher/pixi-assets-loader/asset-priority.ts","webpack:///node_modules/browser-pack/_prelude.js","webpack:///ts-dist/AnimatedParticle.js","webpack:///ts-dist/Emitter.js","webpack:///ts-dist/Particle.js","webpack:///ts-dist/ParticleUtils.js","webpack:///ts-dist/PathParticle.js","webpack:///ts-dist/PropertyList.js","webpack:///ts-dist/PropertyNode.js","webpack:///ts-dist/particles.js","webpack:///ts-dist","webpack:///./src/scripts/app/cardStacks.ts","webpack:///./src/scripts/app/textWithImages.ts","webpack:///./src/scripts/app/fireParticles.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__export","_hasOwnProperty","isFunction","func","isUndefined","obj","isString","toString","has","prop","defaultCompare","a","b","defaultEquals","defaultToString","item","makeString","join","toret","first","reverseCompareFunction","compareFunction","v","compareToEquals","prefix","Events","addListener","emitter","event","fn","context","once","TypeError","listener","this","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","names","slice","getOwnPropertySymbols","concat","listeners","handlers","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","SoftgamesApp","pixi_app_wrapper_1","pixi_assets_loader_1","cardStacks_1","textWithImages_1","fireParticles_1","canvas","Dom","getElementOrCreateNew","document","getElementById","cardStackButton","particleButton","imageTextButton","fullScreenButton","particleDestroy","cardStackDestroy","imageTextDestroy","onclick","checked","default","app","drawRandomTextWithImages","stage","requestFullscreen","exitFullscreen","appOptions","width","height","scale","align","resolution","window","devicePixelRatio","roundPixels","transparent","backgroundColor","view","showFPS","changeOrientation","PixiAppWrapper","assets","id","url","priority","AssetPriority","HIGH","type","LOWEST","loader","PixiAssetsLoader","PRIORITY_GROUP_LOADED","disabled","createViewsByPriority","addAssets","load","PIXI","TextStyle","fontFamily","fontSize","fill","wordWrap","wordWrapWidth","screenfull","media_info_viewer_1","align_bottom_center_1","align_bottom_left_1","align_bottom_right_1","align_middle_1","align_middle_left_1","align_middle_right_1","align_top_center_1","align_top_left_1","align_top_right_1","scale_full_size_1","scale_keep_aspect_ratio_1","scale_none_1","_super","options","_this","defaultScaleMethod","defaultAlignMethod","defaultOptions","showMediaInfo","fpsmeterOptions","theme","heat","graph","history","zIndex","resizing","mediaInfoViewer","MediaInfoViewer","Application","display","Stage","configure","ticker","add","resize","bind","__extends","toggleFulscreen","element","target","documentElement","enabled","toggle","renderer","screen","getMediaInfo","clientWidth","clientHeight","x","y","initialWidth","initialHeight","currentWidth","Math","ceil","currentHeight","scaleX","toFixed","scaleY","scaling","valueOf","alignment","orientation","landscape","alignStrategy","AlignTopCenter","AlignTopRight","AlignMiddleLeft","AlignMiddle","AlignMiddleRight","AlignBottomLeft","AlignBottomCenter","AlignBottomRight","AlignTopLeft","scaleStrategy","ScaleKeepAspectRatio","ScaleFullSize","ScaleNone","createFPSmeter","hide","body","appendChild","fpsmeter","FPSMeter","getElementOrBody","tick","show","multiplier","floor","pixiAppWrapperEvent","RESIZE_START","orientationChanged","orientate","update","RESIZE_END","position","size","changed","swapSize","tempW","_a","set","w","newEl","createElement","applyTheme","style","e","value","String","match","toLowerCase","inArray","array","indexOf","extend","key","componentToHex","round","eventName","handler","remove","addEventListener","attachEvent","getTime","perf","performance","now","webkitNow","perfNow","Date","cAF","cancelAnimationFrame","cancelRequestAnimationFrame","rAF","requestAnimationFrame","vendors","lastTime","callback","currTime","timeToCall","max","setTimeout","clearTimeout","textProp","textContent","anchor","nodeType","heatmaps","time","frameID","renderID","graphHeight","count","self","defaults","el","cols","heatDepth","heating","frameTime","threshold","frameStart","lastLoop","fpsHistory","durationHistory","showFps","getHeat","heatmap","min","updateCounter","legend","fps","duration","decimals","render","smoothing","interval","historyTick","heatOn","maxFps","column","requestRender","eventHandler","preventDefault","stopPropagation","returnValue","cancelBubble","removeMeter","toggleOn","container","removeChild","createMeter","compiledHeatmaps","h","saturation","lightness","r","g","sextant","vsf","setTheme","spacing","bottom","right","positionMeter","cursor","isPaused","tickStart","pause","resume","rebuilders","repositioners","showDuration","destroy","left","top","margin","base","padding","minWidth","lineHeight","textAlign","textShadow","boxSizing","MozBoxSizing","dark","background","color","border","light","boxShadow","colorful","opacity","pixi_display","assign","Container","renderWebGL","_activeParentLayer","_activeLayer","visible","displayOrder","incDisplayOrder","worldAlpha","renderable","containerRenderWebGL","renderCanvas","containerRenderCanvas","DisplayObject","parentLayer","parentGroup","zOrder","updateOrder","layerableChildren","particles","ParticleContainer","InteractionManager","Group","sorting","_activeStage","_activeChildren","_lastUpdateId","useRenderTexture","useDoubleBuffer","sortPriority","clearColor","Float32Array","canDrawWithoutLayer","canDrawInParentStage","enableSort","_tempResult","_tempZero","useZeroOptimization","doSort","layer","sorted","doSortWithZeroOptimization","sort","compareZIndex","Error","clear","addDisplayObject","displayObject","check","foundLayer","conflict","foundStage","_layerUpdateId","current","_activeParentStage","_lastLayerConflict","console","log","utils","interaction","_queue","_displayProcessInteractive","point","hitTestOrder","interactive","outOfMask","hit","interactiveParent","hitArea","mask","_mask","Infinity","containsPoint","filterArea","contains","children","interactiveChildren","child","hitChild","parent","_queueAdd","worldTransform","applyInverse","_tempPoint","processInteractive","strangeStuff","hitTest","interactionEvent","data","global","_startInteractionProcess","_finishInteractionProcess","_eventDisplayOrder","order","queue","q","LayerTextureCache","renderTexture","doubleBuffer","currentBufferIndex","_tempRenderTarget","initRenderTexture","settings","RESOLUTION","RenderTexture","group","getRenderTexture","pushTexture","rt","db","baseTexture","_activeRenderTarget","currentRenderer","flush","buffer","_glTextures","CONTEXT_UID","bindRenderTexture","unbindTexture","_glRenderTargets","popTexture","bindRenderTarget","Layer","isLayer","_tempChildren","_activeStageParent","_sortedChildren","_tempLayerParent","insertChildrenBeforeActive","insertChildrenAfterActive","beginWork","active","groupChildren","endWork","textureCache","updateDisplayLayers","_preRender","_boundsID","_postRender","isStage","_tempGroups","_activeLayers","_addRecursive","layer_1","updateAsChildStage","_updateOrderCounter","alpha","_addRecursiveChildren","_updateStageInner","layers","updateStage","WebGLRenderer","_lastDisplayOrder","_oldRender","transform","skipUpdateTransform","CanvasRenderer","isCommonjs","keyboardAllowed","Element","val","fnMap","ret","eventNameMap","change","fullscreenchange","error","fullscreenerror","request","elem","test","navigator","userAgent","ALLOW_KEYBOARD_INPUT","exit","isFullscreen","onchange","onerror","removeEventListener","raw","defineProperties","Boolean","fullscreenElement","fullscreenEnabled","createContainer","newData","textContainer","innerHTML","getText","rootContainer","className","replace","trim","closeBtn","title","stageInitialGCD","gcd","innerWidth","innerHeight","containerWidth","containerHeight","finalWidth","finalHeight","elementId","tagName","eventemitter3_1","PriorityQueue_1","pixiLoader","onProgress","onGenericAssetProgress","onError","onGenericAssetError","onLoad","onGenericAssetLoad","assetsQueue","initLoadingQueue","isLoading","keys","assetsLoading","addAsset","asset","enqueue","forEach","loadNextPriorityGroup","reset","currentPriorityLoading","genericAssetsToLoad","genericAssetsRemaining","soundAssetsToLoad","soundAssetsRemaining","progressPercents","generic","sound","total","resource","innerIncrement","progress","totalIncrement","PRIORITY_GROUP_PROGRESS","loadAsset","loaded","ASSET_ERROR","ASSET_LOADED","onAllGenericAssetsComplete","checkAllAssetsLoaded","onSoundAssetProgress","innerPercent","onSoundAssetError","onSoundAssetLoad","peek","loadPriorityGroup","ALL_ASSETS_LOADED","dequeue","startLoadingAssets","map","autoplay","loadSoundAsset","addGenericAsset","loadGenericAssets","howl","Howl","src","loop","volume","mute","rate","html5","onload","onloaderror","soundId","loadError","filter","util","Heap_1","PriorityQueue","heap","removeRoot","isEmpty","collections","arrays","Heap","compare","leftChildIndex","nodeIndex","rightChildIndex","parentIndex","minIndex","leftChild","rightChild","siftUp","index","swap","siftDown","splice","equF","equalsFunction","equals","lastIndexOf","frequency","freq","array1","array2","copy","temp","_i","array_1","getPriority","HIGHEST","NORMAL","LOW","f","t","u","require","code","1","_dereq_","extendStatics","setPrototypeOf","__","constructor","Particle_1","Texture","AnimatedParticle","textures","framerate","elapsed","init","Particle_init","maxLife","applyArt","art","delta","lerp","Particle_update","frame","texture","EMPTY","Particle_destroy","parseArt","output","tex","outTextures","outArr","fromImage","dupe","ParticleUtils_1","PropertyNode_1","shared","helperPoint","Point","Emitter","particleParent","particleImages","config","_particleConstructor","startAlpha","startSpeed","minimumSpeedMultiplier","acceleration","maxSpeed","NaN","startScale","minimumScaleMultiplier","startColor","minLifetime","maxLifetime","minStartRotation","maxStartRotation","noRotation","minRotationSpeed","maxRotationSpeed","particleBlendMode","customEase","extraData","_frequency","spawnChance","maxParticles","emitterLifetime","spawnPos","spawnType","_spawnFunc","spawnRect","spawnCircle","particlesPerWave","particleSpacing","angleStart","rotation","ownerPos","_prevEmitterPos","_prevPosIsValid","_posChanged","_parent","addAtBack","particleCount","_emit","_spawnTimer","_emitterLife","_activeParticlesFirst","_activeParticlesLast","_poolFirst","_origConfig","_origArt","_autoUpdate","_destroyWhenComplete","_completeCallback","recycle","rotate","updateSpawnPos","updateOwnerPos","cleanup","particle","next","isArray","partClass","createList","speed","startRotation","rotationSpeed","lifetime","getBlendMode","blendMode","ease","generateEase","parseData","_spawnRect","Rectangle","_spawnCircle","Circle","_spawnRing","minRadius","minR","_spawnBurst","_spawnPoint","pos","clone","autoUpdate","prev","newRot","diff","rotatePoint","resetPositionTracking","playOnceAndDestroy","playOnce","TARGET_FPMS","prevX","prevY","curX","curY","random","emitPosX","emitPosY","particleConstructor","alphaList","speedMultiplier","speedList","scaleMultiplier","scaleList","colorList","shift","pop","unshift","addChildAt","addChild","radius","angle","PropertyList_1","Particle","velocity","age","_doAlpha","_doScale","_doSpeed","_doAcceleration","_doColor","_doNormalMovement","_oneOverLife","Sprite_destroy","kill","DEG_TO_RADS","tint","combineRGBComponents","interpolate","normalize","scaleBy","currentSpeed","atan2","verbose","warn","Sprite","BLEND_MODES","ParticleUtils","PI","sin","cos","xnew","ynew","oneOverLen","sqrt","hexToRGB","charAt","substr","parseInt","segments","qty","oneOverQty","cp","toUpperCase","createSteppedGradient","list","numSteps","isStepped","currentNode","nextIndex","curVal","nextVal","MATH_FUNCS","WHITELISTER","RegExp","PathParticle","path","initialRotation","initialPosition","movement","pathString","matches","Function","parsePath","PropertyList","isColor","intColorSimple","intValueSimple","intColorStepped","intValueStepped","intColorComplex","intValueComplex","PropertyNode","node","start","end","ParticleUtils_js_1","Particle_js_1","Emitter_js_1","PathParticle_js_1","AnimatedParticle_js_1","Side","stackDisplacement","cardStacks","getCardPos","side","numInStack","displacement","movingContainer","card","resources","setInterval","hasCardToMove","newLength","moveFirstToRightStackAndGetNewPosition","card_1","x_1","y_1","cacheAsBitmap","startTime_1","startX_1","startY_1","tweener_1","easedProgress","clearInterval","getTextWithImage","textSource","imageTextures","textStyle","DUMMYTEXTELEMENTHEIGHT","Text","textElements","txtOrImage","sprite","lastX","textWithImageContainer","textElements_1","initializeTextWithImages","multiTextureResource","images","textureName","textRenderer","numImages","randomStrings","split","getRandomImageText","particlesContainer","flame","particlesEmitter"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAhB,GACA,IAAAS,EAAAT,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,GAGAzB,IAAA0B,EAAA,iJC7DAC,EAAA3B,EAAA,IACA2B,EAAA3B,EAAA,KACA2B,EAAA3B,EAAA,oFCFA,IAAM4B,EAAkBd,OAAOS,UAAUC,eAkGzC,SAAAK,EAA2BC,GACvB,MAAyB,mBAAVA,EAOnB,SAAAC,EAA4BC,GACxB,YAAwB,IAATA,EAOnB,SAAAC,EAAyBD,GACrB,MAA+C,oBAAxClB,OAAOS,UAAUW,SAAS3B,KAAKyB,GAlH7B9B,EAAAiC,IAAM,SAASH,EAAUI,GAClC,OAAOR,EAAgBrB,KAAKyB,EAAKI,IA+BrClC,EAAAmC,eAAA,SAAkCC,EAAMC,GACpC,OAAID,EAAIC,GACI,EACDD,IAAMC,EACN,EAEA,GAQfrC,EAAAsC,cAAA,SAAiCF,EAAMC,GACnC,OAAOD,IAAMC,GAOjBrC,EAAAuC,gBAAA,SAAgCC,GAC5B,OAAa,OAATA,EACO,kBACAX,EAAYW,GACZ,uBACAT,EAASS,GACT,KAAOA,EAEP,KAAOA,EAAKR,YAO3BhC,EAAAyC,WAAA,SAA8BD,EAASE,GACnC,QADmC,IAAAA,MAAA,KACtB,OAATF,EACA,MAAO,kBACJ,GAAIX,EAAYW,GACnB,MAAO,uBACJ,GAAIT,EAASS,GAChB,OAAOA,EAAKR,WAEZ,IAAIW,EAAQ,IACRC,GAAQ,EACZ,IAAK,IAAMV,KAAQM,EACXxC,EAAAiC,IAAIO,EAAMN,KACNU,EACAA,GAAQ,EAERD,GAAgBD,EAEpBC,EAAQA,EAAQT,EAAO,IAAYM,EAAMN,IAGjD,OAAOS,EAAQ,KAQvB3C,EAAA2B,aAQA3B,EAAA6B,cAQA7B,EAAA+B,WAQA/B,EAAA6C,uBAAA,SAA0CC,GACtC,OAAIjB,EAAYiB,KAAqBnB,EAAWmB,GACrC,SAASV,EAAGC,GACf,OAAID,EAAIC,EACG,EACAD,IAAMC,EACN,GAEC,GAIT,SAAS7B,EAAMuC,GAClB,OAAgC,EAAzBD,EAAgBtC,EAAGuC,KAStC/C,EAAAgD,gBAAA,SAAmCF,GAC/B,OAAO,SAASV,EAAMC,GAClB,OAAiC,IAA1BS,EAAgBV,EAAGC,mCChJlC,IAAAJ,EAAArB,OAAAS,UAAAC,eACA2B,EAAA,IASA,SAAAC,KA6CA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,sBAAAF,EACA,UAAAG,UAAA,mCAGA,IAAAC,EAAA,IAtBA,SAAAJ,EAAAC,EAAAC,GACAG,KAAAL,KACAK,KAAAJ,UACAI,KAAAH,SAAA,EAmBA,CAAAF,EAAAC,GAAAH,EAAAI,GACAI,EAAAX,IAAAI,IAMA,OAJAD,EAAAS,QAAAD,GACAR,EAAAS,QAAAD,GAAAN,GACAF,EAAAS,QAAAD,IAAAR,EAAAS,QAAAD,GAAAF,GADAN,EAAAS,QAAAD,GAAAE,KAAAJ,IADAN,EAAAS,QAAAD,GAAAF,EAAAN,EAAAW,gBAIAX,EAUA,SAAAY,EAAAZ,EAAAQ,GACA,KAAAR,EAAAW,aAAAX,EAAAS,QAAA,IAAAX,SACAE,EAAAS,QAAAD,GAUA,SAAAK,IACAN,KAAAE,QAAA,IAAAX,EACAS,KAAAI,aAAA,EAxEAnD,OAAAsD,SACAhB,EAAA7B,UAAAT,OAAAsD,OAAA,OAMA,IAAAhB,GAAAiB,YAAAlB,GAAA,IA2EAgB,EAAA5C,UAAA+C,WAAA,WACA,IACAC,EACA5D,EAFA6D,KAIA,OAAAX,KAAAI,aAAA,OAAAO,EAEA,IAAA7D,KAAA4D,EAAAV,KAAAE,QACA5B,EAAA5B,KAAAgE,EAAA5D,IAAA6D,EAAAR,KAAAb,EAAAxC,EAAA8D,MAAA,GAAA9D,GAGA,OAAAG,OAAA4D,sBACAF,EAAAG,OAAA7D,OAAA4D,sBAAAH,IAGAC,GAUAL,EAAA5C,UAAAqD,UAAA,SAAArB,GACA,IAAAO,EAAAX,IAAAI,IACAsB,EAAAhB,KAAAE,QAAAD,GAEA,IAAAe,EAAA,SACA,GAAAA,EAAArB,GAAA,OAAAqB,EAAArB,IAEA,QAAApD,EAAA,EAAAC,EAAAwE,EAAAC,OAAAC,EAAA,IAAAC,MAAA3E,GAAyDD,EAAAC,EAAOD,IAChE2E,EAAA3E,GAAAyE,EAAAzE,GAAAoD,GAGA,OAAAuB,GAUAZ,EAAA5C,UAAA0D,cAAA,SAAA1B,GACA,IAAAO,EAAAX,IAAAI,IACAqB,EAAAf,KAAAE,QAAAD,GAEA,OAAAc,EACAA,EAAApB,GAAA,EACAoB,EAAAE,OAFA,GAYAX,EAAA5C,UAAA2D,KAAA,SAAA3B,EAAA4B,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAzB,EAAAX,IAAAI,IAEA,IAAAM,KAAAE,QAAAD,GAAA,SAEA,IAEA0B,EACApF,EAHAwE,EAAAf,KAAAE,QAAAD,GACA2B,EAAAC,UAAAZ,OAIA,GAAAF,EAAApB,GAAA,CAGA,OAFAoB,EAAAlB,MAAAG,KAAA8B,eAAApC,EAAAqB,EAAApB,QAAAoC,GAAA,GAEAH,GACA,cAAAb,EAAApB,GAAAjD,KAAAqE,EAAAnB,UAAA,EACA,cAAAmB,EAAApB,GAAAjD,KAAAqE,EAAAnB,QAAA0B,IAAA,EACA,cAAAP,EAAApB,GAAAjD,KAAAqE,EAAAnB,QAAA0B,EAAAC,IAAA,EACA,cAAAR,EAAApB,GAAAjD,KAAAqE,EAAAnB,QAAA0B,EAAAC,EAAAC,IAAA,EACA,cAAAT,EAAApB,GAAAjD,KAAAqE,EAAAnB,QAAA0B,EAAAC,EAAAC,EAAAC,IAAA,EACA,cAAAV,EAAApB,GAAAjD,KAAAqE,EAAAnB,QAAA0B,EAAAC,EAAAC,EAAAC,EAAAC,IAAA,EAGA,IAAAnF,EAAA,EAAAoF,EAAA,IAAAR,MAAAS,EAAA,GAAyCrF,EAAAqF,EAASrF,IAClDoF,EAAApF,EAAA,GAAAsF,UAAAtF,GAGAwE,EAAApB,GAAAqC,MAAAjB,EAAAnB,QAAA+B,OACG,CACH,IACAM,EADAhB,EAAAF,EAAAE,OAGA,IAAA1E,EAAA,EAAeA,EAAA0E,EAAY1E,IAG3B,OAFAwE,EAAAxE,GAAAsD,MAAAG,KAAA8B,eAAApC,EAAAqB,EAAAxE,GAAAoD,QAAAoC,GAAA,GAEAH,GACA,OAAAb,EAAAxE,GAAAoD,GAAAjD,KAAAqE,EAAAxE,GAAAqD,SAA2D,MAC3D,OAAAmB,EAAAxE,GAAAoD,GAAAjD,KAAAqE,EAAAxE,GAAAqD,QAAA0B,GAA+D,MAC/D,OAAAP,EAAAxE,GAAAoD,GAAAjD,KAAAqE,EAAAxE,GAAAqD,QAAA0B,EAAAC,GAAmE,MACnE,OAAAR,EAAAxE,GAAAoD,GAAAjD,KAAAqE,EAAAxE,GAAAqD,QAAA0B,EAAAC,EAAAC,GAAuE,MACvE,QACA,IAAAG,EAAA,IAAAM,EAAA,EAAAN,EAAA,IAAAR,MAAAS,EAAA,GAA0DK,EAAAL,EAASK,IACnEN,EAAAM,EAAA,GAAAJ,UAAAI,GAGAlB,EAAAxE,GAAAoD,GAAAqC,MAAAjB,EAAAxE,GAAAqD,QAAA+B,IAKA,UAYArB,EAAA5C,UAAAwE,GAAA,SAAAxC,EAAAC,EAAAC,GACA,OAAAJ,EAAAQ,KAAAN,EAAAC,EAAAC,GAAA,IAYAU,EAAA5C,UAAAmC,KAAA,SAAAH,EAAAC,EAAAC,GACA,OAAAJ,EAAAQ,KAAAN,EAAAC,EAAAC,GAAA,IAaAU,EAAA5C,UAAAoE,eAAA,SAAApC,EAAAC,EAAAC,EAAAC,GACA,IAAAI,EAAAX,IAAAI,IAEA,IAAAM,KAAAE,QAAAD,GAAA,OAAAD,KACA,IAAAL,EAEA,OADAU,EAAAL,KAAAC,GACAD,KAGA,IAAAe,EAAAf,KAAAE,QAAAD,GAEA,GAAAc,EAAApB,GAEAoB,EAAApB,QACAE,IAAAkB,EAAAlB,MACAD,GAAAmB,EAAAnB,aAEAS,EAAAL,KAAAC,OAEG,CACH,QAAA1D,EAAA,EAAAmE,KAAAO,EAAAF,EAAAE,OAA2D1E,EAAA0E,EAAY1E,KAEvEwE,EAAAxE,GAAAoD,QACAE,IAAAkB,EAAAxE,GAAAsD,MACAD,GAAAmB,EAAAxE,GAAAqD,cAEAc,EAAAP,KAAAY,EAAAxE,IAOAmE,EAAAO,OAAAjB,KAAAE,QAAAD,GAAA,IAAAS,EAAAO,OAAAP,EAAA,GAAAA,EACAL,EAAAL,KAAAC,GAGA,OAAAD,MAUAM,EAAA5C,UAAAyE,mBAAA,SAAAzC,GACA,IAAAO,EAUA,OARAP,GACAO,EAAAX,IAAAI,IACAM,KAAAE,QAAAD,IAAAI,EAAAL,KAAAC,KAEAD,KAAAE,QAAA,IAAAX,EACAS,KAAAI,aAAA,GAGAJ,MAMAM,EAAA5C,UAAA0E,IAAA9B,EAAA5C,UAAAoE,eACAxB,EAAA5C,UAAA8B,YAAAc,EAAA5C,UAAAwE,GAKA5B,EAAA+B,SAAA/C,EAKAgB,iBAMAhE,EAAAD,QAAAiE,iFC3UAnE,EAAA,GAKAA,EAAA,GACqBmG,8GCRrB,IAAAC,EAAApG,EAAA,GAMAqG,EAAArG,EAAA,IACAA,EAAA,IAEA,IAAAsG,EAAAtG,EAAA,IAEAuG,EAAAvG,EAAA,IAEAwG,EAAAxG,EAAA,IAQCE,EAAAiG,aAAA,WAEG,IAOMM,EAASL,EAAAM,IAAIC,sBAAyC,aAAc,SAAUC,SAASC,eAAe,aAExGC,EAAqCF,SAASC,eAAe,eAC7DE,EAAmCH,SAASC,eAAe,cAC3DG,EAAoCJ,SAASC,eAAe,mBAC5DI,EAAsCL,SAASC,eAAe,oBAC9DK,EAAyB,KACzBC,EAA0B,KAC1BC,EAA6B,KAEjCN,EAAgBO,QAAU,WAClBP,EAAgBQ,QAChBH,EAAmBb,EAAAiB,QAAqBC,GAExCL,GAAoBA,KAG5BJ,EAAeM,QAAU,WACjBN,EAAeO,QACfJ,EAAkBV,EAAAe,QAAqBC,GAEvCN,GAAmBA,KAG3BF,EAAgBK,QAAU,WAClBL,EAAgBM,QAChBF,EAAmBb,EAAAkB,yBAAyBD,EAAIE,OAEhDN,GAAoBA,KAG5BH,EAAiBI,QAAU,WACnBJ,EAAiBK,QACjBV,SAASC,eAAe,YAAYc,oBAEpCf,SAASgB,kBAGjB,IAAMC,GACFC,MA1CQ,IA2CRC,OA1CS,IA2CTC,MAAO,oBACPC,MAAO,SACPC,WAAYC,OAAOC,iBACnBC,aAAa,EACbC,aAAa,EACbC,gBAAiB,EACjBC,KAAM/B,EACNgC,SAAS,EACTC,mBAAmB,GAGjBlB,EAAe,IAAIpB,EAAAuC,eAAQd,GAG3Be,IACDC,GAAI,OAAQC,IAAK,+BAAgCC,SAAU1C,EAAA2C,cAAcC,KAAMC,KAAM,YACrFL,GAAI,UAAWC,IAAK,0BAA2BC,SAAU1C,EAAA2C,cAAcG,OAAQD,KAAM,UACrFL,GAAI,QAASC,IAAK,wBAAyBC,SAAU1C,EAAA2C,cAAcG,OAAQD,KAAM,UAMhFE,EAA2B,IAAI/C,EAAAgD,iBACrCD,EAAOrD,GAAGM,EAAAgD,iBAAiBC,sBAqC3B,SAAwB9D,IAlBxB,SAA+BuD,GAC3B,OAAQA,GAEJ,KAAK1C,EAAA2C,cAAcC,KACf9B,EAAmBb,EAAAiB,QAAqBC,GACxCV,EAAgByC,UAAW,EAC3B,MAEJ,KAAKlD,EAAA2C,cAAcG,OAEfpC,EAAewC,UAAW,EAC1BvC,EAAgBuC,UAAW,GAQnCC,CAAsBhE,EAAKuD,YAhC/BK,EAAOK,UAAUb,GAAQc,OAKP,IAAIC,KAAKC,WACvBC,WAAY,UACZC,SAAU,GACVC,KAAM,UACNC,UAAU,EACVC,cAAe,wYChHvB,IAAA9F,EAAAnE,EAAA,GACAA,EAAA,GACA,IAAAoG,EAAApG,EAAA,GACAA,EAAA,GACA,IAAA2J,EAAA3J,EAAA,GACAkK,EAAAlK,EAAA,IACAmK,EAAAnK,EAAA,IACAoK,EAAApK,EAAA,IACAqK,EAAArK,EAAA,IACAsK,EAAAtK,EAAA,IACAuK,EAAAvK,EAAA,IACAwK,EAAAxK,EAAA,IACAyK,EAAAzK,EAAA,IAEA0K,EAAA1K,EAAA,IACA2K,EAAA3K,EAAA,IACA4K,EAAA5K,EAAA,IACA6K,EAAA7K,EAAA,IACA8K,EAAA9K,EAAA,IACA+K,EAAA/K,EAAA,IAgBA2I,EAAA,SAAAqC,GAiDI,SAAArC,EAAYsC,GAAZ,IAAAC,EACIF,EAAAzK,KAAAsD,OAAOA,YApCMqH,EAAAC,mBAAqB,OACrBD,EAAAE,mBAAqB,WAErBF,EAAAG,gBACbvD,MAAO,IACPC,OAAQ,IACRC,MAAOkD,EAAKC,mBACZlD,MAAOiD,EAAKE,mBACZ3C,SAAS,EACT6C,eAAe,GAGFJ,EAAAK,iBACbC,MAAO,cACPC,KAAM,EACNC,MAAO,EACPC,QAAS,GACTC,OAAQ,KAqBHX,IACDA,EAAUC,EAAKG,gBAGnBH,EAAKW,UAAW,EAEhBX,EAAKY,gBAAkB,IAAI3B,EAAA4B,gBAE3Bb,EAAK1D,IAAM,IAAImC,EAAKqC,YAAYf,GAChCC,EAAK1D,IAAIE,MAAQ,IAAIiC,EAAKsC,QAAQC,MAElChB,EAAKiB,UAAUlB,GACfC,EAAKkB,OAAOC,IAAInB,EAAKoB,OAAOC,KAAKrB,IAEjCA,EAAKrD,WAAaoD,IAsO1B,OAxSoCuB,EAAA7D,EAAAqC,GAMlBrC,EAAA8D,gBAAd,SAA8BC,GAC1B,IAAMC,EAAkBD,GAAoB9F,SAASgG,gBAEjD1C,EAAW2C,SACX3C,EAAW4C,OAAOH,IA2D1B7L,OAAAC,eAAI4H,EAAApH,UAAA,qBAAJ,WACI,OAAOsC,KAAKkE,wCAGhBjH,OAAAC,eAAI4H,EAAApH,UAAA,oBAAJ,WACI,OAAOsC,KAAKiE,uCAGhBhH,OAAAC,eAAI4H,EAAApH,UAAA,aAAJ,WACI,OAAOsC,KAAK2D,IAAIE,uCAGpB5G,OAAAC,eAAI4H,EAAApH,UAAA,cAAJ,WACI,OAAOsC,KAAK2D,IAAI4E,wCAGpBtL,OAAAC,eAAI4H,EAAApH,UAAA,gBAAJ,WACI,OAAOsC,KAAK2D,IAAIuF,0CAGpBjM,OAAAC,eAAI4H,EAAApH,UAAA,cAAJ,WACI,OAAOsC,KAAK2D,IAAIwF,wCAGpBlM,OAAAC,eAAI4H,EAAApH,UAAA,YAAJ,WACI,OAAOsC,KAAK2D,IAAIgB,sCAObG,EAAApH,UAAA0L,aAAP,WACI,OACIhB,SACIe,QACIlF,MAAOjE,KAAKmJ,OAAOlF,MACnBC,OAAQlE,KAAKmJ,OAAOjF,QAExBS,MACIV,MAAOjE,KAAK2E,KAAK0E,YACjBnF,OAAQlE,KAAK2E,KAAK2E,cAEtBzF,OACI0F,EAAGvJ,KAAK6D,MAAM0F,EACdC,EAAGxJ,KAAK6D,MAAM2F,EACdC,aAAczJ,KAAKyJ,aACnBC,cAAe1J,KAAK0J,cACpBC,aAAcC,KAAKC,KAAK7J,KAAKyJ,aAAezJ,KAAK6D,MAAMM,MAAMoF,GAC7DO,cAAeF,KAAKC,KAAK7J,KAAK0J,cAAgB1J,KAAK6D,MAAMM,MAAMqF,GAC/DO,OAAQ/J,KAAK6D,MAAMM,MAAMoF,EAAES,QAAQ,GACnCC,OAAQjK,KAAK6D,MAAMM,MAAMqF,EAAEQ,QAAQ,GACnCE,QAASlK,KAAKgE,WAAWG,MAAQnE,KAAKgE,WAAWG,MAAMgG,UAAYnK,KAAKsH,mBACxE8C,UAAWpK,KAAKgE,WAAWI,MAAQpE,KAAKgE,WAAWI,MAAM+F,UAAYnK,KAAKuH,mBAC1E8C,YAAarK,KAAKsK,UAAY,YAAc,eAMpDxF,EAAApH,UAAA4K,UAAR,SAAkBlB,GAKd,OAJApH,KAAKiE,MAAQmD,EAAQnD,MACrBjE,KAAKkE,OAASkD,EAAQlD,OACtBlE,KAAKsK,UAAatK,KAAKiE,OAASjE,KAAKkE,OAE7BkD,EAAQhD,OACZ,IAAK,aACDpE,KAAKuK,cAAgB,IAAI1D,EAAA2D,eACzB,MAEJ,IAAK,YACDxK,KAAKuK,cAAgB,IAAIxD,EAAA0D,cACzB,MAEJ,IAAK,cACDzK,KAAKuK,cAAgB,IAAI5D,EAAA+D,gBACzB,MAEJ,IAAK,SACD1K,KAAKuK,cAAgB,IAAI7D,EAAAiE,YACzB,MAEJ,IAAK,eACD3K,KAAKuK,cAAgB,IAAI3D,EAAAgE,iBACzB,MAEJ,IAAK,cACD5K,KAAKuK,cAAgB,IAAI/D,EAAAqE,gBACzB,MAEJ,IAAK,gBACD7K,KAAKuK,cAAgB,IAAIhE,EAAAuE,kBACzB,MAEJ,IAAK,eACD9K,KAAKuK,cAAgB,IAAI9D,EAAAsE,iBACzB,MAEJ,QACI/K,KAAKuK,cAAgB,IAAIzD,EAAAkE,aAIjC,OAAQ5D,EAAQjD,OACZ,IAAK,oBACDnE,KAAKiL,cAAgB,IAAIhE,EAAAiE,qBACzB,MAEJ,IAAK,YACDlL,KAAKiL,cAAgB,IAAIjE,EAAAmE,cACzB,MAEJ,QACInL,KAAKiL,cAAgB,IAAI/D,EAAAkE,UAI7BhE,EAAQxC,SACR5E,KAAKqL,iBAGJjE,EAAQK,eACTzH,KAAKiI,gBAAgBqD,OAGpBlE,EAAQzC,MACT5B,SAASwI,KAAKC,YAAYxL,KAAK2D,IAAIgB,OAInCG,EAAApH,UAAA2N,eAAR,WACIrL,KAAKyL,SAAW,IAAIC,SAASnJ,EAAAM,IAAI8I,iBAAiB,aAAc3L,KAAK0H,iBACrE1H,KAAKuI,OAAOC,IAAIxI,KAAKyL,SAASG,MAC9B5L,KAAKyL,SAASI,QAGV/G,EAAApH,UAAA+K,OAAR,WACI,IAAMqD,EAAa9L,KAAKkJ,SAAS9B,QAAQ/C,YAAc,EACjDJ,EAAQ2F,KAAKmC,MAAM/L,KAAK2E,KAAK0E,YAAcyC,GAC3C5H,EAAS0F,KAAKmC,MAAM/L,KAAK2E,KAAK2E,aAAewC,GAEnD,IAAK9L,KAAKgI,WAAahI,KAAK2E,KAAKV,QAAUA,GAASjE,KAAK2E,KAAKT,SAAWA,GAAS,CAC9ElE,KAAKgI,UAAW,EAGhBhI,KAAKqB,KAAKkB,EAAAyJ,oBAAoBC,cAG9BjM,KAAKkJ,SAAST,OAAOzI,KAAK2E,KAAK0E,YAAarJ,KAAK2E,KAAK2E,cAGtD,IAAM4C,EAAqBlM,KAAKmM,YAGhCnM,KAAKmE,QAGLnE,KAAKoE,QAGLpE,KAAKiI,gBAAgBmE,OAAOpM,KAAKoJ,gBAEjCpJ,KAAKgI,UAAW,EAGhBhI,KAAKqB,KAAKkB,EAAAyJ,oBAAoBK,YAC1BxI,OACIyI,UACI/C,EAAGvJ,KAAK6D,MAAMyI,SAAS/C,EACvBC,EAAGxJ,KAAK6D,MAAMyI,SAAS9C,GAE3BrF,OACIoF,EAAGvJ,KAAK6D,MAAMM,MAAMoF,EACpBC,EAAGxJ,KAAK6D,MAAMM,MAAMqF,GAExB+C,MACItI,MAAOjE,KAAKyJ,aAAezJ,KAAK6D,MAAMM,MAAMoF,EAC5CrF,OAAQlE,KAAK0J,cAAgB1J,KAAK6D,MAAMM,MAAMqF,GAElDa,aACIC,UAAWtK,KAAKsK,UAChBkC,QAASN,IAGjBvH,MACIV,MAAOjE,KAAK2E,KAAKV,MACjBC,OAAQlE,KAAK2E,KAAKT,YAM1BY,EAAApH,UAAAyO,UAAR,WACI,IAAIK,GAAU,EAgBd,OAdIxM,KAAKgE,WAAWa,oBACZ7E,KAAKsK,WAAatK,KAAK2E,KAAK2E,aAAetJ,KAAK2E,KAAK0E,aAErDmD,GAAU,EACVxM,KAAKsK,WAAY,EACjBtK,KAAKyM,aAEGzM,KAAKsK,WAAatK,KAAK2E,KAAK0E,YAAcrJ,KAAK2E,KAAK2E,eAC5DkD,GAAU,EACVxM,KAAKsK,WAAY,EACjBtK,KAAKyM,aAIND,GAGH1H,EAAApH,UAAA+O,SAAR,WACI,IAAMC,EAAQ1M,KAAKiE,MACnBjE,KAAKiE,MAAQjE,KAAKkE,OAClBlE,KAAKkE,OAASwI,GAGV5H,EAAApH,UAAAyG,MAAR,WACU,IAAAwI,EAAA3M,KAAAiL,cAAA9G,MAAAnE,KAAAyJ,aAAAzJ,KAAA0J,cAAA1J,KAAA2E,KAAA0E,YAAArJ,KAAA2E,KAAA2E,cAACS,EAAA4C,EAAA5C,OAAQE,EAAA0C,EAAA1C,OACfjK,KAAK6D,MAAMM,MAAMyI,IAAI7C,EAAQE,IAGzBnF,EAAApH,UAAA0G,MAAR,WACU,IAAAuI,EAAA3M,KAAAuK,cAAAnG,MAAApE,KAAAyJ,aAAAzJ,KAAA6D,MAAAM,MAAAoF,EAAAvJ,KAAA0J,cAAA1J,KAAA6D,MAAAM,MAAAqF,EAAAxJ,KAAA2E,KAAA0E,YAAArJ,KAAA2E,KAAA2E,cAACC,EAAAoD,EAAApD,EAAGC,EAAAmD,EAAAnD,EACVxJ,KAAK6D,MAAMyI,SAASM,IAAIrD,EAAGC,IAEnC1E,EAxSA,CAAoCxE,GAAvBjE,EAAAyI,iCC5BZ,SAAA+H,EAAA9K,GACD,aASA,SAAA+K,EAAAhQ,GACA,OAAAiG,SAAAgK,cAAAjQ,GAWA,SAAAkQ,EAAAnE,EAAAlB,GACA,QAAA7K,KAAA6K,EACA,IACAkB,EAAAoE,MAAAnQ,GAAA6K,EAAA7K,GACI,MAAAoQ,IAEJ,OAAArE,EAUA,SAAAxD,EAAA8H,GACA,aAAAA,EACAC,OAAAD,GAGA,iBAAAA,GAAA,mBAAAA,EACAlQ,OAAAS,UAAAW,SAAA3B,KAAAyQ,GAAAE,MAAA,kBAAAC,eAAA,gBAGAH,EAWA,SAAAI,EAAAJ,EAAAK,GACA,aAAAnI,EAAAmI,GACA,SAEA,GAAAA,EAAAC,QACA,OAAAD,EAAAC,QAAAN,GAEA,QAAA5Q,EAAA,EAAAC,EAAAgR,EAAAvM,OAAmC1E,EAAAC,EAAOD,IAC1C,GAAAiR,EAAAjR,KAAA4Q,EACA,OAAA5Q,EAGA,SAWA,SAAAmR,IACA,IAAA/L,EAAAE,UACA,QAAA8L,KAAAhM,EAAA,GACA,GAAAA,EAAA,GAAAhE,eAAAgQ,GACA,OAAAtI,EAAA1D,EAAA,GAAAgM,KACA,aACAhM,EAAA,GAAAgM,GAAAD,KAA8B/L,EAAA,GAAAgM,GAAAhM,EAAA,GAAAgM,IAC9B,MAEA,YACAhM,EAAA,GAAAgM,GAAAhM,EAAA,GAAAgM,GAAA/M,MAAA,GACA,MAEA,QACAe,EAAA,GAAAgM,GAAAhM,EAAA,GAAAgM,GAIA,OAAAhM,EAAAV,OAAA,EACAyM,EAAA1L,MAAA,MAAAL,EAAA,IAAAb,OAAAK,MAAAzD,UAAAkD,MAAAlE,KAAAiF,EAAA,KACAA,EAAA,GA6DA,SAAAiM,EAAAhR,GAEA,YADAA,EAAAgN,KAAAiE,MAAA,IAAAjR,GAAAyB,SAAA,KACA4C,OAAA,IAAArE,IAaA,SAAAmD,EAAA8I,EAAAiF,EAAAC,EAAAC,GACAnF,EAAAoF,iBACApF,EAAAmF,EAAA,0CAAAF,EAAAC,GAAA,GACGlF,EAAAqF,aACHrF,EAAAmF,EAAA,kCAAAF,EAAAC,GAKA,IAAAI,GACA,WACA,IAAAC,EAAAvB,EAAAwB,YACA,GAAAD,MAAAE,KAAAF,EAAAG,WAAA,CACA,IAAAC,EAAAJ,EAAAE,IAAA,kBACAH,EAAAC,EAAAI,GAAA9F,KAAA0F,QAEAD,EAAA,WACA,WAAAM,MAPA,GAaA,IAAAC,EAAA7B,EAAA8B,sBAAA9B,EAAA+B,4BACAC,EAAAhC,EAAAiC,uBACA,WAMA,IALA,IAAAC,GAAA,oBACAC,EAAA,EAIAzS,EAAA,EAAAC,EAAAuS,EAAA9N,OAAqC1E,EAAAC,IAAAkS,IAAenS,EACpDmS,EAAA7B,EAAAkC,EAAAxS,GAAA,yBAAAsQ,EAAAkC,EAAAxS,GAAA,+BACAsS,EAAAH,GAAA7B,EAAAkC,EAAAxS,GAAA,yBAGAmS,IACAG,EAAA,SAAAI,GACA,IAAAC,EAAAf,IACAgB,EAAAvF,KAAAwF,IAAA,MAAAF,EAAAF,IAEA,OADAA,EAAAE,EAAAC,EACAtC,EAAAwC,WAAA,WAAqCJ,EAAAC,EAAAC,IAAmCA,IAGxET,EAAA,SAAA1J,GACAsK,aAAAtK,KApBA,GA0BA,IAAAuK,EAAA,WAAAlK,EAAAtC,SAAAgK,cAAA,OAAAyC,aAAA,0BAQA,SAAA9D,EAAA+D,EAAArI,GAEA,WAAA/B,EAAAoK,MAAAC,WAAA3N,IACAqF,EAAAqI,EACAA,EAAA1M,SAAAwI,MAEAkE,IACAA,EAAA1M,SAAAwI,MAIA,IAKA5D,EAAAgI,EAQAC,EAKAC,EAAAC,EAEAC,EAAAC,EAAAzT,EAAA0F,EApBAgO,EAAAjQ,KACAhD,EAAA0Q,KAAmBhC,EAAAwE,SAAA9I,OAEnB+I,KACAC,KAEAC,EAAA,IACAC,KAGAC,EAAAvT,EAAAwT,UACAC,EAAA,EACAC,EAAAvC,IAAAoC,EAGAI,KACAC,KAGAC,EAAA,QAAA7T,EAAA6O,KA6JA,SAAAiF,EAAAC,EAAA5D,EAAA6D,EAAA5B,GACA,OAAAO,EAAA,EAAAoB,GAAAnH,KAAAiE,MAAAjE,KAAAoH,KAAA7D,EAAA6D,IAAA5B,EAAA4B,GAAAX,OAQA,SAAAY,IAEAd,EAAAe,OAAAC,MAAAN,IACAV,EAAAe,OAAAC,IAAAN,EACAV,EAAAe,OAAA3B,GAAAsB,EAAA,YAGAb,EAAAa,EAAAZ,EAAAkB,IAAAlB,EAAAmB,SACAjB,EAAAH,MAAAT,GAAAS,EAAA,WAAAA,EAAAhG,QAAAgG,EAAA,KAAAhT,EAAAqU,UAQA,SAAAC,IAYA,GAXA1B,EAAAzB,IAEAuC,EAAAd,EAAA5S,EAAAwT,YACAP,EAAAkB,KAAAlB,EAAAkB,IAAAvH,KAAAwF,IAAA,KAAApS,EAAAuU,UAAAvU,EAAAwU,UACAvB,EAAAmB,SAAA,IAAAnB,EAAAkB,KA/CA,WACA,IAAA5U,EAAAS,EAAA8K,QAAsBvL,KACtBoU,EAAApU,GAAA,IAAAA,EAAA0T,EAAAkB,IAAAR,EAAApU,EAAA,GACAqU,EAAArU,GAAA,IAAAA,EAAA0T,EAAAmB,SAAAR,EAAArU,EAAA,GA+CAkV,GACAR,IAGAjU,EAAA4K,KAAA,CACA,GAAA0I,EAAArP,OACA,IAAA1E,EAAA+T,EAAArP,OAA6B1E,KAC7B+T,EAAA/T,GAAA4T,GAAAlD,MAAAtF,EAAA2I,EAAA/T,GAAAO,MAAA4U,QAAAb,EACAC,EAAAnJ,EAAA2I,EAAA/T,GAAAO,MAAAiU,QAAAd,EAAAkB,IAAA,EAAAnU,EAAA2U,QACAb,EAAAnJ,EAAA2I,EAAA/T,GAAAO,MAAAiU,QAAAd,EAAAmB,SAAApU,EAAAwT,UAAA,GAIA,GAAAL,EAAAtI,OAAAF,EAAAiK,OAAAF,OACA,IAAAnV,EAAA6T,EAAAnP,OAA0B1E,KAC1B6T,EAAA7T,GAAA0Q,MAAAtF,EAAAiK,OAAAF,QAAAb,EACAC,EAAAnJ,EAAAiK,OAAAb,QAAAJ,EAAApU,GAAA,EAAAS,EAAA2U,QACAb,EAAAnJ,EAAAiK,OAAAb,QAAAH,EAAArU,GAAAS,EAAAwT,UAAA,GAMA,GAAAL,EAAAtI,MACA,IAAA5F,EAAA,EAAeA,EAAAjF,EAAA8K,QAAe7F,IAC9BmO,EAAAnO,GAAAgL,MAAA/I,QAAA2M,EACAF,EAAA1O,GAAA2H,KAAAiE,MAAAkC,EAAA/S,EAAA2U,OAAA/H,KAAAoH,IAAAL,EAAA1O,GAAAjF,EAAA2U,SAAA,EACAf,EAAA3O,GAAA2H,KAAAiE,MAAAkC,EAAA/S,EAAAwT,UAAA5G,KAAAoH,IAAAJ,EAAA3O,GAAAjF,EAAAwT,YAAA,GACA,KAUA,SAAAqB,IACA7U,EAAAwU,SAAA,IACA3B,EAAAhB,EAAAgD,GACAP,MAEAzB,EAAAR,WAAAwC,EAAA7U,EAAAwU,UACA1B,EAAAjB,EAAAyC,IASA,SAAAQ,EAAApS,IACAA,KAAA4E,OAAA5E,OACAqS,gBACArS,EAAAqS,iBACArS,EAAAsS,oBAEAtS,EAAAuS,aAAA,EACAvS,EAAAwS,cAAA,GAEAjC,EAAAhH,SAsBA,SAAAkJ,IAEAnV,EAAAoV,UACArS,EAAAoQ,EAAAkC,UAAArV,EAAAoV,SAAAN,EAAA,GAGArC,EAAA6C,YAAAnC,EAAAkC,WA2BA,SAAAE,IAiBA,QAAA5E,KAfAwC,EAAAkC,WACAF,IAxBA,WAKA,GAJAxK,EAAA+D,EAAA/D,MAAA3K,EAAA2K,SAGAgI,EAAAhI,EAAA6K,sBACAvR,QAAA0G,EAAAgI,SAAA1O,OAAA,CACA,IAAAgB,EAAA,EAAeA,EAAA0F,EAAAgI,SAAA1O,OAA2BgB,IAE1C,IADA0N,EAAA1N,MACA1F,EAAA,EAAgBA,GAAA8T,EAAgB9T,IAChCoT,EAAA1N,GAAA1F,IAlcAkW,EAkcA,IAAApC,EAAA9T,EAlcAsB,EAkcA8J,EAAAgI,SAAA1N,GAAAyQ,WAlcAlW,EAkcAmL,EAAAgI,SAAA1N,GAAA0Q,UAjcAC,SAAAC,SAAAnU,SACAU,SAAA4R,SAAA8B,SAAAC,SAQA,IALA3T,EADA5C,GAAA,GACAA,GAAA,EAAAqB,GAEArB,EAAAqB,EAAArB,EAAAqB,GAIA,QAOAkV,EAAA3T,IAJAA,GADA4R,EAAA,EAAAxU,EAAA4C,IACAA,KACAqT,GAAA,IACAK,EAAAlJ,KAAAmC,MAAA0G,KAGA,IAAAK,GAAA,IAAAA,GACAF,EAAAxT,EACAyT,EAAA7B,EAAA+B,EACArU,EAAAsS,GACI,IAAA8B,GACJF,EAAAxT,EAAA2T,EACAF,EAAAzT,EACAV,EAAAsS,GACI,IAAA8B,GACJF,EAAA5B,EACA6B,EAAAzT,EACAV,EAAAsS,EAAA+B,GACI,IAAAD,GACJF,EAAA5B,EACA6B,EAAAzT,EAAA2T,EACArU,EAAAU,GACI,IAAA0T,GACJF,EAAA5B,EAAA+B,EACAF,EAAA7B,EACAtS,EAAAU,IAEAwT,EAAAxT,EACAyT,EAAA7B,EACAtS,EAAAU,EAAA2T,GAEA,IAAAnF,EAAAgF,GAAAhF,EAAAiF,GAAAjF,EAAAlP,KAyZAiJ,EAAA6K,iBAAA7C,EArcA,IAAA8C,EAAA5U,EAAArB,EACAoW,EAAAC,EAAAnU,EACAU,EAAA4R,EAAA8B,EAAAC,EAmdAC,GAGA7C,EAAAkC,UAAArF,EAAAF,EAAA,OAAAnF,EAAA0K,WACAlC,EAAAH,MAAAG,EAAAkC,UAAA7G,YAAAwB,EAAAF,EAAA,OAAAnF,EAAAqI,QACAG,EAAAe,OAAAf,EAAAkC,UAAA7G,YAAAwB,EAAAF,EAAA,OAAAnF,EAAAuJ,SACAf,EAAAtI,MAAA7K,EAAA6K,MAAAsI,EAAAkC,UAAA7G,YAAAwB,EAAAF,EAAA,OAAAnF,EAAAE,QAAA,EAGAyI,EAAArP,OAAA,EACAkP,EACAA,EAAAxC,IAAAhG,EAAAgG,GAAA+D,QACApB,EAAAnQ,MACArD,KAAA6Q,EACAwC,KAAAxC,KAOA,GADAyC,EAAAnP,OAAA,EACAkP,EAAAtI,MAKA,IAHAsI,EAAAtI,MAAAoF,MAAAhJ,MAAAjH,EAAA8K,QAAAH,EAAAiK,OAAA3N,OAAAjH,EAAA8K,QAAA,GAAAH,EAAAiK,OAAAqB,QAAA,KAGA1W,EAAA,EAAeA,EAAAS,EAAA8K,QAAevL,IAC9B6T,EAAA7T,GAAA4T,EAAAtI,MAAA2D,YAAAwB,EAAAF,EAAA,OAAAnF,EAAAiK,SACAxB,EAAA7T,GAAA0Q,MAAAX,SAAA,WACA8D,EAAA7T,GAAA0Q,MAAAiG,OAAA,EACA9C,EAAA7T,GAAA0Q,MAAAkG,MAAA5W,EAAAoL,EAAAiK,OAAA3N,MAAA1H,EAAAoL,EAAAiK,OAAAqB,QAAA,KACA7C,EAAA7T,GAAA0Q,MAAAhJ,MAAA0D,EAAAiK,OAAA3N,MAAA,KACAmM,EAAA7T,GAAA0Q,MAAA/I,OAAA,MAKAkP,IACAnC,IAGAxB,EAAAjE,YAAA2E,EAAAkC,WAGAlC,EAAAtI,QACAkI,EAAAI,EAAAtI,MAAAyB,cAIAtM,EAAAoV,WACA,UAAApV,EAAAoV,WACAjC,EAAAkC,UAAApF,MAAAoG,OAAA,WAEAtT,EAAAoQ,EAAAkC,UAAArV,EAAAoV,SAAAN,IASA,SAAAsB,IACApG,EAAAmD,EAAAkC,UAAArV,GArXAiT,EAAA7I,QAAApK,EACAiT,EAAAkB,IAAA,EACAlB,EAAAmB,SAAA,EACAnB,EAAAqD,SAAA,EAOArD,EAAAsD,UAAA,WACA9C,EAAAtC,KAQA8B,EAAArE,KAAA,WACAgE,EAAAzB,IAEAoC,IADAX,EAAAc,EACAH,GAAAvT,EAAAuU,UACAtB,EAAAkB,IAAA,IAAAZ,EACAN,EAAAmB,SAAAX,EAAAC,EAAAH,EAAAX,EAAAa,EACAC,EAAAd,GAQAK,EAAAuD,MAAA,WAQA,OAPA3D,IACAI,EAAAqD,SAAA,EACAhE,aAAAO,GACAnB,EAAAmB,GACAnB,EAAAoB,GACAD,EAAAC,EAAA,GAEAG,GAQAA,EAAAwD,OAAA,WAKA,OAJA5D,IACAI,EAAAqD,SAAA,EACAzB,KAEA5B,GAWAA,EAAArD,IAAA,SAAA9P,EAAAqQ,GAWA,OAVAnQ,EAAAF,GAAAqQ,EACA0D,EAAA,QAAA7T,EAAA6O,MAGA,IAAA0B,EAAAzQ,EAAA4W,IACAnB,KAEA,IAAAhF,EAAAzQ,EAAA6W,IACAP,IAEAnD,GAQAA,EAAA2D,aAAA,WAEA,OADA3D,EAAArD,IAAA,aACAqD,GAQAA,EAAAY,QAAA,WAEA,OADAZ,EAAArD,IAAA,cACAqD,GAQAA,EAAAhH,OAAA,WAEA,OADAgH,EAAArD,IAAA,OAAAiE,EAAA,YACAZ,GAQAA,EAAA3E,KAAA,WAGA,OAFA2E,EAAAuD,QACArD,EAAAkC,UAAApF,MAAA7E,QAAA,OACA6H,GAQAA,EAAApE,KAAA,WAGA,OAFAoE,EAAAwD,SACAtD,EAAAkC,UAAApF,MAAA7E,QAAA,QACA6H,GAgIAA,EAAA4D,QAAA,WAEA5D,EAAAuD,QAEArB,IAEAlC,EAAArE,KAAAqE,EAAAsD,UAAA,cAuHAhB,IAEAV,IAKAnG,EAAAgC,SAGApJ,OAAAoH,WAGAA,EAAAwE,UACAsB,SAAA,IACAD,UAAA,GACA1F,KAAA,MACAuG,SAAA,QACAf,SAAA,EACAM,OAAA,GACAnB,UAAA,IAGAlE,SAAA,WACAvE,OAAA,GACA+L,KAAA,MACAC,IAAA,MACAZ,MAAA,OACAD,OAAA,OACAc,OAAA,UAGArM,MAAA,OACAC,KAAA,EAGAC,MAAA,EACAC,QAAA,IAIA,IAAA4L,GACA,WACA,QACA,OACA,QACA,WAEAC,GACA,WACA,SACA,OACA,MACA,QACA,SACA,UAlsBC,CAosBArP,QACA,SAAAuI,EAAAnB,EAAA3J,GACD,aAGA2J,EAAA/D,SAGA,IAAAsM,EAAAvI,EAAA/D,MAAAsM,MACAtE,YACA0C,WAEAX,OAAA,KACAX,QAAA,KAGAmD,QAAA,MACAC,SAAA,OACAjQ,OAAA,OACAkQ,WAAA,OACAC,UAAA,QACAC,WAAA,QAEAtE,OAEA0B,OAAA,KACAX,QAAA,KAGAzE,SAAA,WACAyH,IAAA,EACAZ,MAAA,EACAe,QAAA,WACAhQ,OAAA,OACA+B,SAAA,OACAD,WAAA,mCACA+B,OAAA,GAEAmJ,QAEAQ,OAAA,KACAX,QAAA,KAGAzE,SAAA,WACAyH,IAAA,EACAD,KAAA,EACAI,QAAA,WACAhQ,OAAA,OACA+B,SAAA,OACAmO,WAAA,OACApO,WAAA,aACAqO,UAAA,OACAtM,OAAA,GAEAF,OAEA6J,OAAA,KACAX,QAAA,KAGAzE,SAAA,WACAiI,UAAA,cACAC,aAAA,cACAtQ,OAAA,OACA6D,OAAA,GAEA6J,QAEA3N,MAAA,EACAgP,QAAA,EACAvB,OAAA,KACAX,QAAA,OAKArF,EAAA/D,MAAA8M,KAAA/I,EAAAgC,UAAyCuG,GACzCtE,WACA+C,WAAA,GACAC,UAAA,KAEAN,WACAqC,WAAA,OACAC,MAAA,OACAC,OAAA,oBACAN,WAAA,kBAEAtE,OACA0B,OAAA,SAEAE,QACA8C,WAAA,aAKAhJ,EAAA/D,MAAAkN,MAAAnJ,EAAAgC,UAA0CuG,GAC1CtE,WACA+C,WAAA,GACAC,UAAA,KAEAN,WACAsC,MAAA,OACAD,WAAA,OACAJ,WAAA,mEACAQ,UAAA,4BAEA9E,OACA0B,OAAA,SAEAE,QACA8C,WAAA,aAKAhJ,EAAA/D,MAAAoN,SAAArJ,EAAAgC,UAA6CuG,GAC7CtE,WACA+C,WAAA,GACAC,UAAA,KAEAN,WACAX,OAAA,kBACAgD,WAAA,OACAC,MAAA,OACAL,WAAA,2BACAQ,UAAA,4BAEAlD,QACA8C,WAAA,OACAhQ,gBAAA,oBAKAgH,EAAA/D,MAAAlD,YAAAiH,EAAAgC,UAAgDuG,GAChDtE,WACA+C,WAAA,GACAC,UAAA,KAEAN,WACA6B,QAAA,EACAS,MAAA,OACAL,WAAA,4BAEAtE,OACAkE,QAAA,QACAhQ,OAAA,OACAkQ,WAAA,QAEAlD,QACAgD,QAAA,QACAhQ,OAAA,OACAkQ,WAAA,QAEAvM,OACA3D,OAAA,QAEA0N,QACA3N,MAAA,EACAyQ,WAAA,OACAhD,OAAA,kBACAsD,QAAA,MAlKC,CAqKA1Q,OAAAoH,yBC12BSuJ,UACLhY,OAAeiY,OAAOpP,KAAKqP,UAAUzX,WAClC0X,YAAa,SAAUlM,GACflJ,KAAKqV,oBAAsBrV,KAAKqV,oBAAsBnM,EAASoM,eAI9DtV,KAAKuV,SAKVvV,KAAKwV,aAAetM,EAASuM,kBAGzBzV,KAAK0V,YAAc,IAAM1V,KAAK2V,YAIlC3V,KAAK4V,qBAAqB1M,IAXtBlJ,KAAKwV,aAAe,IAa5BK,aAAc,SAAU3M,GAChBlJ,KAAKqV,oBAAsBrV,KAAKqV,oBAAsBnM,EAASoM,eAI9DtV,KAAKuV,SAKVvV,KAAKwV,aAAetM,EAASuM,kBAGzBzV,KAAK0V,YAAc,IAAM1V,KAAK2V,YAIlC3V,KAAK8V,sBAAsB5M,IAXvBlJ,KAAKwV,aAAe,IAa5BI,qBAAsB9P,KAAKqP,UAAUzX,UAAU0X,YAC/CU,sBAAuBhQ,KAAKqP,UAAUzX,UAAUmY,eCFvD5Y,OAAeiY,OAAOpP,KAAKiQ,cAAcrY,WACtCsY,YAAa,KACbX,mBAAoB,KACpBY,YAAa,KACbC,OAAQ,EACRnO,OAAQ,EACRoO,YAAa,EACbX,aAAc,EACdY,mBAAmB,IAGnBtQ,KAAKuQ,WAAavQ,KAAKuQ,UAAUC,kBACjCxQ,KAAKuQ,UAAUC,kBAAkB5Y,UAAU0Y,mBAAoB,EAEzDtQ,KAAawQ,oBAClBxQ,KAAawQ,kBAAkB5Y,UAAU0Y,mBAAoB,SCtDvDG,ECPDtB,+SCUV,SAAUA,GAGN,IAIAuB,EAAA,SAAArP,GA+BI,SAAAqP,EAAYzO,EAAgB0O,GAA5B,IAAApP,EACIF,EAAAzK,KAAAsD,OAAOA,YA3BXqH,EAAAiO,aAAsB,KAEtBjO,EAAAqP,aAAsB,KAEtBrP,EAAAsP,mBAEAtP,EAAAuP,eAAiB,EAEjBvP,EAAAwP,kBAA4B,EAC5BxP,EAAAyP,iBAA2B,EAC3BzP,EAAA0P,aAAuB,EACvB1P,EAAA2P,WAAiC,IAAIC,cAAc,EAAG,EAAG,EAAG,IAI5D5P,EAAA6P,qBAAsB,EACtB7P,EAAA8P,sBAAuB,EAMvB9P,EAAAU,OAAS,EAETV,EAAA+P,YAAa,EAcb/P,EAAAgQ,eACAhQ,EAAAiQ,aAEAjQ,EAAAkQ,qBAA+B,EAZ3BlQ,EAAKU,OAASA,EAEdV,EAAK+P,aAAeX,EAEG,mBAAZA,GACPpP,EAAKnF,GAAG,OAAQuU,KAsI5B,OA7K2B9N,EAAA6N,EAAArP,GAgDvBqP,EAAA9Y,UAAA8Z,OAAA,SAAOC,EAAcC,GACjB,GAAK1X,KAAKe,UAAkB,QAAQ,GAChC,IAAK,IAAIxE,EAAI,EAAGA,EAAImb,EAAOzW,OAAQ1E,IAC/ByD,KAAKqB,KAAK,OAAQqW,EAAOnb,IAG7ByD,KAAKuX,oBACLvX,KAAK2X,2BAA2BF,EAAOC,GAEvCA,EAAOE,KAAKpB,EAAMqB,gBAInBrB,EAAAqB,cAAP,SAAqBpZ,EAAkBC,GACnC,OAAID,EAAEsJ,SAAWrJ,EAAEqJ,OACRtJ,EAAEsJ,OAASrJ,EAAEqJ,OAEpBtJ,EAAEyX,OAASxX,EAAEwX,QACL,EAERzX,EAAEyX,OAASxX,EAAEwX,OACN,EAEJzX,EAAE0X,YAAczX,EAAEyX,aAG7BK,EAAA9Y,UAAAia,2BAAA,SAA2BF,EAAcC,GACrC,MAAM,IAAII,MAAM,wBA6BpBtB,EAAA9Y,UAAAqa,MAAA,WACI/X,KAAKsV,aAAe,KACpBtV,KAAK0W,aAAe,KACpB1W,KAAK2W,gBAAgB1V,OAAS,GAMlCuV,EAAA9Y,UAAAsa,iBAAA,SAAiBnU,EAAcoU,GAC3BjY,KAAKkY,MAAMrU,GACXoU,EAAc5C,mBAAqBrV,KAAKsV,aACpCtV,KAAKsV,aACLtV,KAAKsV,aAAaqB,gBAAgBxW,KAAK8X,GAEvCjY,KAAK2W,gBAAgBxW,KAAK8X,IASlCzB,EAAA9Y,UAAAya,WAAA,SAAWtU,EAAc4T,GACrBzX,KAAKkY,MAAMrU,GACc,MAArB7D,KAAKsV,cACLkB,EAAM4B,WAEVpY,KAAKsV,aAAemC,EACpBzX,KAAK0W,aAAe7S,GAOxB2S,EAAA9Y,UAAA2a,WAAA,SAAWxU,GACF7D,KAAKsV,cAAiBtV,KAAKmX,sBAC5BnX,KAAK+X,SAIbvB,EAAA9Y,UAAAwa,MAAA,SAAMrU,GACF,GAAI7D,KAAK4W,cAAgBJ,EAAM8B,eAC3BtY,KAAK4W,cAAgBJ,EAAM8B,eAC3BtY,KAAK+X,QACL/X,KAAK0W,aAAe7S,OACjB,GAAI7D,KAAKmX,qBAAsB,CAElC,IADA,IAAIoB,EAAUvY,KAAK0W,aACZ6B,GAAWA,GAAW1U,GACzB0U,EAAUA,EAAQC,mBAGtB,GADAxY,KAAK0W,aAAe6B,EACL,MAAXA,EAEA,YADAvY,KAAK+X,UAQVvB,EAAA4B,SAAP,WACQ5B,EAAMiC,mBAAqB,IAAOhK,KAAKH,QACvCkI,EAAMiC,mBAAqBhK,KAAKH,MAChCoK,QAAQC,IAAI,6IAzKbnC,EAAA8B,eAAiB,EAoKjB9B,EAAAiC,mBAAqB,EAQhCjC,EA7KA,CAJe1Q,KAAK8S,MAIatY,cAApB2U,EAAAuB,MAAKA,EAPtB,CAAUvB,WFJAA,UACCsB,EAAqBzQ,KAAK+S,YAAYtC,mBAM5CtZ,OAAeiY,OAAOqB,EAAmB7Y,WACtCob,eAIAC,2BAA4B,SAAUC,EAAcf,EAA8BgB,EAAsBC,EAAsBC,GAC1H,IAAKlB,IAAkBA,EAAc1C,QACjC,OAAO,EAcX,IAAI6D,EAAM,EACNC,EAAoBH,EAAcjB,EAAciB,aAAeA,EAG/DjB,EAAcqB,UACdD,GAAoB,GAGpBpB,EAAc5C,qBACd8D,GAAY,GAIhB,IAAMI,EAAkBtB,EAAsBuB,MAC1CP,EAAeQ,KAAYF,IACtBA,EAAKG,cAAcV,KACpBG,GAAY,IAKhBF,EAAeQ,KAAYxB,EAAc0B,aACpC1B,EAAc0B,WAAWC,SAASZ,EAAMzP,EAAGyP,EAAMxP,KAClD2P,GAAY,IAOpB,IAAMU,EAAkC5B,EAA4B4B,SACpE,GAAI5B,EAAc6B,qBAAuBD,EACrC,IAAK,IAAItd,EAAIsd,EAAS5Y,OAAS,EAAG1E,GAAK,EAAGA,IAAK,CAC3C,IAAMwd,EAAQF,EAAStd,GAGjByd,EAAWha,KAAK+Y,2BAA2BC,EAAOe,EAAOd,EAAcI,EAAmBF,GAChG,GAAIa,EAAU,CAGV,IAAKD,EAAME,OACP,SAGJb,EAAMY,EACNf,EAAee,GAmC3B,OA7BId,IACKC,EAsBGlB,EAAciB,aACdlZ,KAAKka,UAAUjC,EAAe,IApB9BgB,EAAehB,EAAczC,eAEzByC,EAAcqB,SACdrB,EAAckC,eAAeC,aAAapB,EAAOhZ,KAAKqa,YAClDpC,EAAcqB,QAAQM,SAAS5Z,KAAKqa,WAAW9Q,EAAGvJ,KAAKqa,WAAW7Q,KAClE4P,EAAMnB,EAAczC,eAGlByC,EAAsByB,eACvBzB,EAAsByB,cAAcV,KACrCI,EAAMnB,EAAczC,eAK5ByC,EAAciB,aACdlZ,KAAKka,UAAUjC,EAAemB,IAAQK,IAAW,EAAIL,KAS1DA,GAIXkB,mBAAoB,SAAUC,EAAwCtC,EAA8Bha,EAAgBuc,EAAkBtB,GAElI,IAAIuB,EAAqC,KACrCzB,EAAe,KAIfA,EAHCuB,EAAkCG,MAClCH,EAAkCG,KAAKC,QACxCF,EAAmBF,GACMG,KAAKC,OAEtBJ,EAEZva,KAAK4a,2BACL5a,KAAK+Y,2BAA2BC,EAAOf,EAAeuC,EAAU,EAAIf,KAAU,GAC9EzZ,KAAK6a,0BAA0BJ,EAAkBxc,IAGrD2c,yBAA0B,WAEtB5a,KAAK8a,mBAAqB,EACrB9a,KAAK8Y,SAEN9Y,KAAK8Y,gBAET9Y,KAAK8Y,OAAO,GAAG7X,OAAS,EACxBjB,KAAK8Y,OAAO,GAAG7X,OAAS,GAG5BiZ,UAAW,SAAUjC,EAA8B8C,GAC/C,IAAIC,EAAQhb,KAAK8Y,OACjB,GAAIiC,EAAQ/a,KAAK8a,mBACbE,EAAM,GAAG7a,KAAK8X,OACX,CACH,GAAI8C,EAAQ/a,KAAK8a,mBAAoB,CACjC9a,KAAK8a,mBAAqBC,EAE1B,IADA,IAAIE,EAAID,EAAM,GACLze,EAAI,EAAGA,EAAI0e,EAAEha,OAAQ1E,IAC1Bye,EAAM,GAAG7a,KAAK8a,EAAE1e,IAEpBye,EAAM,GAAG/Z,OAAS,EAEtB+Z,EAAM,GAAG7a,KAAK8X,KAGtB4C,0BAA2B,SAAUnb,EAAyBzB,GAI1D,IAHA,IAAI+c,EAAQhb,KAAK8Y,OACbmC,EAAID,EAAM,GACVze,EAAI,EACDA,EAAI0e,EAAEha,OAAQ1E,IACbmD,EAEIzB,GACAA,EAAKyB,EAAOub,EAAE1e,IAAI,GAItB0B,EAAKgd,EAAE1e,IAAI,GAInB,IADA0e,EAAID,EAAM,GACLze,EAAI,EAAGA,EAAI0e,EAAEha,OAAQ1E,IAClBmD,GAEKA,EAAMoJ,SACPpJ,EAAMoJ,OAASmS,EAAE1e,IAEjB0B,GACAA,EAAKyB,EAAOub,EAAE1e,IAAI,IAItB0B,EAAKgd,EAAE1e,IAAI,MGxL/B,SAAU0Y,GACN,IAAAiG,EAAA,WACI,SAAAA,EAAmBzD,GAAAzX,KAAAyX,QAGnBzX,KAAAmb,cAAoC,KACpCnb,KAAAob,aAA0C,KAC1Cpb,KAAAqb,mBAAqB,EACrBrb,KAAAsb,kBAAuC,KA8F3C,OA5FIJ,EAAAxd,UAAA6d,kBAAA,SAAkBrS,GACd,IAAMjF,EAAQiF,EAAWA,EAASC,OAAOlF,MAAQ,IAC3CC,EAASgF,EAAWA,EAASC,OAAOjF,OAAS,IAC7CG,EAAa6E,EAAWA,EAAS7E,WAAayB,KAAK0V,SAASC,WAElEzb,KAAKmb,cAAgBrV,KAAK4V,cAAcnb,OAAO0D,EAAOC,EAAQG,GAE1DrE,KAAKyX,MAAMkE,MAAM7E,kBACjB9W,KAAKob,cACDtV,KAAK4V,cAAcnb,OAAO0D,EAAOC,EAAQG,GACzCyB,KAAK4V,cAAcnb,OAAO0D,EAAOC,EAAQG,MAKrD6W,EAAAxd,UAAAke,iBAAA,WAII,OAHK5b,KAAKmb,eACNnb,KAAKub,oBAEFvb,KAAKmb,eAGhBD,EAAAxd,UAAAme,YAAA,SAAY3S,GACR,IAAMC,EAASD,EAASC,OAEnBnJ,KAAKmb,eACNnb,KAAKub,kBAAkBrS,GAG3B,IAAM4S,EAAK9b,KAAKmb,cACVQ,EAAQ3b,KAAKyX,MAAMkE,MACnBI,EAAK/b,KAAKob,aAoBhB,GAlBIU,EAAG7X,QAAUkF,EAAOlF,OACpB6X,EAAG5X,SAAWiF,EAAOjF,QACrB4X,EAAGE,YAAY3X,aAAe6E,EAAS7E,aACvCyX,EAAGE,YAAY3X,WAAa6E,EAAS7E,WACrCyX,EAAGrT,OAAOU,EAAOlF,MAAOkF,EAAOjF,QAE3B6X,IACAA,EAAG,GAAGC,YAAY3X,WAAa6E,EAAS7E,WACxC0X,EAAG,GAAGtT,OAAOU,EAAOlF,MAAOkF,EAAOjF,QAClC6X,EAAG,GAAGC,YAAY3X,WAAa6E,EAAS7E,WACxC0X,EAAG,GAAGtT,OAAOU,EAAOlF,MAAOkF,EAAOjF,UAI1ClE,KAAKsb,kBAAoBpS,EAAS+S,oBAElC/S,EAASgT,gBAAgBC,QAErBR,EAAM7E,gBAAiB,CAEvB,IAAIsF,EAASL,EAAG/b,KAAKqb,oBACfe,EAAOJ,YAAoBK,YAAYnT,EAASoT,eAClDpT,EAASqT,kBAAkBH,EAAQ,MAC/BT,EAAM3E,YACN9N,EAAS6O,MAAM4D,EAAM3E,aAG7B9N,EAASsT,cAAcV,GACtBA,EAAGE,YAAoBK,YAAeD,EAAOJ,YAAoBK,YACjEP,EAAGE,YAAoBS,iBAAoBL,EAAOJ,YAAoBS,iBAEvEzc,KAAKqb,mBAAqB,EAAIrb,KAAKqb,mBACnCe,EAASL,EAAG/b,KAAKqb,oBACjBnS,EAASqT,kBAAkBH,EAAQ,WAGnClT,EAASqT,kBAAkBT,OAAI/Z,GAG/B4Z,EAAM3E,YACN9N,EAAS6O,MAAM4D,EAAM3E,aAI7BkE,EAAAxd,UAAAgf,WAAA,SAAWxT,GACPA,EAASgT,gBAAgBC,QACzBjT,EAASyT,iBAAiB3c,KAAKsb,mBAC/Btb,KAAKsb,kBAAoB,MAG7BJ,EAAAxd,UAAAmW,QAAA,WACQ7T,KAAKmb,gBACLnb,KAAKmb,cAActH,UACf7T,KAAKob,eACLpb,KAAKob,aAAa,GAAGvH,SAAQ,GAC7B7T,KAAKob,aAAa,GAAGvH,SAAQ,MAI7CqH,EArGA,GAAajG,EAAAiG,kBAAiBA,EAuG9B,IAAA0B,EAAA,SAAAzV,GACI,SAAAyV,EAAYjB,QAAA,IAAAA,MAAA,MAAZ,IAAAtU,EACIF,EAAAzK,KAAAsD,OAAOA,YAUXqH,EAAAwV,SAAU,EACVxV,EAAAsU,MAAe,KACftU,EAAAsP,mBACAtP,EAAAyV,cAA2C,KAC3CzV,EAAA0V,mBAA4B,KAC5B1V,EAAA2V,mBACA3V,EAAA4V,iBAA0B,KAG1B5V,EAAA6V,4BAA6B,EAC7B7V,EAAA8V,2BAA4B,EAnBX,MAATxB,GACAtU,EAAKsU,MAAQA,EACbtU,EAAKU,OAAS4T,EAAM5T,QAEpBV,EAAKsU,MAAQ,IAAI1G,EAAAuB,MAAM,GAAG,GAE9BnP,EAAKyV,cAAgBzV,EAAKwS,WAwLlC,OAjM2BlR,EAAAiU,EAAAzV,GAwBvByV,EAAAlf,UAAA0f,UAAA,SAAUvZ,GACN,IAAMwZ,EAASrd,KAAK2W,gBACpB3W,KAAK+c,mBAAqBlZ,EAC1B7D,KAAK2b,MAAMxD,WAAWtU,EAAO7D,MAC7B,IAAMsd,EAAgBtd,KAAK2b,MAAMhF,gBACjC0G,EAAOpc,OAAS,EAChB,IAAK,IAAI1E,EAAI,EAAGA,EAAI+gB,EAAcrc,OAAQ1E,IACtC+gB,EAAc/gB,GAAG8Y,mBAAqBrV,KACtCqd,EAAOld,KAAKmd,EAAc/gB,IAE9B+gB,EAAcrc,OAAS,GAG3B2b,EAAAlf,UAAA6f,QAAA,WAKI,IAJA,IAAM1D,EAAW7Z,KAAK6Z,SAChBwD,EAASrd,KAAK2W,gBACde,EAAS1X,KAAKgd,gBAEXzgB,EAAI,EAAGA,EAAI8gB,EAAOpc,OAAQ1E,IAC/ByD,KAAKqB,KAAK,UAAWgc,EAAO9gB,IAIhC,GADAmb,EAAOzW,OAAS,EACZjB,KAAKkd,2BACL,IAAS3gB,EAAI,EAAGA,EAAIsd,EAAS5Y,OAAQ1E,IACjCmb,EAAOvX,KAAK0Z,EAAStd,IAG7B,IAASA,EAAI,EAAGA,EAAI8gB,EAAOpc,OAAQ1E,IAC/Bmb,EAAOvX,KAAKkd,EAAO9gB,IAEvB,IAAKyD,KAAKkd,4BACNld,KAAKmd,0BACL,IAAS5gB,EAAI,EAAGA,EAAIsd,EAAS5Y,OAAQ1E,IACjCmb,EAAOvX,KAAK0Z,EAAStd,IAIzByD,KAAK2b,MAAMvE,YACXpX,KAAKwX,UAIbva,OAAAC,eAAI0f,EAAAlf,UAAA,wBAAJ,WACI,OAAOsC,KAAK2b,MAAM9E,sBAGtB,SAAqB1J,GACjBnN,KAAK2b,MAAM9E,iBAAmB1J,mCAGlClQ,OAAAC,eAAI0f,EAAAlf,UAAA,uBAAJ,WACI,OAAOsC,KAAK2b,MAAM7E,qBAGtB,SAAoB3J,GAChBnN,KAAK2b,MAAM7E,gBAAkB3J,mCAGjClQ,OAAAC,eAAI0f,EAAAlf,UAAA,kBAAJ,WACI,OAAOsC,KAAK2b,MAAM3E,gBAGtB,SAAe7J,GACXnN,KAAK2b,MAAM3E,WAAa7J,mCAG5BlQ,OAAAC,eAAI0f,EAAAlf,UAAA,oBAAJ,WACI,OAAOsC,KAAK2b,MAAM5E,kBAGtB,SAAiB5J,GACbnN,KAAK2b,MAAM5E,aAAe5J,mCAG9ByP,EAAAlf,UAAAke,iBAAA,WAII,OAHK5b,KAAKwd,eACNxd,KAAKwd,aAAe,IAAItC,EAAkBlb,OAEvCA,KAAKwd,aAAa5B,oBAG7BgB,EAAAlf,UAAA+f,oBAAA,aAOAb,EAAAlf,UAAA8Z,OAAA,WACIxX,KAAK2b,MAAMnE,OAAOxX,KAAMA,KAAKgd,kBAGjCJ,EAAAlf,UAAAggB,WAAA,SAAWxU,GACP,QAAIlJ,KAAKqV,oBAAsBrV,KAAKqV,oBAAsBnM,EAASoM,gBAI9DtV,KAAKuV,SAKVvV,KAAKwV,aAAetM,EAASuM,oBAGzBzV,KAAK0V,YAAc,IAAM1V,KAAK2V,cAO9B3V,KAAK6Z,WAAa7Z,KAAKgd,iBACvBhd,KAAK8c,eAAiB9c,KAAK6Z,WAC3B7Z,KAAK8c,cAAgB9c,KAAK6Z,UAM9B7Z,KAAK2d,YACL3d,KAAK6Z,SAAW7Z,KAAKgd,gBAErBhd,KAAKid,iBAAmB/T,EAASoM,aACjCpM,EAASoM,aAAetV,MACjB,KA3BHA,KAAKwV,aAAe,GACb,KA6BfoH,EAAAlf,UAAAkgB,YAAA,SAAY1U,GACRlJ,KAAK6Z,SAAW7Z,KAAK8c,cACrB5T,EAASoM,aAAetV,KAAKid,iBAC7Bjd,KAAKid,iBAAmB,MAG5BL,EAAAlf,UAAA0X,YAAA,SAAYlM,GACHlJ,KAAK0d,WAAWxU,KAIjBlJ,KAAK2b,MAAM9E,mBACN7W,KAAKwd,eACNxd,KAAKwd,aAAe,IAAItC,EAAkBlb,OAE9CA,KAAKwd,aAAa3B,YAAY3S,IAGlClJ,KAAK4V,qBAAqB1M,GAC1BlJ,KAAK4d,YAAY1U,GAEblJ,KAAK2b,MAAM9E,kBACX7W,KAAKwd,aAAad,WAAWxT,KAIrC0T,EAAAlf,UAAAmY,aAAA,SAAa3M,GACLlJ,KAAK0d,WAAWxU,KAChBlJ,KAAK8V,sBAAsB5M,GAC3BlJ,KAAK4d,YAAY1U,KAIzB0T,EAAAlf,UAAAmW,QAAA,SAAQzM,GACApH,KAAKwd,eACLxd,KAAKwd,aAAa3J,UAClB7T,KAAKwd,aAAe,MAExBrW,EAAAzJ,UAAMmW,QAAOnX,KAAAsD,KAACoH,IAEtBwV,EAjMA,CAA2B9W,KAAKqP,WAAnBF,EAAA2H,MAAKA,EAxGtB,CAAU3H,WCJV,SAAUA,GAQN,IAAA5M,EAAA,SAAAlB,GACI,SAAAkB,IAAA,IAAAhB,EACIF,EAAAzK,KAAAsD,OAAOA,YAKXqH,EAAAwW,SAAU,EAEVxW,EAAAyW,eAKAzW,EAAA0W,iBAEA1W,EAAAmR,mBAA4B,OA+GhC,OA/H2B7P,EAAAN,EAAAlB,GAsBvBkB,EAAA3K,UAAAqa,MAAA,WACI/X,KAAK+d,cAAc9c,OAAS,EAC5BjB,KAAK8d,YAAY7c,OAAS,GAG9BoH,EAAA3K,UAAAmW,QAAA,SAAQzM,GACJpH,KAAK+X,QACL5Q,EAAAzJ,UAAMmW,QAAOnX,KAAAsD,KAACoH,IAQlBiB,EAAA3K,UAAAsgB,cAAA,SAAc/F,GACV,GAAKA,EAAc1C,QAAnB,CAIA,GAAK0C,EAAsB4E,QAAS,CAChC,IAAMoB,EAAQhG,EACdjY,KAAK+d,cAAc5d,KAAK8d,GACxBA,EAAMb,UAAUpd,MAGpB,GAAIiY,GAAiBjY,MAASiY,EAAsB4F,QAApD,CACkB5F,EACRiG,mBAAmBle,UAF7B,CAMA,IAAI2b,EAAQ1D,EAAchC,YACZ,OAAV0F,GACAA,EAAM3D,iBAAiBhY,KAAMiY,GAEjC,IAAMR,EAAQQ,EAAcjC,YAO5B,GANc,OAAVyB,IACAkE,EAAQlE,EAAMkE,OACR3D,iBAAiBhY,KAAMiY,GAGjCA,EAAc9B,cAAgB9N,EAAM8V,sBAChClG,EAAcmG,OAAS,IAAMnG,EAActC,aACvCsC,EAAc7B,mBACfuF,GAASA,EAAM5E,cAFtB,CAMA,IAAM8C,EAAY5B,EAA4B4B,SAC9C,GAAIA,GAAYA,EAAS5Y,OACrB,IAAK,IAAI1E,EAAI,EAAGA,EAAIsd,EAAS5Y,OAAQ1E,IACjCyD,KAAKge,cAAcnE,EAAStd,QAKxC8L,EAAA3K,UAAA2gB,sBAAA,SAAsBpG,GAClB,KAAIA,EAAcmG,OAAS,IAAMnG,EAActC,YACvCsC,EAAc7B,kBADtB,CAIA,IAAMyD,EAAY5B,EAA4B4B,SAC9C,GAAIA,GAAYA,EAAS5Y,OACrB,IAAK,IAAI1E,EAAI,EAAGA,EAAIsd,EAAS5Y,OAAQ1E,IACjCyD,KAAKge,cAAcnE,EAAStd,MAKxC8L,EAAA3K,UAAA4gB,kBAAA,WACIte,KAAK+X,QACL/X,KAAKge,cAAche,MAGnB,IAFA,IAAMue,EAASve,KAAK+d,cAEXxhB,EAAI,EAAGA,EAAIgiB,EAAOtd,OAAQ1E,IAAK,CAEpC,IADMkb,EAAQ8G,EAAOhiB,IACXof,MAAM5E,aAAc,CAC1BU,EAAM8F,UAEN,IADA,IAAM7F,EAASD,EAAMuF,gBACZ/a,EAAI,EAAGA,EAAIyV,EAAOzW,OAAQgB,IAC/BjC,KAAKqe,sBAAsB3G,EAAOzV,KAK9C,IAAS1F,EAAI,EAAGA,EAAIgiB,EAAOtd,OAAQ1E,IAAK,CACpC,IAAMkb,KAAQ8G,EAAOhiB,IACVof,MAAM5E,cACbU,EAAM8F,YAKlBlV,EAAA3K,UAAAwgB,mBAAA,SAAmBra,GACf7D,KAAKwY,mBAAqB3U,EAC1BwE,EAAM8V,oBAAsB,EAC5Bne,KAAKse,qBAGTjW,EAAA3K,UAAA8gB,YAAA,WACIxe,KAAKwY,mBAAqB,KAC1BvD,EAAAuB,MAAM8B,iBACNtY,KAAKse,qBAxHFjW,EAAA8V,oBAA8B,EA0HzC9V,EA/HA,CAA2B4M,EAAA2H,OAAd3H,EAAA5M,MAAKA,EARtB,CAAU4M,WCiBAA,UACLhY,OAAeiY,OAAOpP,KAAK2Y,cAAc/gB,WACtCghB,kBAAmB,EACnBpJ,aAAc,KAEdG,gBAAe,WACX,QAASzV,KAAK0e,mBAGlBC,WAAY7Y,KAAK2Y,cAAc/gB,UAAU4T,OAEzCA,OAAM,SAAC2G,EAAmCkD,EAAoCpD,EAAiB6G,EAA4BC,GAClH1D,IACDnb,KAAK0e,kBAAoB,GAE7B1e,KAAKsV,aAAe,KACf2C,EAAwB4F,SACxB5F,EAAwBuG,cAE7Bxe,KAAK2e,WAAW1G,EAAekD,EAAepD,EAAO6G,EAAWC,MAIvE5hB,OAAeiY,OAAOpP,KAAKgZ,eAAephB,WACvCghB,kBAAmB,EACnBpJ,aAAc,KAEdG,gBAAe,WACX,QAASzV,KAAK0e,mBAGlBC,WAAY7Y,KAAKgZ,eAAephB,UAAU4T,OAE1CA,OAAM,SAAC2G,EAAmCkD,EAAoCpD,EAAiB6G,EAA4BC,GAClH1D,IACDnb,KAAK0e,kBAAoB,GAE7B1e,KAAKsV,aAAe,KACf2C,EAAwB4F,SACxB5F,EAAwBuG,cAE7Bxe,KAAK2e,WAAW1G,EAAekD,EAAepD,EAAO6G,EAAWC,MJ1D5E,SAAU5J,GACRnP,KAAasC,QAAU6M,EADzB,CAAUA,0BKAV3Y,EAAAD,QAAAyJ,qBCKA,WACA,aAEA,IAAA/C,EAAA,oBAAAuB,aAAA,IAAAA,OAAAvB,SAAAuB,OAAAvB,YACAgc,OAAA,IAAAziB,KAAAD,QACA2iB,EAAA,oBAAAC,SAAA,yBAAAA,QAEAtf,EAAA,WAsDA,IArDA,IAAAuf,EAEAC,IAEA,oBACA,iBACA,oBACA,oBACA,mBACA,oBAIA,0BACA,uBACA,0BACA,0BACA,yBACA,0BAKA,0BACA,yBACA,iCACA,yBACA,yBACA,0BAIA,uBACA,sBACA,uBACA,uBACA,sBACA,uBAGA,sBACA,mBACA,sBACA,sBACA,qBACA,sBAIA5iB,EAAA,EACAC,EAAA2iB,EAAAle,OACAme,KAEQ7iB,EAAAC,EAAOD,IAEf,IADA2iB,EAAAC,EAAA5iB,KACA2iB,EAAA,KAAAnc,EAAA,CACA,IAAAxG,EAAA,EAAeA,EAAA2iB,EAAAje,OAAgB1E,IAC/B6iB,EAAAD,EAAA,GAAA5iB,IAAA2iB,EAAA3iB,GAEA,OAAA6iB,EAIA,SAhEA,GAmEAC,GACAC,OAAA3f,EAAA4f,iBACAC,MAAA7f,EAAA8f,iBAGApZ,GACAqZ,QAAA,SAAAC,GACA,IAAAD,EAAA/f,EAAAmE,kBAEA6b,KAAA5c,EAAAgG,gBAMA,oCAAA6W,KAAAC,UAAAC,WACAH,EAAAD,KAEAC,EAAAD,GAAAV,GAAAC,QAAAc,uBAGAC,KAAA,WACAjd,EAAApD,EAAAoE,mBAEAkF,OAAA,SAAA0W,GACA3f,KAAAigB,aACAjgB,KAAAggB,OAEAhgB,KAAA0f,QAAAC,IAGAO,SAAA,SAAAjR,GACAjP,KAAAkC,GAAA,SAAA+M,IAEAkR,QAAA,SAAAlR,GACAjP,KAAAkC,GAAA,QAAA+M,IAEA/M,GAAA,SAAAxC,EAAAuP,GACA,IAAAnB,EAAAuR,EAAA3f,GACAoO,GACA/K,EAAAkL,iBAAAH,EAAAmB,GAAA,IAGA7M,IAAA,SAAA1C,EAAAuP,GACA,IAAAnB,EAAAuR,EAAA3f,GACAoO,GACA/K,EAAAqd,oBAAAtS,EAAAmB,GAAA,IAGAoR,IAAA1gB,GAGAA,GAUA1C,OAAAqjB,iBAAAja,GACA4Z,cACA5iB,IAAA,WACA,OAAAkjB,QAAAxd,EAAApD,EAAA6gB,sBAGA3X,SACAzL,YAAA,EACAC,IAAA,WACA,OAAA0F,EAAApD,EAAA6gB,qBAGAxX,SACA5L,YAAA,EACAC,IAAA,WAEA,OAAAkjB,QAAAxd,EAAApD,EAAA8gB,wBAKA1B,EACAziB,EAAAD,QAAAgK,EAEA/B,OAAA+B,cAjCA0Y,EACAziB,EAAAD,SAAA,EAEAiI,OAAA+B,YAAA,EAlIA,kFCLA,IAAA9D,EAAApG,EAAA,GACAA,EAAA,IAwBA,IAAA+L,EAAA,WAKI,SAAAA,IACIlI,KAAK0gB,kBAyDb,OAtDWxY,EAAAxK,UAAA0O,OAAP,SAAcuU,GACV3gB,KAAK0a,KAAOiG,EACZ3gB,KAAK4gB,cAAcC,UAAY7gB,KAAK8gB,WAGjC5Y,EAAAxK,UAAAmO,KAAP,WACI7L,KAAK+gB,cAAcC,UAAYhhB,KAAK+gB,cAAcC,UAAUC,QAAQ,SAAU,IAAIC,QAG/EhZ,EAAAxK,UAAA4N,KAAP,WACItL,KAAK6L,OACL7L,KAAK+gB,cAAcC,WAAa,WAG5B9Y,EAAAxK,UAAAgjB,gBAAR,WAEI1gB,KAAK+gB,cAAgBxe,EAAAM,IAAIC,sBAAsB,aAAc,OAC7D9C,KAAK+gB,cAAcC,UAAY,aAG/B,IAAMG,EAAWpe,SAASgK,cAAc,UACxCoU,EAASN,UAAY,MACrBM,EAASH,UAAY,iCACrBG,EAASC,MAAQ,QACjBD,EAAS3d,QAAUxD,KAAKsL,KAAK5C,KAAK1I,MAClCA,KAAK+gB,cAAcvV,YAAY2V,GAG/BnhB,KAAK4gB,cAAgB7d,SAASgK,cAAc,OAC5C/M,KAAK+gB,cAAcvV,YAAYxL,KAAK4gB,gBAGhC1Y,EAAAxK,UAAAojB,QAAR,WACI,IAAMO,EAAkBzX,KAAK0X,IAAIthB,KAAK0a,KAAKtS,QAAQvE,MAAM4F,aAAczJ,KAAK0a,KAAKtS,QAAQvE,MAAM6F,eAE/F,MACI,qCACQpF,OAAOC,iBAAgB,uCAEvBD,OAAOid,WAAU,IAAIjd,OAAOkd,YAAW,qCAEvCxhB,KAAK0a,KAAKtS,QAAQe,OAAOlF,MAAK,IAAIjE,KAAK0a,KAAKtS,QAAQe,OAAOjF,OAAM,mCAEjElE,KAAK0a,KAAKtS,QAAQzD,KAAKV,MAAK,IAAIjE,KAAK0a,KAAKtS,QAAQzD,KAAKT,OAAM,8CAEnDlE,KAAK0a,KAAKtS,QAAQvE,MAAM0F,EAAC,KAAKvJ,KAAK0a,KAAKtS,QAAQvE,MAAM2F,EAAC,uBACzDxJ,KAAK0a,KAAKtS,QAAQvE,MAAM4F,aAAY,IAAIzJ,KAAK0a,KAAKtS,QAAQvE,MAAM6F,cAAa,IAAI1J,KAAK0a,KAAKtS,QAAQvE,MAAM4F,aAAe4X,EAAe,IAAIrhB,KAAK0a,KAAKtS,QAAQvE,MAAM6F,cAAgB2X,EAAe,sBAClMrhB,KAAK0a,KAAKtS,QAAQvE,MAAM8F,aAAY,IAAI3J,KAAK0a,KAAKtS,QAAQvE,MAAMiG,cAAa,qBAC9E9J,KAAK0a,KAAKtS,QAAQvE,MAAMkG,OAAM,KAAK/J,KAAK0a,KAAKtS,QAAQvE,MAAMoG,OAAM,uBAChEjK,KAAK0a,KAAKtS,QAAQvE,MAAMqG,QAAO,wBAC7BlK,KAAK0a,KAAKtS,QAAQvE,MAAMuG,UAAS,0BAC/BpK,KAAK0a,KAAKtS,QAAQvE,MAAMwG,YAAW,UAGnEnC,EA/DA,GAAa7L,EAAA6L,iCCzBR0B,KAAK0X,MACN1X,KAAK0X,IAAM,SAAChkB,EAAWX,GAGnB,IAFA,IAAIiW,EAAI,EAEK,IAANtV,GACHsV,EAAIjW,EAAIW,EACRX,EAAIW,EACJA,EAAIsV,EAGR,OAAOjW,mFCRf,IAAAmO,EAAA,oBAAAA,KAOA,OANWA,EAAApN,UAAA0G,MAAP,SAAaH,EAAeC,EAAgBud,EAAwBC,GAChE,OACInY,EAAGK,KAAKiE,MAAM4T,EAAiB,EAAIxd,EAAQ,GAC3CuF,EAAGI,KAAKiE,MAAM6T,EAAkBxd,KAG5C4G,EAPA,GAAazO,EAAAyO,mGCAb,IAAAD,EAAA,oBAAAA,KAOA,OANWA,EAAAnN,UAAA0G,MAAP,SAAaH,EAAeC,EAAgBud,EAAwBC,GAChE,OACInY,EAAG,EACHC,EAAGI,KAAKiE,MAAM6T,EAAkBxd,KAG5C2G,EAPA,GAAaxO,EAAAwO,iGCAb,IAAAE,EAAA,oBAAAA,KAOA,OANWA,EAAArN,UAAA0G,MAAP,SAAaH,EAAeC,EAAgBud,EAAwBC,GAChE,OACInY,EAAGK,KAAKiE,MAAM4T,EAAiBxd,GAC/BuF,EAAGI,KAAKiE,MAAM6T,EAAkBxd,KAG5C6G,EAPA,GAAa1O,EAAA0O,kGCAb,IAAAJ,EAAA,oBAAAA,KAOA,OANWA,EAAAjN,UAAA0G,MAAP,SAAaH,EAAeC,EAAgBud,EAAwBC,GAChE,OACInY,EAAGK,KAAKiE,MAAM4T,EAAiB,EAAIxd,EAAQ,GAC3CuF,EAAGI,KAAKiE,MAAM6T,EAAkB,EAAIxd,EAAS,KAGzDyG,EAPA,GAAatO,EAAAsO,6FCAb,IAAAD,EAAA,oBAAAA,KAOA,OANWA,EAAAhN,UAAA0G,MAAP,SAAaH,EAAeC,EAAgBud,EAAwBC,GAChE,OACInY,EAAG,EACHC,EAAGI,KAAKiE,MAAM6T,EAAkB,EAAIxd,EAAS,KAGzDwG,EAPA,GAAarO,EAAAqO,iGCAb,IAAAE,EAAA,oBAAAA,KAOA,OANWA,EAAAlN,UAAA0G,MAAP,SAAaH,EAAeC,EAAgBud,EAAwBC,GAChE,OACInY,EAAGK,KAAKiE,MAAM4T,EAAiBxd,GAC/BuF,EAAGI,KAAKiE,MAAM6T,EAAkB,EAAIxd,EAAS,KAGzD0G,EAPA,GAAavO,EAAAuO,kGCAb,IAAAJ,EAAA,oBAAAA,KAOA,OANWA,EAAA9M,UAAA0G,MAAP,SAAaH,EAAeC,EAAgBud,EAAwBC,GAChE,OACInY,EAAGK,KAAKiE,MAAM4T,EAAiB,EAAIxd,EAAQ,GAC3CuF,EAAG,IAGfgB,EAPA,GAAanO,EAAAmO,gGCAb,IAAAQ,EAAA,oBAAAA,KAIA,OAHWA,EAAAtN,UAAA0G,MAAP,SAAaH,EAAgBC,EAAiBud,EAAyBC,GACnE,OAAQnY,EAAG,EAAGC,EAAG,IAEzBwB,EAJA,GAAa3O,EAAA2O,8FCAb,IAAAP,EAAA,oBAAAA,KAOA,OANWA,EAAA/M,UAAA0G,MAAP,SAAaH,EAAeC,EAAgBud,EAAwBC,GAChE,OACInY,EAAGK,KAAKiE,MAAM4T,EAAiBxd,GAC/BuF,EAAG,IAGfiB,EAPA,GAAapO,EAAAoO,+FCAb,IAAAU,EAAA,oBAAAA,KAOA,OANWA,EAAAzN,UAAAyG,MAAP,SAAasF,EAAsBC,EAAuBiY,EAAoBC,GAC1E,OACI7X,OAAQ4X,EAAalY,EACrBQ,OAAQ2X,EAAclY,IAGlCyB,EAPA,GAAa9O,EAAA8O,+FCAb,IAAAD,EAAA,oBAAAA,KAQA,OAPWA,EAAAxN,UAAAyG,MAAP,SAAasF,EAAsBC,EAAuBiY,EAAoBC,GAE1E,IAAMzd,EAAQyF,KAAKoH,IAAI2Q,EAAalY,EAAcmY,EAAclY,GAEhE,OAAQK,OAAQ5F,EAAO8F,OAAQ9F,IAGvC+G,EARA,GAAa7O,EAAA6O,sGCAb,IAAAE,EAAA,oBAAAA,KAOA,OANWA,EAAA1N,UAAAyG,MAAP,SAAasF,EAAuBC,EAAwBiY,EAAqBC,GAC7E,OACI7X,OAAQ,EACRE,OAAQ,IAGpBmB,EAPA,GAAa/O,EAAA+O,2FCFA/O,EAAA2P,qBACTC,aAAc,mCACdI,WAAY,iHCFhB,IAAAxJ,EAAA,oBAAAA,KAqCA,OA9BkBA,EAAA8I,iBAAd,SAA+BkW,GAC3B,IAAMhZ,EAAU9F,SAASC,eAAe6e,GAExC,OAAgB,OAAZhZ,EACOA,EAEA9F,SAASwI,MAWV1I,EAAAC,sBAAd,SAA2D+e,EAAmBC,EAAiBzP,GAC3F,IAAIxJ,EAAU9F,SAASC,eAAe6e,GAUtC,OARgB,OAAZhZ,KACAA,EAAU9F,SAASgK,cAAc+U,IACzB9c,GAAK6c,GAEbxP,EAAYA,GAAwBtP,SAASwI,MACnCC,YAAY3C,IAGnBA,GAEfhG,EArCA,GAAaxG,EAAAwG,mJCAb/E,EAAA3B,EAAA,KACA2B,EAAA3B,EAAA,sYCDA,IAAA4lB,EAAA5lB,EAAA,GACA6lB,EAAA7lB,EAAA,IAyBAqJ,EAAA,SAAA2B,GAkFI,SAAA3B,EAAYyc,GAAZ,IAAA5a,EACIF,EAAAzK,KAAAsD,OAAOA,YAEPqH,EAAK9B,OAAS0c,GAA0Bnc,KAAKP,OAC7C8B,EAAK9B,OAAO2c,WAAW1Z,IAAInB,EAAK8a,uBAAuBzZ,KAAKrB,IAC5DA,EAAK9B,OAAO6c,QAAQ5Z,IAAInB,EAAKgb,oBAAoB3Z,KAAKrB,IACtDA,EAAK9B,OAAO+c,OAAO9Z,IAAInB,EAAKkb,mBAAmB7Z,KAAKrB,IAEpDA,EAAKmb,YAAc,IAAIR,EAAAte,QAAqB,SAACjF,EAAGC,GAAM,OAAAD,EAAEyG,SAAWxG,EAAEwG,WAErEmC,EAAKob,qBA2Pb,OAvVsC9Z,EAAAnD,EAAA2B,GAmG3B3B,EAAA9H,UAAAglB,UAAP,WACI,OAAOzlB,OAAO0lB,KAAK3iB,KAAK4iB,eAAe3hB,OAAS,GAO7CuE,EAAA9H,UAAAmlB,SAAP,SAAgBC,GAEZ,OADA9iB,KAAKwiB,YAAYO,QAAQD,GAClB9iB,MAOJwF,EAAA9H,UAAAkI,UAAP,SAAiBb,GAAjB,IAAAsC,EAAArH,KAEI,OADA+E,EAAOie,QAAQ,SAAAF,GAAS,OAAAzb,EAAKwb,SAASC,KAC/B9iB,MAMJwF,EAAA9H,UAAAmI,KAAP,WAKI,OAJK7F,KAAK0iB,aACN1iB,KAAKijB,wBAGFjjB,MAMJwF,EAAA9H,UAAAwlB,MAAP,WAKI,OAJAljB,KAAKwiB,YAAYzK,QACjB/X,KAAKyiB,mBACLziB,KAAKuF,OAAO2d,QAELljB,MAGHwF,EAAA9H,UAAA+kB,iBAAR,WACIziB,KAAK4iB,iBACL5iB,KAAKmjB,uBAAyB,KAC9BnjB,KAAKojB,oBAAsB,EAC3BpjB,KAAKqjB,uBAAyB,EAC9BrjB,KAAKsjB,kBAAoB,EACzBtjB,KAAKujB,qBAAuB,EAC5BvjB,KAAKwjB,kBAAoBC,QAAS,EAAGC,MAAO,EAAGC,MAAO,IAGlDne,EAAA9H,UAAAykB,uBAAR,SAA+B5c,EAA6Bqe,GAExD,IAAMC,EAAiBte,EAAOue,SAAW9jB,KAAKwjB,iBAAiBC,QAC/DzjB,KAAKwjB,iBAAiBC,QAAUle,EAAOue,SACvC,IAAMC,EAAiBF,EAAiB7jB,KAAKojB,oBAAsBnmB,OAAO0lB,KAAK3iB,KAAK4iB,eAAe3hB,OACnGjB,KAAKwjB,iBAAiBG,OAASI,EAE/B/jB,KAAKqB,KAAKmE,EAAiBwe,yBACvB9e,SAAUlF,KAAKmjB,uBACfW,SAAU9jB,KAAKwjB,iBAAiBG,SAIhCne,EAAA9H,UAAA2kB,oBAAR,SAA4B7C,EAAcja,EAA6Bqe,GACnE,IAAMK,EAAYjkB,KAAK4iB,cAAcgB,EAAS9mB,MAG1CmnB,IACAA,EAAUC,QAAS,EACnBD,EAAUzE,MAAQA,EAElBxf,KAAKqB,KAAKmE,EAAiB2e,YAAaF,KAIxCze,EAAA9H,UAAA6kB,mBAAR,SAA2Bhd,EAA6Bqe,GACpD,IAAMK,EAAYjkB,KAAK4iB,cAAcgB,EAAS9mB,MAG1CmnB,IACAA,EAAUC,QAAS,EACnBD,EAAUzE,MAAQ,KAElBxf,KAAKqB,KAAKmE,EAAiB4e,aAAcH,KAIzCze,EAAA9H,UAAA2mB,2BAAR,WAIIrkB,KAAKqjB,uBAAyB,EAC9BrjB,KAAKskB,wBAGD9e,EAAA9H,UAAA6mB,qBAAR,WACIvkB,KAAKujB,uBAGL,IAAMiB,EAAsE,KAAtDxkB,KAAKsjB,kBAAoBtjB,KAAKujB,sBAA8BvjB,KAAKsjB,kBACjFO,EAAiBW,EAAexkB,KAAKwjB,iBAAiBE,MAC5D1jB,KAAKwjB,iBAAiBE,MAAQc,EAC9B,IAAMT,EAAiBF,EAAiB7jB,KAAKsjB,kBAAoBrmB,OAAO0lB,KAAK3iB,KAAK4iB,eAAe3hB,OACjGjB,KAAKwjB,iBAAiBG,OAASI,EAE/B/jB,KAAKqB,KAAKmE,EAAiBwe,yBACvB9e,SAAUlF,KAAKmjB,uBACfW,SAAU9jB,KAAKwjB,iBAAiBG,SAIhCne,EAAA9H,UAAA+mB,kBAAR,SAA0B3B,EAActD,GACpCxf,KAAKukB,uBAEL,IAAMN,EAAYjkB,KAAK4iB,cAAcE,EAAM9d,IAEvCif,IACAA,EAAUC,QAAS,EACnBD,EAAUzE,MAAQA,EAElBxf,KAAKqB,KAAKmE,EAAiB2e,YAAaF,IAGxCjkB,KAAKujB,sBAAwB,GAC7BvjB,KAAKskB,wBAIL9e,EAAA9H,UAAAgnB,iBAAR,SAAyB5B,GACrB9iB,KAAKukB,uBAEL,IAAMN,EAAYjkB,KAAK4iB,cAAcE,EAAM9d,IAEvCif,IACAA,EAAUC,QAAS,EACnBD,EAAUzE,MAAQ,KAElBxf,KAAKqB,KAAKmE,EAAiB4e,aAAcH,IAGzCjkB,KAAKujB,sBAAwB,GAC7BvjB,KAAKskB,wBAOL9e,EAAA9H,UAAAulB,sBAAR,WACIjjB,KAAKyiB,mBAEL,IAAMK,EAAQ9iB,KAAKwiB,YAAYmC,OAE3B7B,GACA9iB,KAAKmjB,uBAAyBL,EAAM5d,SACpClF,KAAK4kB,qBAGL5kB,KAAKqB,KAAKmE,EAAiBqf,oBAO3Brf,EAAA9H,UAAAknB,kBAAR,WACI,KAAO5kB,KAAKwiB,YAAYmC,QAAU3kB,KAAKwiB,YAAYmC,OAAQzf,WAAalF,KAAKmjB,wBAAwB,CACjG,IAAML,EAAQ9iB,KAAKwiB,YAAYsC,UAE/B9kB,KAAK4iB,cAAcE,EAAM9d,KACrB8d,MAAKA,EACLoB,QAAQ,EACR1E,MAAO,MAIfxf,KAAK+kB,sBAGDvf,EAAA9H,UAAAqnB,mBAAR,eAAA1d,EAAArH,KACuB/C,OAAO0lB,KAAK3iB,KAAK4iB,eAAeoC,IAAI,SAAArX,GAAO,OAAAtG,EAAKub,cAAcjV,KAEtEqV,QAAQ,SAAAiB,QACkCliB,IAA5CkiB,EAAUnB,MAAqBmC,UAChC5d,EAAKic,oBACLjc,EAAKkc,uBACLlc,EAAK6d,eAAejB,EAAUnB,SAE9Bzb,EAAK+b,sBACL/b,EAAK8d,gBAAgBlB,EAAUnB,UAKvC9iB,KAAKqjB,uBAAyBrjB,KAAKojB,oBACnCpjB,KAAKolB,qBAGD5f,EAAA9H,UAAAwnB,eAAR,SAAuBpC,GAAvB,IAAAzb,EAAArH,KACI8iB,EAAMuC,KAAO,IAAIC,MACbC,KAAMzC,EAAM7d,KACZggB,SAAUnC,EAAMmC,SAChBO,KAAM1C,EAAM0C,OAAQ,EACpBC,OAAQ3C,EAAM2C,QAAU,EACxBC,KAAM5C,EAAM4C,OAAQ,EACpBC,KAAM7C,EAAM6C,MAAQ,EACpBC,MAAO9C,EAAM8C,QAAS,EACtBC,OAAQ7lB,KAAK0kB,iBAAiBhc,KAAK1I,KAAM8iB,GACzCgD,YAAa,SAACC,EAAiBvG,GAC3B,IAAMwG,EAAYxG,aAAiB1H,MAAQ0H,EAAQ,IAAI1H,MAAM,uBAAuBgL,EAAM9d,IAC1FqC,EAAKod,kBAAkB3B,EAAOkD,OAMlCxgB,EAAA9H,UAAAynB,gBAAR,SAAwBrC,GACpB9iB,KAAKuF,OAAOiD,IAAIsa,EAAM9d,GAAI8d,EAAM7d,MAG5BO,EAAA9H,UAAA0nB,kBAAR,WACQplB,KAAKojB,oBAAsB,EAC3BpjB,KAAKuF,OAAOM,KAAK7F,KAAKqkB,2BAA2B3b,KAAK1I,OAEtDA,KAAKskB,wBAIL9e,EAAA9H,UAAA4mB,qBAAR,eAAAjd,EAAArH,KACQA,KAAKqjB,uBAAyBrjB,KAAKujB,sBAAwB,IAE3DvjB,KAAKqB,KAAKmE,EAAiBC,uBACvBP,SAAUlF,KAAKmjB,uBACfpe,OAAQ9H,OAAO0lB,KAAK3iB,KAAK4iB,eAAeoC,IAAI,SAAArX,GAAO,OAAAtG,EAAKub,cAAcjV,KAAMsY,OAAO,SAAAhC,GAAa,OAAAA,EAAUC,WAI9GlkB,KAAKijB,0BA9UUzd,EAAA4e,aAAuB,4BAMvB5e,EAAA2e,YAAsB,2BAMtB3e,EAAAC,sBAAgC,qCAMhCD,EAAAwe,wBAAkC,uCAMlCxe,EAAAqf,kBAA4B,iCAyTvDrf,EAvVA,CAAsCuc,EAAAzhB,cAAzBjE,EAAAmJ,kGC1Bb,IAAA0gB,EAAA/pB,EAAA,GACAgqB,EAAAhqB,EAAA,IAEAiqB,EAAA,WA2BI,SAAAA,EAAYjnB,GACRa,KAAKqmB,KAAO,IAAIF,EAAAziB,QAAQwiB,EAAKhnB,uBAAuBC,IAwF5D,OAhFIinB,EAAA1oB,UAAAqlB,QAAA,SAAQla,GACJ,OAAO7I,KAAKqmB,KAAK7d,IAAIK,IAQzBud,EAAA1oB,UAAA8K,IAAA,SAAIK,GACA,OAAO7I,KAAKqmB,KAAK7d,IAAIK,IAQzBud,EAAA1oB,UAAAonB,QAAA,WACI,GAAyB,IAArB9kB,KAAKqmB,KAAK9Z,OAAc,CACxB,IAAM4D,EAAKnQ,KAAKqmB,KAAK1B,OAErB,OADA3kB,KAAKqmB,KAAKC,aACHnW,IASfiW,EAAA1oB,UAAAinB,KAAA,WACI,OAAO3kB,KAAKqmB,KAAK1B,QASrByB,EAAA1oB,UAAAkc,SAAA,SAAS/Q,GACL,OAAO7I,KAAKqmB,KAAKzM,SAAS/Q,IAQ9Bud,EAAA1oB,UAAA6oB,QAAA,WACI,OAAOvmB,KAAKqmB,KAAKE,WAOrBH,EAAA1oB,UAAA6O,KAAA,WACI,OAAOvM,KAAKqmB,KAAK9Z,QAMrB6Z,EAAA1oB,UAAAqa,MAAA,WACI/X,KAAKqmB,KAAKtO,SAUdqO,EAAA1oB,UAAAslB,QAAA,SAAQ/T,GACJjP,KAAKqmB,KAAKrD,QAAQ/T,IAG1BmX,EApHA,8FCHA,IAAAI,EAAArqB,EAAA,GACAsqB,EAAAtqB,EAAA,IAEAuqB,EAAA,WAwDI,SAAAA,EAAYvnB,GAlDJa,KAAA0a,QAmDJ1a,KAAK2mB,QAAUxnB,GAAmBqnB,EAAYhoB,eAgLtD,OAtKYkoB,EAAAhpB,UAAAkpB,eAAR,SAAuBC,GACnB,OAAQ,EAAIA,EAAa,GASrBH,EAAAhpB,UAAAopB,gBAAR,SAAwBD,GACpB,OAAQ,EAAIA,EAAa,GAQrBH,EAAAhpB,UAAAqpB,YAAR,SAAoBF,GAChB,OAAOjd,KAAKmC,OAAO8a,EAAY,GAAK,IAUhCH,EAAAhpB,UAAAspB,SAAR,SAAiBC,EAAmBC,GAEhC,OAAIA,GAAclnB,KAAK0a,KAAKzZ,OACpBgmB,GAAajnB,KAAK0a,KAAKzZ,QACf,EAEDgmB,EAGPjnB,KAAK2mB,QAAQ3mB,KAAK0a,KAAKuM,GAAYjnB,KAAK0a,KAAKwM,KAAgB,EACtDD,EAEAC,GASXR,EAAAhpB,UAAAypB,OAAR,SAAeC,GAGX,IADA,IAAInN,EAASja,KAAK+mB,YAAYK,GACvBA,EAAQ,GAAKpnB,KAAK2mB,QAAQ3mB,KAAK0a,KAAKT,GAASja,KAAK0a,KAAK0M,IAAU,GACpEX,EAAOY,KAAKrnB,KAAK0a,KAAMT,EAAQmN,GAC/BA,EAAQnN,EACRA,EAASja,KAAK+mB,YAAYK,IAQ1BV,EAAAhpB,UAAA4pB,SAAR,SAAiBT,GAMb,IAHA,IAAI7V,EAAMhR,KAAKgnB,SAAShnB,KAAK4mB,eAAeC,GACxC7mB,KAAK8mB,gBAAgBD,IAElB7V,GAAO,GAAKhR,KAAK2mB,QAAQ3mB,KAAK0a,KAAKmM,GACtC7mB,KAAK0a,KAAK1J,IAAQ,GAClByV,EAAOY,KAAKrnB,KAAK0a,KAAM1J,EAAK6V,GAC5BA,EAAY7V,EACZA,EAAMhR,KAAKgnB,SAAShnB,KAAK4mB,eAAeC,GACpC7mB,KAAK8mB,gBAAgBD,KAQjCH,EAAAhpB,UAAAinB,KAAA,WAEI,OAAI3kB,KAAK0a,KAAKzZ,OAAS,EACZjB,KAAK0a,KAAK,QAEjB,GAQRgM,EAAAhpB,UAAA8K,IAAA,SAAIK,GACA,OAAI2d,EAAYtoB,YAAY2K,KAG5B7I,KAAK0a,KAAKva,KAAK0I,GACf7I,KAAKmnB,OAAOnnB,KAAK0a,KAAKzZ,OAAS,IACxB,IAQXylB,EAAAhpB,UAAA4oB,WAAA,WAEI,GAAItmB,KAAK0a,KAAKzZ,OAAS,EAAG,CACtB,IAAM9C,EAAM6B,KAAK0a,KAAK,GAMtB,OALA1a,KAAK0a,KAAK,GAAK1a,KAAK0a,KAAK1a,KAAK0a,KAAKzZ,OAAS,GAC5CjB,KAAK0a,KAAK6M,OAAOvnB,KAAK0a,KAAKzZ,OAAS,EAAG,GACnCjB,KAAK0a,KAAKzZ,OAAS,GACnBjB,KAAKsnB,SAAS,GAEXnpB,IAUfuoB,EAAAhpB,UAAAkc,SAAA,SAAS/Q,GACL,IAAM2e,EAAOhB,EAAYnnB,gBAAgBW,KAAK2mB,SAC9C,OAAOF,EAAO7M,SAAS5Z,KAAK0a,KAAM7R,EAAS2e,IAM/Cd,EAAAhpB,UAAA6O,KAAA,WACI,OAAOvM,KAAK0a,KAAKzZ,QAOrBylB,EAAAhpB,UAAA6oB,QAAA,WACI,OAAOvmB,KAAK0a,KAAKzZ,QAAU,GAK/BylB,EAAAhpB,UAAAqa,MAAA,WACI/X,KAAK0a,KAAKzZ,OAAS,GAUvBylB,EAAAhpB,UAAAslB,QAAA,SAAQ/T,GACJwX,EAAOzD,QAAQhjB,KAAK0a,KAAMzL,IAElCyX,EAzOA,8FCHA,IAAAR,EAAA/pB,EAAA,GAYA,SAAAsR,EAA2BD,EAAY3O,EAAS4oB,GAG5C,IAFA,IAAMC,EAASD,GAAkBvB,EAAKvnB,cAChCsC,EAASuM,EAAMvM,OACZ1E,EAAI,EAAGA,EAAI0E,EAAQ1E,IACxB,GAAImrB,EAAOla,EAAMjR,GAAIsC,GACjB,OAAOtC,EAGf,OAAQ,EARZF,EAAAoR,UAqBApR,EAAAsrB,YAAA,SAA+Bna,EAAY3O,EAAS4oB,GAGhD,IAFA,IAAMC,EAASD,GAAkBvB,EAAKvnB,cAE7BpC,EADMiR,EAAMvM,OACC,EAAG1E,GAAK,EAAGA,IAC7B,GAAImrB,EAAOla,EAAMjR,GAAIsC,GACjB,OAAOtC,EAGf,OAAQ,GAWZF,EAAAud,SAAA,SAA4BpM,EAAY3O,EAAS4oB,GAC7C,OAAOha,EAAQD,EAAO3O,EAAM4oB,IAAmB,GAYnDprB,EAAA2R,OAAA,SAA0BR,EAAY3O,EAAS4oB,GAC3C,IAAML,EAAQ3Z,EAAQD,EAAO3O,EAAM4oB,GACnC,QAAIL,EAAQ,IAGZ5Z,EAAM+Z,OAAOH,EAAO,GACb,KAaX/qB,EAAAurB,UAAA,SAA6Bpa,EAAY3O,EAAS4oB,GAI9C,IAHA,IAAMC,EAASD,GAAkBvB,EAAKvnB,cAChCsC,EAASuM,EAAMvM,OACjB4mB,EAAO,EACFtrB,EAAI,EAAGA,EAAI0E,EAAQ1E,IACpBmrB,EAAOla,EAAMjR,GAAIsC,IACjBgpB,IAGR,OAAOA,GAcXxrB,EAAAqrB,OAAA,SAA0BI,EAAaC,EAAaN,GAChD,IAAMC,EAASD,GAAkBvB,EAAKvnB,cAEtC,GAAImpB,EAAO7mB,SAAW8mB,EAAO9mB,OACzB,OAAO,EAGX,IADA,IAAMA,EAAS6mB,EAAO7mB,OACb1E,EAAI,EAAGA,EAAI0E,EAAQ1E,IACxB,IAAKmrB,EAAOI,EAAOvrB,GAAIwrB,EAAOxrB,IAC1B,OAAO,EAGf,OAAO,GAQXF,EAAA2rB,KAAA,SAAwBxa,GACpB,OAAOA,EAAM1M,UAUjBzE,EAAAgrB,KAAA,SAAwB7Z,EAAYjR,EAAW0F,GAC3C,GAAI1F,EAAI,GAAKA,GAAKiR,EAAMvM,QAAUgB,EAAI,GAAKA,GAAKuL,EAAMvM,OAClD,OAAO,EAEX,IAAMgnB,EAAOza,EAAMjR,GAGnB,OAFAiR,EAAMjR,GAAKiR,EAAMvL,GACjBuL,EAAMvL,GAAKgmB,GACJ,GAGX5rB,EAAAgC,SAAA,SAA4BmP,GACxB,MAAO,IAAMA,EAAMnP,WAAa,KAWpChC,EAAA2mB,QAAA,SAA2BxV,EAAYyB,GACnC,IAAkB,IAAAiZ,EAAA,EAAAC,EAAA3a,EAAA0a,EAAAC,EAAAlnB,OAAAinB,IACd,IAAsB,IAAlBjZ,EADMkZ,EAAAD,IAEN,uFCnKZ,IAAA/iB,EAAA,oBAAAA,KAoBA,OAbkBA,EAAAijB,YAAd,SAA0BljB,GACtB,OAAIA,GAAYC,EAAckjB,QACnBljB,EAAckjB,QACdnjB,GAAYC,EAAcC,KAC1BD,EAAcC,KACdF,GAAYC,EAAcmjB,OAC1BnjB,EAAcmjB,OACdpjB,GAAYC,EAAcojB,IAC1BpjB,EAAcojB,IAEdpjB,EAAcG,QAhBNH,EAAAkjB,QAAU,IACVljB,EAAAC,KAAO,GACPD,EAAAmjB,OAAS,GACTnjB,EAAAojB,IAAM,GACNpjB,EAAAG,OAAS,EAepCH,EApBA,GAAa9I,EAAA8I,uCCAbqjB,IAAA,6CAAAtb,EAAAub,EAAAnrB,EAAAsV,GAAA,SAAA/U,EAAAb,EAAA0rB,GAAA,IAAAprB,EAAAN,GAAA,KAAAyrB,EAAAzrB,GAAA,KAAA0rB,GAAA,mBAAAC,KAAA,OAAAA,EAAA3rB,GAAA,MAAAT,EAAA,OAAAA,EAAAS,GAAA,OAAAwrB,EAAA,IAAA1Q,MAAA,uBAAA9a,EAAA,WAAAwrB,EAAAI,KAAA,mBAAAJ,EAAA,IAAAhsB,EAAAc,EAAAN,IAAAX,YAAAosB,EAAAzrB,GAAA,GAAAN,KAAAF,EAAAH,QAAA,SAAA6Q,GAAA,IAAA5P,EAAAmrB,EAAAzrB,GAAA,GAAAkQ,GAAA,OAAArP,EAAAP,GAAA4P,IAAA1Q,IAAAH,QAAA6Q,EAAAub,EAAAnrB,EAAAsV,GAAA,OAAAtV,EAAAN,GAAAX,QAAA,QAAAE,EAAA,mBAAAosB,KAAA3rB,EAAA,EAAAA,EAAA4V,EAAA3R,OAAAjE,IAAAa,EAAA+U,EAAA5V,IAAA,OAAAa,GAAA,IAAAgrB,GAAA,SAAAC,EAAAxsB,EAAAD,GCAA,aACA,IACA0sB,EADApgB,EAAA3I,WAAA2I,YACAogB,EAAA9rB,OAAA+rB,iBACAxoB,wBAAAW,OAAA,SAAAtE,EAAA6B,GAAA7B,EAAA2D,UAAA9B,IACA,SAAA7B,EAAA6B,GAAA,QAAAd,KAAAc,IAAAf,eAAAC,KAAAf,EAAAe,GAAAc,EAAAd,KACA,SAAAf,EAAA6B,GAEA,SAAAuqB,IAAAjpB,KAAAkpB,YAAArsB,EADAksB,EAAAlsB,EAAA6B,GAEA7B,EAAAa,UAAA,OAAAgB,EAAAzB,OAAAsD,OAAA7B,IAAAuqB,EAAAvrB,UAAAgB,EAAAhB,UAAA,IAAAurB,KAGAhsB,OAAAC,eAAAb,EAAA,cAAA8Q,OAAA,IACA,IAAAgc,EAAAL,EAAA,cACAM,EAAAtjB,KAAAsjB,QAoCAC,EAAA,SAAAliB,GAEA,SAAAkiB,EAAA5pB,GACA,IAAA4H,EAAAF,EAAAzK,KAAAsD,KAAAP,IAAAO,KAMA,OALAqH,EAAAiiB,SAAA,KACAjiB,EAAA+J,SAAA,EACA/J,EAAAkiB,UAAA,EACAliB,EAAAmiB,QAAA,EACAniB,EAAAme,MAAA,EACAne,EA4GA,OApHAsB,EAAA0gB,EAAAliB,GAeAkiB,EAAA3rB,UAAA+rB,KAAA,WACAzpB,KAAA0pB,gBACA1pB,KAAAwpB,QAAA,EAEAxpB,KAAAupB,UAAA,IACAvpB,KAAAoR,SAAApR,KAAA2pB,QACA3pB,KAAAupB,UAAAvpB,KAAAspB,SAAAroB,OAAAjB,KAAAoR,WAQAiY,EAAA3rB,UAAAksB,SAAA,SAAAC,GACA7pB,KAAAspB,SAAAO,EAAAP,SACAtpB,KAAAupB,UAAAM,EAAAN,UACAvpB,KAAAoR,SAAAyY,EAAAzY,SACApR,KAAAwlB,KAAAqE,EAAArE,MAOA6D,EAAA3rB,UAAA0O,OAAA,SAAA0d,GACA,IAAAC,EAAA/pB,KAAAgqB,gBAAAF,GAEA,GAAAC,GAAA,GACA/pB,KAAAwpB,SAAAM,EACA9pB,KAAAwpB,QAAAxpB,KAAAoR,WAEApR,KAAAwlB,KACAxlB,KAAAwpB,QAAAxpB,KAAAwpB,QAAAxpB,KAAAoR,SAEApR,KAAAwpB,QAAAxpB,KAAAoR,SAAA,MAEA,IAAA6Y,EAAAjqB,KAAAwpB,QAAAxpB,KAAAupB,UAAA,OACAvpB,KAAAkqB,QAAAlqB,KAAAspB,SAAAW,IAAAnkB,KAAAsjB,QAAAe,MAEA,OAAAJ,GAMAV,EAAA3rB,UAAAmW,QAAA,WACA7T,KAAAoqB,mBACApqB,KAAAspB,SAAA,MAUAD,EAAAgB,SAAA,SAAAR,GAGA,IAFA,IAAAnP,EAAA4P,EAAAhB,EAAAiB,EAAAC,EACAC,KACAluB,EAAA,EAAAA,EAAAstB,EAAA5oB,SAAA1E,EAAA,CACAme,EAAAmP,EAAAttB,GACAkuB,EAAAluB,GAAA+tB,KACAA,EAAAhB,SAAAkB,KACAlB,EAAA5O,EAAA4O,SACA,QAAArnB,EAAA,EAAAA,EAAAqnB,EAAAroB,SAAAgB,EAEA,oBADAsoB,EAAAjB,EAAArnB,IAEAuoB,EAAArqB,KAAAipB,EAAAsB,UAAAH,SACA,GAAAA,aAAAnB,EACAoB,EAAArqB,KAAAoqB,OACA,CACA,IAAAI,EAAAJ,EAAAva,OAAA,EAKA,IAHAua,EADA,iBAAAA,EAAAL,QACAd,EAAAsB,UAAAH,EAAAL,SAEAK,EAAAL,QACAS,EAAA,IAAAA,EACAH,EAAArqB,KAAAoqB,GAKA,aAAA7P,EAAA6O,WAEAe,EAAAf,WAAA,EACAe,EAAAlZ,SAAA,EACAkZ,EAAA9E,MAAA,IAIA8E,EAAA9E,OAAA9K,EAAA8K,KAEA8E,EAAAf,UAAA7O,EAAA6O,UAAA,EAAA7O,EAAA6O,UAAA,GAEAe,EAAAlZ,SAAAoZ,EAAAvpB,OAAAqpB,EAAAf,WAGA,OAAAkB,GAEApB,EArHA,CAsHAF,EAAAzlB,SACArH,EAAAqH,QAAA2lB,wCCxKA,aACApsB,OAAAC,eAAAb,EAAA,cAAA8Q,OAAA,IACA,IAAAyd,EAAA9B,EAAA,mBACAK,EAAAL,EAAA,cACA+B,EAAA/B,EAAA,kBACAvgB,EAAAzC,KAAAyC,OAAAuiB,OACAC,EAAA,IAAAjlB,KAAAklB,MAiBAC,EAAA,WACA,SAAAA,EAAAC,EAAAC,EAAAC,GACAprB,KAAAqrB,qBAAAlC,EAAAzlB,QAEA1D,KAAAmrB,eAAA,KACAnrB,KAAAsrB,WAAA,KACAtrB,KAAAurB,WAAA,KACAvrB,KAAAwrB,uBAAA,EACAxrB,KAAAyrB,aAAA,KACAzrB,KAAA0rB,SAAAC,IACA3rB,KAAA4rB,WAAA,KACA5rB,KAAA6rB,uBAAA,EACA7rB,KAAA8rB,WAAA,KACA9rB,KAAA+rB,YAAA,EACA/rB,KAAAgsB,YAAA,EACAhsB,KAAAisB,iBAAA,EACAjsB,KAAAksB,iBAAA,EACAlsB,KAAAmsB,YAAA,EACAnsB,KAAAosB,iBAAA,EACApsB,KAAAqsB,iBAAA,EACArsB,KAAAssB,kBAAA,EACAtsB,KAAAusB,WAAA,KACAvsB,KAAAwsB,UAAA,KAEAxsB,KAAAysB,WAAA,EACAzsB,KAAA0sB,YAAA,EACA1sB,KAAA2sB,aAAA,IACA3sB,KAAA4sB,iBAAA,EACA5sB,KAAA6sB,SAAA,KACA7sB,KAAA8sB,UAAA,KACA9sB,KAAA+sB,WAAA,KACA/sB,KAAAgtB,UAAA,KACAhtB,KAAAitB,YAAA,KACAjtB,KAAAktB,iBAAA,EACAltB,KAAAmtB,gBAAA,EACAntB,KAAAotB,WAAA,EAEAptB,KAAAqtB,SAAA,EACArtB,KAAAstB,SAAA,KACAttB,KAAAutB,gBAAA,KACAvtB,KAAAwtB,iBAAA,EACAxtB,KAAAytB,aAAA,EACAztB,KAAA0tB,QAAA,KACA1tB,KAAA2tB,WAAA,EACA3tB,KAAA4tB,cAAA,EACA5tB,KAAA6tB,OAAA,EACA7tB,KAAA8tB,YAAA,EACA9tB,KAAA+tB,cAAA,EACA/tB,KAAAguB,sBAAA,KACAhuB,KAAAiuB,qBAAA,KACAjuB,KAAAkuB,WAAA,KACAluB,KAAAmuB,YAAA,KACAnuB,KAAAouB,SAAA,KACApuB,KAAAquB,aAAA,EACAruB,KAAAsuB,sBAAA,EACAtuB,KAAAuuB,kBAAA,KAEAvuB,KAAAia,OAAAiR,EACAC,GAAAC,GACAprB,KAAAypB,KAAA0B,EAAAC,GAEAprB,KAAAwuB,QAAAxuB,KAAAwuB,QACAxuB,KAAAoM,OAAApM,KAAAoM,OACApM,KAAAyuB,OAAAzuB,KAAAyuB,OACAzuB,KAAA0uB,eAAA1uB,KAAA0uB,eACA1uB,KAAA2uB,eAAA3uB,KAAA2uB,eA0sBA,OAxsBA1xB,OAAAC,eAAA+tB,EAAAvtB,UAAA,aAMAL,IAAA,kBAAA2C,KAAAysB,YACA7f,IAAA,SAAAO,GAGAnN,KAAAysB,WADA,iBAAAtf,KAAA,EACAA,EAEA,GAEA/P,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA+tB,EAAAvtB,UAAA,uBAOAL,IAAA,kBAAA2C,KAAAqrB,sBACAze,IAAA,SAAAO,GACA,GAAAA,GAAAnN,KAAAqrB,qBAAA,CACArrB,KAAAqrB,qBAAAle,EAEAnN,KAAA4uB,UAEA,QAAAC,EAAA7uB,KAAAkuB,WAAAW,MAAAC,KACAD,EAAAhb,UAEA7T,KAAAkuB,WAAA,KAEAluB,KAAAmuB,aAAAnuB,KAAAouB,UACApuB,KAAAypB,KAAAzpB,KAAAouB,SAAApuB,KAAAmuB,eAGA/wB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA+tB,EAAAvtB,UAAA,UAKAL,IAAA,kBAAA2C,KAAA0tB,SACA9gB,IAAA,SAAAO,GACAnN,KAAA4uB,UACA5uB,KAAA0tB,QAAAvgB,GAEA/P,YAAA,EACAD,cAAA,IAQA8tB,EAAAvtB,UAAA+rB,KAAA,SAAAI,EAAAuB,GACA,GAAAvB,GAAAuB,EAAA,CAGAprB,KAAA4uB,UAGA5uB,KAAAmuB,YAAA/C,EACAprB,KAAAouB,SAAAvE,EAEAA,EAAA1oB,MAAA4tB,QAAAlF,KAAAjpB,SAAAipB,GAEA,IAAAmF,EAAAhvB,KAAAqrB,qBACArrB,KAAAmrB,eAAA6D,EAAA3E,SAAA2E,EAAA3E,SAAAR,KAKAuB,EAAAhN,MACApe,KAAAsrB,WAAAT,EAAAnnB,QAAAurB,WAAA7D,EAAAhN,OAGApe,KAAAsrB,WAAA,IAAAT,EAAAnnB,QAAA,KAEA0nB,EAAA8D,OACAlvB,KAAAurB,WAAAV,EAAAnnB,QAAAurB,WAAA7D,EAAA8D,OACAlvB,KAAAwrB,uBAAAJ,EAAA8D,MAAA1D,wBAAA,IAGAxrB,KAAAwrB,uBAAA,EACAxrB,KAAAurB,WAAA,IAAAV,EAAAnnB,QAAA,MAGA,IAyEAupB,EAzEAxB,EAAAL,EAAAK,aA2EA,OA1EAA,MAAAliB,GAAAkiB,EAAAjiB,IAEAxJ,KAAAurB,WAAAuD,KAAA,KACA9uB,KAAAyrB,aAAA,IAAA3lB,KAAAklB,MAAAS,EAAAliB,EAAAkiB,EAAAjiB,GACAxJ,KAAA0rB,SAAAN,EAAAM,UAAAC,KAGA3rB,KAAAyrB,aAAA,IAAA3lB,KAAAklB,MAEAI,EAAAjnB,OACAnE,KAAA4rB,WAAAf,EAAAnnB,QAAAurB,WAAA7D,EAAAjnB,OACAnE,KAAA6rB,uBAAAT,EAAAjnB,MAAA0nB,wBAAA,IAGA7rB,KAAA4rB,WAAA,IAAAf,EAAAnnB,QAAA,KACA1D,KAAA6rB,uBAAA,GAGAT,EAAAzW,MACA3U,KAAA8rB,WAAAjB,EAAAnnB,QAAAurB,WAAA7D,EAAAzW,OAGA3U,KAAA8rB,WAAA,IAAAjB,EAAAnnB,SAAAkP,EAAA,IAAAC,EAAA,IAAAnU,EAAA,QAGA0sB,EAAA+D,eACAnvB,KAAAisB,iBAAAb,EAAA+D,cAAAne,IACAhR,KAAAksB,iBAAAd,EAAA+D,cAAA/f,KAGApP,KAAAisB,iBAAAjsB,KAAAksB,iBAAA,EACAd,EAAAe,aACAnsB,KAAAisB,kBAAAjsB,KAAAksB,kBACAlsB,KAAAmsB,aAAAf,EAAAe,WAGAnsB,KAAAmsB,YAAA,EAEAf,EAAAgE,eACApvB,KAAAosB,iBAAAhB,EAAAgE,cAAApe,IACAhR,KAAAqsB,iBAAAjB,EAAAgE,cAAAhgB,KAGApP,KAAAosB,iBAAApsB,KAAAqsB,iBAAA,EAEArsB,KAAA+rB,YAAAX,EAAAiE,SAAAre,IACAhR,KAAAgsB,YAAAZ,EAAAiE,SAAAjgB,IAEApP,KAAAssB,kBAAA1B,EAAAlnB,QAAA4rB,aAAAlE,EAAAmE,WAEAnE,EAAAoE,KACAxvB,KAAAusB,WAAA,mBAAAnB,EAAAoE,KACApE,EAAAoE,KACA5E,EAAAlnB,QAAA+rB,aAAArE,EAAAoE,MAGAxvB,KAAAusB,WAAA,KAEAyC,EAAAU,UACA1vB,KAAAwsB,UAAAwC,EAAAU,UAAAtE,EAAAoB,WAEAxsB,KAAAwsB,UAAApB,EAAAoB,WAAA,KAKAxsB,KAAAgtB,UAAAhtB,KAAAitB,YAAA,KACAjtB,KAAAktB,iBAAA,EACA9B,EAAA8B,kBAAA9B,EAAA8B,iBAAA,IACAltB,KAAAktB,iBAAA9B,EAAA8B,kBACAltB,KAAAmtB,gBAAA,EACAntB,KAAAotB,WAAA,EAGAhC,EAAA0B,WACA,WACA9sB,KAAA8sB,UAAA,OACA9sB,KAAA+sB,WAAA/sB,KAAA2vB,WACA,IAAA3C,EAAA5B,EAAA4B,UACAhtB,KAAAgtB,UAAA,IAAAlnB,KAAA8pB,UAAA5C,EAAAzjB,EAAAyjB,EAAAxjB,EAAAwjB,EAAAngB,EAAAmgB,EAAAva,GACA,MACA,aACAzS,KAAA8sB,UAAA,SACA9sB,KAAA+sB,WAAA/sB,KAAA6vB,aACA5C,EAAA7B,EAAA6B,YACAjtB,KAAAitB,YAAA,IAAAnnB,KAAAgqB,OAAA7C,EAAA1jB,EAAA0jB,EAAAzjB,EAAAyjB,EAAAra,GACA,MACA,WACA5S,KAAA8sB,UAAA,OACA9sB,KAAA+sB,WAAA/sB,KAAA+vB,WACA9C,EAAA7B,EAAA6B,YACAjtB,KAAAitB,YAAA,IAAAnnB,KAAAgqB,OAAA7C,EAAA1jB,EAAA0jB,EAAAzjB,EAAAyjB,EAAAra,GACA5S,KAAAitB,YAAA+C,UAAA/C,EAAAgD,KACA,MACA,YACAjwB,KAAA8sB,UAAA,QACA9sB,KAAA+sB,WAAA/sB,KAAAkwB,YACAlwB,KAAAmtB,gBAAA/B,EAAA+B,gBACAntB,KAAAotB,WAAAhC,EAAAgC,WAAAhC,EAAAgC,WAAA,EACA,MACA,YAIA,QACAptB,KAAA8sB,UAAA,QACA9sB,KAAA+sB,WAAA/sB,KAAAmwB,YAIAnwB,KAAA4nB,UAAAwD,EAAAxD,UACA5nB,KAAA0sB,YAAA,iBAAAtB,EAAAsB,aAAAtB,EAAAsB,YAAA,EAAAtB,EAAAsB,YAAA,EAEA1sB,KAAA4sB,gBAAAxB,EAAAwB,kBAAA,EAEA5sB,KAAA2sB,aAAAvB,EAAAuB,aAAA,EAAAvB,EAAAuB,aAAA,IAEA3sB,KAAA2tB,YAAAvC,EAAAuC,UAEA3tB,KAAAqtB,SAAA,EACArtB,KAAAstB,SAAA,IAAAxnB,KAAAklB,MACAhrB,KAAA6sB,SAAA,IAAA/mB,KAAAklB,MAAAI,EAAAgF,IAAA7mB,EAAA6hB,EAAAgF,IAAA5mB,GACAxJ,KAAAutB,gBAAAvtB,KAAA6sB,SAAAwD,QAEArwB,KAAAwtB,iBAAA,EAEAxtB,KAAA8tB,YAAA,EACA9tB,KAAAqB,UAAAU,IAAAqpB,EAAA/pB,QAAA+pB,EAAA/pB,KACArB,KAAAswB,gBAAAvuB,IAAAqpB,EAAAkF,cAAAlF,EAAAkF,aAQArF,EAAAvtB,UAAA8wB,QAAA,SAAAK,GACAA,EAAAC,OACAD,EAAAC,KAAAyB,KAAA1B,EAAA0B,MACA1B,EAAA0B,OACA1B,EAAA0B,KAAAzB,KAAAD,EAAAC,MACAD,GAAA7uB,KAAAiuB,uBACAjuB,KAAAiuB,qBAAAY,EAAA0B,MACA1B,GAAA7uB,KAAAguB,wBACAhuB,KAAAguB,sBAAAa,EAAAC,MAEAD,EAAA0B,KAAA,KACA1B,EAAAC,KAAA9uB,KAAAkuB,WACAluB,KAAAkuB,WAAAW,EAEAA,EAAA5U,QACA4U,EAAA5U,OAAA3H,YAAAuc,KAEA7uB,KAAA4tB,eAOA3C,EAAAvtB,UAAA+wB,OAAA,SAAA+B,GACA,GAAAxwB,KAAAqtB,UAAAmD,EAAA,CAGA,IAAAC,EAAAD,EAAAxwB,KAAAqtB,SACArtB,KAAAqtB,SAAAmD,EAEA5F,EAAAlnB,QAAAgtB,YAAAD,EAAAzwB,KAAA6sB,UAEA7sB,KAAAytB,aAAA,IAQAxC,EAAAvtB,UAAAgxB,eAAA,SAAAnlB,EAAAC,GACAxJ,KAAAytB,aAAA,EACAztB,KAAA6sB,SAAAtjB,IACAvJ,KAAA6sB,SAAArjB,KASAyhB,EAAAvtB,UAAAixB,eAAA,SAAAplB,EAAAC,GACAxJ,KAAAytB,aAAA,EACAztB,KAAAstB,SAAA/jB,IACAvJ,KAAAstB,SAAA9jB,KAQAyhB,EAAAvtB,UAAAizB,sBAAA,WACA3wB,KAAAwtB,iBAAA,GAEAvwB,OAAAC,eAAA+tB,EAAAvtB,UAAA,QAMAL,IAAA,kBAAA2C,KAAA6tB,OACAjhB,IAAA,SAAAO,GACAnN,KAAA6tB,QAAA1gB,EACAnN,KAAA+tB,aAAA/tB,KAAA4sB,iBAEAxvB,YAAA,EACAD,cAAA,IAGAF,OAAAC,eAAA+tB,EAAAvtB,UAAA,cAMAL,IAAA,kBAAA2C,KAAAquB,aACAzhB,IAAA,SAAAO,GACAnN,KAAAquB,cAAAlhB,EACA5E,EAAAyF,OAAAhO,KAAAoM,OAAApM,OAEAA,KAAAquB,aAAAlhB,GACA5E,EAAAC,IAAAxI,KAAAoM,OAAApM,MAEAA,KAAAquB,cAAAlhB,GAEA/P,YAAA,EACAD,cAAA,IAQA8tB,EAAAvtB,UAAAkzB,mBAAA,SAAA3hB,GACAjP,KAAAswB,YAAA,EACAtwB,KAAAqB,MAAA,EACArB,KAAAsuB,sBAAA,EACAtuB,KAAAuuB,kBAAAtf,GAOAgc,EAAAvtB,UAAAmzB,SAAA,SAAA5hB,GACAjP,KAAAqB,MAAA,EACArB,KAAAuuB,kBAAAtf,GAOAgc,EAAAvtB,UAAA0O,OAAA,SAAA0d,GAMA,GALA9pB,KAAAquB,cACAvE,IAAAhkB,KAAA0V,SAAAsV,YAAA,KAIA9wB,KAAA0tB,QAAA,CAGA,IAAAnxB,EAAAsyB,EAAAC,EAKAiC,EAAAC,EAJA,IAAAnC,EAAA7uB,KAAAguB,sBAAAa,IAAAC,EACAA,EAAAD,EAAAC,KACAD,EAAAziB,OAAA0d,GAIA9pB,KAAAwtB,kBACAuD,EAAA/wB,KAAAutB,gBAAAhkB,EACAynB,EAAAhxB,KAAAutB,gBAAA/jB,GAGA,IAAAynB,EAAAjxB,KAAAstB,SAAA/jB,EAAAvJ,KAAA6sB,SAAAtjB,EACA2nB,EAAAlxB,KAAAstB,SAAA9jB,EAAAxJ,KAAA6sB,SAAArjB,EAEA,GAAAxJ,KAAA6tB,MAIA,IAFA7tB,KAAA8tB,aAAAhE,EAEA9pB,KAAA8tB,aAAA,IAEA,GAAA9tB,KAAA+tB,aAAA,IACA/tB,KAAA+tB,cAAA/tB,KAAAysB,WACAzsB,KAAA+tB,cAAA,IACA/tB,KAAA8tB,YAAA,EACA9tB,KAAA+tB,aAAA,EACA/tB,KAAAqB,MAAA,EACA,MAIA,GAAArB,KAAA4tB,eAAA5tB,KAAA2sB,aACA3sB,KAAA8tB,aAAA9tB,KAAAysB,eADA,CAKA,IAAA4C,OAAA,EAMA,GAJAA,EADArvB,KAAA+rB,aAAA/rB,KAAAgsB,YACAhsB,KAAA+rB,YAEAniB,KAAAunB,UAAAnxB,KAAAgsB,YAAAhsB,KAAA+rB,aAAA/rB,KAAA+rB,aAEA/rB,KAAA8tB,YAAAuB,EAAA,CAGA,IAAA+B,OAAA,EAAAC,OAAA,EACA,GAAArxB,KAAAwtB,iBAAAxtB,KAAAytB,YAAA,CAEA,IAAA1D,EAAA,EAAA/pB,KAAA8tB,YAAAhE,EACAsH,GAAAH,EAAAF,GAAAhH,EAAAgH,EACAM,GAAAH,EAAAF,GAAAjH,EAAAiH,OAGAI,EAAAH,EACAI,EAAAH,EAGA30B,EAAA,EACA,QAAAqF,EAAAgI,KAAAoH,IAAAhR,KAAAktB,iBAAAltB,KAAA2sB,aAAA3sB,KAAA4tB,eAAArxB,EAAAqF,IAAArF,EAEA,KAAAyD,KAAA0sB,YAAA,GAAA9iB,KAAAunB,UAAAnxB,KAAA0sB,aAAA,CAGA,IAAA9uB,OAAA,EAqDA,GApDAoC,KAAAkuB,YACAtwB,EAAAoC,KAAAkuB,WACAluB,KAAAkuB,WAAAluB,KAAAkuB,WAAAY,KACAlxB,EAAAkxB,KAAA,MAGAlxB,EAAA,IAAAoC,KAAAsxB,oBAAAtxB,MAGAA,KAAAmrB,eAAAlqB,OAAA,EACArD,EAAAgsB,SAAA5pB,KAAAmrB,eAAAvhB,KAAAmC,MAAAnC,KAAAunB,SAAAnxB,KAAAmrB,eAAAlqB,UAKArD,EAAAgsB,SAAA5pB,KAAAmrB,eAAA,IAGAvtB,EAAA2zB,UAAArO,MAAAljB,KAAAsrB,YACA,GAAAtrB,KAAAwrB,yBACA5tB,EAAA4zB,gBAAA5nB,KAAAunB,UAAA,EAAAnxB,KAAAwrB,wBAAAxrB,KAAAwrB,wBAEA5tB,EAAA6zB,UAAAvO,MAAAljB,KAAAurB,YACA3tB,EAAA6tB,aAAAliB,EAAAvJ,KAAAyrB,aAAAliB,EACA3L,EAAA6tB,aAAAjiB,EAAAxJ,KAAAyrB,aAAAjiB,EACA5L,EAAA8tB,SAAA1rB,KAAA0rB,SACA,GAAA1rB,KAAA6rB,yBACAjuB,EAAA8zB,gBAAA9nB,KAAAunB,UAAA,EAAAnxB,KAAA6rB,wBAAA7rB,KAAA6rB,wBAEAjuB,EAAA+zB,UAAAzO,MAAAljB,KAAA4rB,YACAhuB,EAAAg0B,UAAA1O,MAAAljB,KAAA8rB,YAEA9rB,KAAAosB,kBAAApsB,KAAAqsB,iBACAzuB,EAAAwxB,cAAApvB,KAAAosB,iBAEAxuB,EAAAwxB,cAAAxlB,KAAAunB,UAAAnxB,KAAAqsB,iBAAArsB,KAAAosB,kBAAApsB,KAAAosB,iBACAxuB,EAAAuuB,WAAAnsB,KAAAmsB,WAEAvuB,EAAA+rB,QAAA0F,EAEAzxB,EAAA2xB,UAAAvvB,KAAAssB,kBAEA1uB,EAAA4xB,KAAAxvB,KAAAusB,WAEA3uB,EAAA4uB,UAAAxsB,KAAAwsB,UAEAxsB,KAAA+sB,WAAAnvB,EAAAwzB,EAAAC,EAAA90B,GAEAqB,EAAA6rB,OAEA7rB,EAAAwO,QAAApM,KAAA8tB,aAEAlwB,EAAAqc,OAMA,CAGA,IAAAJ,EAAA7Z,KAAA0tB,QAAA7T,SAEA,GAAAA,EAAA,IAAAjc,EACAic,EAAAgY,aACA,GAAAhY,IAAA5Y,OAAA,IAAArD,EACAic,EAAAiY,UACA,CACA,IAAA1K,EAAAvN,EAAApM,QAAA7P,GACAic,EAAA0N,OAAAH,EAAA,GAEApnB,KAAA2tB,UACA9T,EAAAkY,QAAAn0B,GAEAic,EAAA1Z,KAAAvC,QArBAoC,KAAA2tB,UACA3tB,KAAA0tB,QAAAsE,WAAAp0B,EAAA,GAEAoC,KAAA0tB,QAAAuE,SAAAr0B,GAqBAoC,KAAAiuB,sBACAjuB,KAAAiuB,qBAAAa,KAAAlxB,EACAA,EAAA2yB,KAAAvwB,KAAAiuB,qBACAjuB,KAAAiuB,qBAAArwB,GAGAoC,KAAAiuB,qBAAAjuB,KAAAguB,sBAAApwB,IAEAoC,KAAA4tB,eAIA5tB,KAAA8tB,aAAA9tB,KAAAysB,YAIAzsB,KAAAytB,cACAztB,KAAAutB,gBAAAhkB,EAAA0nB,EACAjxB,KAAAutB,gBAAA/jB,EAAA0nB,EACAlxB,KAAAwtB,iBAAA,EACAxtB,KAAAytB,aAAA,GAGAztB,KAAA6tB,OAAA7tB,KAAAguB,wBACAhuB,KAAAuuB,mBACAvuB,KAAAuuB,oBAEAvuB,KAAAsuB,sBACAtuB,KAAA6T,aAaAoX,EAAAvtB,UAAAyyB,YAAA,SAAAvyB,EAAAwzB,EAAAC,GAGArxB,KAAAisB,kBAAAjsB,KAAAksB,iBACAtuB,EAAAyvB,SAAArtB,KAAAisB,iBAAAjsB,KAAAqtB,SAEAzvB,EAAAyvB,SAAAzjB,KAAAunB,UAAAnxB,KAAAksB,iBAAAlsB,KAAAisB,kBAAAjsB,KAAAisB,iBAAAjsB,KAAAqtB,SAEAzvB,EAAA0O,SAAA/C,EAAA6nB,EACAxzB,EAAA0O,SAAA9C,EAAA6nB,GAWApG,EAAAvtB,UAAAiyB,WAAA,SAAA/xB,EAAAwzB,EAAAC,GAGArxB,KAAAisB,kBAAAjsB,KAAAksB,iBACAtuB,EAAAyvB,SAAArtB,KAAAisB,iBAAAjsB,KAAAqtB,SAEAzvB,EAAAyvB,SAAAzjB,KAAAunB,UAAAnxB,KAAAksB,iBAAAlsB,KAAAisB,kBAAAjsB,KAAAisB,iBAAAjsB,KAAAqtB,SAEAtC,EAAAxhB,EAAAK,KAAAunB,SAAAnxB,KAAAgtB,UAAA/oB,MAAAjE,KAAAgtB,UAAAzjB,EACAwhB,EAAAvhB,EAAAI,KAAAunB,SAAAnxB,KAAAgtB,UAAA9oB,OAAAlE,KAAAgtB,UAAAxjB,EACA,IAAAxJ,KAAAqtB,UACAzC,EAAAlnB,QAAAgtB,YAAA1wB,KAAAqtB,SAAAtC,GACAntB,EAAA0O,SAAA/C,EAAA6nB,EAAArG,EAAAxhB,EACA3L,EAAA0O,SAAA9C,EAAA6nB,EAAAtG,EAAAvhB,GAWAyhB,EAAAvtB,UAAAmyB,aAAA,SAAAjyB,EAAAwzB,EAAAC,GAGArxB,KAAAisB,kBAAAjsB,KAAAksB,iBACAtuB,EAAAyvB,SAAArtB,KAAAisB,iBAAAjsB,KAAAqtB,SAEAzvB,EAAAyvB,SAAAzjB,KAAAunB,UAAAnxB,KAAAksB,iBAAAlsB,KAAAisB,kBACAjsB,KAAAisB,iBAAAjsB,KAAAqtB,SAEAtC,EAAAxhB,EAAAK,KAAAunB,SAAAnxB,KAAAitB,YAAAiF,OACAnH,EAAAvhB,EAAA,EAEAohB,EAAAlnB,QAAAgtB,YAAA,IAAA9mB,KAAAunB,SAAApG,GAEAA,EAAAxhB,GAAAvJ,KAAAitB,YAAA1jB,EACAwhB,EAAAvhB,GAAAxJ,KAAAitB,YAAAzjB,EAEA,IAAAxJ,KAAAqtB,UACAzC,EAAAlnB,QAAAgtB,YAAA1wB,KAAAqtB,SAAAtC,GAEAntB,EAAA0O,SAAA/C,EAAA6nB,EAAArG,EAAAxhB,EACA3L,EAAA0O,SAAA9C,EAAA6nB,EAAAtG,EAAAvhB,GAWAyhB,EAAAvtB,UAAAqyB,WAAA,SAAAnyB,EAAAwzB,EAAAC,GACA,IAAApE,EAAAjtB,KAAAitB,YAGAjtB,KAAAisB,kBAAAjsB,KAAAksB,iBACAtuB,EAAAyvB,SAAArtB,KAAAisB,iBAAAjsB,KAAAqtB,SAEAzvB,EAAAyvB,SAAAzjB,KAAAunB,UAAAnxB,KAAAksB,iBAAAlsB,KAAAisB,kBACAjsB,KAAAisB,iBAAAjsB,KAAAqtB,SAEAJ,EAAA+C,WAAA/C,EAAAiF,OACAnH,EAAAxhB,EAAAK,KAAAunB,UAAAlE,EAAAiF,OAAAjF,EAAA+C,WACA/C,EAAA+C,UAGAjF,EAAAxhB,EAAA0jB,EAAAiF,OACAnH,EAAAvhB,EAAA,EAEA,IAAA2oB,EAAA,IAAAvoB,KAAAunB,SACAvzB,EAAAyvB,UAAA8E,EACAvH,EAAAlnB,QAAAgtB,YAAAyB,EAAApH,GAEAA,EAAAxhB,GAAAvJ,KAAAitB,YAAA1jB,EACAwhB,EAAAvhB,GAAAxJ,KAAAitB,YAAAzjB,EAEA,IAAAxJ,KAAAqtB,UACAzC,EAAAlnB,QAAAgtB,YAAA1wB,KAAAqtB,SAAAtC,GAEAntB,EAAA0O,SAAA/C,EAAA6nB,EAAArG,EAAAxhB,EACA3L,EAAA0O,SAAA9C,EAAA6nB,EAAAtG,EAAAvhB,GAWAyhB,EAAAvtB,UAAAwyB,YAAA,SAAAtyB,EAAAwzB,EAAAC,EAAA90B,GAGA,IAAAyD,KAAAmtB,gBACAvvB,EAAAyvB,SAAA,IAAAzjB,KAAAunB,SAEAvzB,EAAAyvB,SAAArtB,KAAAotB,WAAAptB,KAAAmtB,gBAAA5wB,EAAAyD,KAAAqtB,SAEAzvB,EAAA0O,SAAA/C,EAAA6nB,EACAxzB,EAAA0O,SAAA9C,EAAA6nB,GAMApG,EAAAvtB,UAAAkxB,QAAA,WACA,IAAAC,EAAAC,EACA,IAAAD,EAAA7uB,KAAAguB,sBAAAa,IAAAC,EACAA,EAAAD,EAAAC,KACA9uB,KAAAwuB,QAAAK,GACAA,EAAA5U,QACA4U,EAAA5U,OAAA3H,YAAAuc,GAEA7uB,KAAAguB,sBAAAhuB,KAAAiuB,qBAAA,KACAjuB,KAAA4tB,cAAA,GAMA3C,EAAAvtB,UAAAmW,QAAA,WAMA,IAAAib,EAJA9uB,KAAAswB,YAAA,EAEAtwB,KAAA4uB,UAGA,QAAAC,EAAA7uB,KAAAkuB,WAAAW,IAAAC,EAEAA,EAAAD,EAAAC,KACAD,EAAAhb,UAEA7T,KAAAkuB,WAAAluB,KAAA0tB,QAAA1tB,KAAAmrB,eAAAnrB,KAAA6sB,SAAA7sB,KAAAstB,SACAttB,KAAA8rB,WAAA9rB,KAAA4rB,WAAA5rB,KAAAsrB,WAAAtrB,KAAAurB,WACAvrB,KAAAusB,WAAAvsB,KAAAuuB,kBAAA,MAEAtD,EA3wBA,GA6wBA5uB,EAAAqH,QAAAunB,+ECpyBA,aACA,IACAlC,EADApgB,EAAA3I,WAAA2I,YACAogB,EAAA9rB,OAAA+rB,iBACAxoB,wBAAAW,OAAA,SAAAtE,EAAA6B,GAAA7B,EAAA2D,UAAA9B,IACA,SAAA7B,EAAA6B,GAAA,QAAAd,KAAAc,IAAAf,eAAAC,KAAAf,EAAAe,GAAAc,EAAAd,KACA,SAAAf,EAAA6B,GAEA,SAAAuqB,IAAAjpB,KAAAkpB,YAAArsB,EADAksB,EAAAlsB,EAAA6B,GAEA7B,EAAAa,UAAA,OAAAgB,EAAAzB,OAAAsD,OAAA7B,IAAAuqB,EAAAvrB,UAAAgB,EAAAhB,UAAA,IAAAurB,KAGAhsB,OAAAC,eAAAb,EAAA,cAAA8Q,OAAA,IACA,IAAAyd,EAAA9B,EAAA,mBACAsJ,EAAAtJ,EAAA,kBAUAuJ,EAAA,SAAAlrB,GAEA,SAAAkrB,EAAA5yB,GACA,IAAA4H,EAGAF,EAAAzK,KAAAsD,YAwGA,OAvGAqH,EAAA5H,UAEA4H,EAAAoI,OAAAlG,EAAAlC,EAAAoI,OAAAjG,EAAA,GACAnC,EAAAirB,SAAA,IAAAxsB,KAAAklB,MACA3jB,EAAAsiB,QAAA,EACAtiB,EAAAkrB,IAAA,EACAlrB,EAAAmoB,KAAA,KACAnoB,EAAAmlB,UAAA,KACAnlB,EAAAkqB,UAAA,IAAAa,EAAA1uB,QACA2D,EAAAoqB,UAAA,IAAAW,EAAA1uB,QACA2D,EAAAmqB,gBAAA,EAKAnqB,EAAAokB,aAAA,IAAA3lB,KAAAklB,MAOA3jB,EAAAqkB,SAAAC,IAKAtkB,EAAAsqB,UAAA,IAAAS,EAAA1uB,QAKA2D,EAAAqqB,gBAAA,EAKArqB,EAAAuqB,UAAA,IAAAQ,EAAA1uB,SAAA,GAMA2D,EAAAmrB,UAAA,EAMAnrB,EAAAorB,UAAA,EAMAprB,EAAAqrB,UAAA,EAOArrB,EAAAsrB,iBAAA,EAMAtrB,EAAAurB,UAAA,EAOAvrB,EAAAwrB,mBAAA,EAMAxrB,EAAAyrB,aAAA,EAMAzrB,EAAAynB,KAAA,KAMAznB,EAAAkpB,KAAA,KAEAlpB,EAAAoiB,KAAApiB,EAAAoiB,KACApiB,EAAAqiB,cAAA2I,EAAA30B,UAAA+rB,KACApiB,EAAA+E,OAAA/E,EAAA+E,OACA/E,EAAA2iB,gBAAAqI,EAAA30B,UAAA0O,OACA/E,EAAA0rB,eAAA5rB,EAAAzJ,UAAAmW,QACAxM,EAAA+iB,iBAAAiI,EAAA30B,UAAAmW,QACAxM,EAAAuiB,SAAAviB,EAAAuiB,SACAviB,EAAA2rB,KAAA3rB,EAAA2rB,KACA3rB,EA0LA,OAvSAsB,EAAA0pB,EAAAlrB,GAoHAkrB,EAAA30B,UAAA+rB,KAAA,WAEAzpB,KAAAuyB,IAAA,EAEAvyB,KAAAsyB,SAAA/oB,EAAAvJ,KAAAyxB,UAAAlZ,QAAApL,MAAAnN,KAAAwxB,gBACAxxB,KAAAsyB,SAAA9oB,EAAA,EACAohB,EAAAlnB,QAAAgtB,YAAA1wB,KAAAqtB,SAAArtB,KAAAsyB,UACAtyB,KAAAmsB,WACAnsB,KAAAqtB,SAAA,EAIArtB,KAAAqtB,UAAAzC,EAAAlnB,QAAAuvB,YAGAjzB,KAAAovB,eAAAxE,EAAAlnB,QAAAuvB,YAEAjzB,KAAAoe,MAAApe,KAAAuxB,UAAAhZ,QAAApL,MAEAnN,KAAAmE,MAAAoF,EAAAvJ,KAAAmE,MAAAqF,EAAAxJ,KAAA2xB,UAAApZ,QAAApL,MAEAnN,KAAAwyB,WAAAxyB,KAAAuxB,UAAAhZ,QAAAuW,KACA9uB,KAAA0yB,WAAA1yB,KAAAyxB,UAAAlZ,QAAAuW,KACA9uB,KAAAyyB,WAAAzyB,KAAA2xB,UAAApZ,QAAAuW,KACA9uB,KAAA4yB,WAAA5yB,KAAA4xB,UAAArZ,QAAAuW,KACA9uB,KAAA2yB,gBAAA,IAAA3yB,KAAAyrB,aAAAliB,GAAA,IAAAvJ,KAAAyrB,aAAAjiB,EAEAxJ,KAAA6yB,kBAAA7yB,KAAA0yB,UAAA,IAAA1yB,KAAAyxB,UAAAlZ,QAAApL,OAAAnN,KAAA2yB,gBAEA3yB,KAAA8yB,aAAA,EAAA9yB,KAAA2pB,QAEA,IAAAhV,EAAA3U,KAAA4xB,UAAArZ,QAAApL,MACAnN,KAAAkzB,KAAAtI,EAAAlnB,QAAAyvB,qBAAAxe,EAAA/B,EAAA+B,EAAA9B,EAAA8B,EAAAjW,GAEAsB,KAAAuV,SAAA,GAQA8c,EAAA30B,UAAAksB,SAAA,SAAAC,GACA7pB,KAAAkqB,QAAAL,GAAA/jB,KAAAsjB,QAAAe,OASAkI,EAAA30B,UAAA0O,OAAA,SAAA0d,GAIA,GAFA9pB,KAAAuyB,KAAAzI,EAEA9pB,KAAAuyB,KAAAvyB,KAAA2pB,QAEA,OADA3pB,KAAAgzB,QACA,EAGA,IAAAjJ,EAAA/pB,KAAAuyB,IAAAvyB,KAAA8yB,aAiBA,GAhBA9yB,KAAAwvB,OAIAzF,EAHA,GAAA/pB,KAAAwvB,KAAAvuB,OAGAjB,KAAAwvB,KAAAzF,EAAA,OAKA/pB,KAAAwvB,KAAAzF,IAIA/pB,KAAAwyB,WACAxyB,KAAAoe,MAAApe,KAAAuxB,UAAA6B,YAAArJ,IAEA/pB,KAAAyyB,SAAA,CACA,IAAAtuB,EAAAnE,KAAA2xB,UAAAyB,YAAArJ,GAAA/pB,KAAA0xB,gBACA1xB,KAAAmE,MAAAoF,EAAAvJ,KAAAmE,MAAAqF,EAAArF,EAGA,GAAAnE,KAAA6yB,kBAAA,CAEA,GAAA7yB,KAAA0yB,SAAA,CACA,IAAAxD,EAAAlvB,KAAAyxB,UAAA2B,YAAArJ,GAAA/pB,KAAAwxB,gBACA5G,EAAAlnB,QAAA2vB,UAAArzB,KAAAsyB,UACA1H,EAAAlnB,QAAA4vB,QAAAtzB,KAAAsyB,SAAApD,QAEA,GAAAlvB,KAAA2yB,kBACA3yB,KAAAsyB,SAAA/oB,GAAAvJ,KAAAyrB,aAAAliB,EAAAugB,EACA9pB,KAAAsyB,SAAA9oB,GAAAxJ,KAAAyrB,aAAAjiB,EAAAsgB,EACA9pB,KAAA0rB,UAAA,CACA,IAAA6H,EAAA3I,EAAAlnB,QAAAzC,OAAAjB,KAAAsyB,UAGAiB,EAAAvzB,KAAA0rB,UACAd,EAAAlnB,QAAA4vB,QAAAtzB,KAAAsyB,SAAAtyB,KAAA0rB,SAAA6H,GAKAvzB,KAAAsM,SAAA/C,GAAAvJ,KAAAsyB,SAAA/oB,EAAAugB,EACA9pB,KAAAsM,SAAA9C,GAAAxJ,KAAAsyB,SAAA9oB,EAAAsgB,EAaA,OAVA9pB,KAAA4yB,WACA5yB,KAAAkzB,KAAAlzB,KAAA4xB,UAAAwB,YAAArJ,IAGA,IAAA/pB,KAAAovB,cACApvB,KAAAqtB,UAAArtB,KAAAovB,cAAAtF,EAEA9pB,KAAAyrB,eAAAzrB,KAAAmsB,aACAnsB,KAAAqtB,SAAAzjB,KAAA4pB,MAAAxzB,KAAAsyB,SAAA9oB,EAAAxJ,KAAAsyB,SAAA/oB,IAEAwgB,GAOAsI,EAAA30B,UAAAs1B,KAAA,WACAhzB,KAAAP,QAAA+uB,QAAAxuB,OAMAqyB,EAAA30B,UAAAmW,QAAA,WACA7T,KAAAia,QACAja,KAAAia,OAAA3H,YAAAtS,MACAA,KAAA+yB,iBACA/yB,KAAAP,QAAAO,KAAAsyB,SAAAtyB,KAAA4xB,UAAA5xB,KAAA2xB,UAAA3xB,KAAAuxB,UACAvxB,KAAAyxB,UAAAzxB,KAAAwvB,KAAAxvB,KAAA8uB,KAAA9uB,KAAAuwB,KAAA,MAYA8B,EAAAhI,SAAA,SAAAR,GAEA,IAAAttB,EACA,IAAAA,EAAAstB,EAAA5oB,OAAA1E,GAAA,IAAAA,EACA,iBAAAstB,EAAAttB,KACAstB,EAAAttB,GAAAuJ,KAAAsjB,QAAAsB,UAAAb,EAAAttB,KAIA,GAAAquB,EAAAlnB,QAAA+vB,QACA,IAAAl3B,EAAAstB,EAAA5oB,OAAA,EAAA1E,EAAA,IAAAA,EACA,GAAAstB,EAAAttB,GAAAyf,aAAA6N,EAAAttB,EAAA,GAAAyf,YAAA,CACA1X,OAAAoU,SACAA,QAAAgb,KAAA,gGACA,MAIA,OAAA7J,GAUAwI,EAAA3C,UAAA,SAAAlD,GACA,OAAAA,GAEA6F,EAxSA,CATAvsB,KAAA6tB,QAmTAt3B,EAAAqH,QAAA2uB,gECjUA,aACAp1B,OAAAC,eAAAb,EAAA,cAAA8Q,OAAA,IACA,IAAAymB,EAAA9tB,KAAA8tB,YACA/I,EAAA/B,EAAA,kBAOA+K,GAOAJ,SAAA,EACAR,YAAArpB,KAAAkqB,GAAA,IAQApD,YAAA,SAAAyB,EAAAv0B,GACA,GAAAu0B,EAAA,CAEAA,GAAA0B,EAAAZ,YACA,IAAAp1B,EAAA+L,KAAAmqB,IAAA5B,GACAv1B,EAAAgN,KAAAoqB,IAAA7B,GACA8B,EAAAr2B,EAAA2L,EAAA3M,EAAAgB,EAAA4L,EAAA3L,EACAq2B,EAAAt2B,EAAA2L,EAAA1L,EAAAD,EAAA4L,EAAA5M,EACAgB,EAAA2L,EAAA0qB,EACAr2B,EAAA4L,EAAA0qB,IAWAf,qBAAA,SAAAvgB,EAAAC,EAAAnU,GACA,OAAAkU,GAAA,GAAAC,GAAA,EAAAnU,GAQA20B,UAAA,SAAAra,GACA,IAAAmb,EAAA,EAAAN,EAAA5yB,OAAA+X,GACAA,EAAAzP,GAAA4qB,EACAnb,EAAAxP,GAAA2qB,GASAb,QAAA,SAAAta,EAAA7L,GACA6L,EAAAzP,GAAA4D,EACA6L,EAAAxP,GAAA2D,GASAlM,OAAA,SAAA+X,GACA,OAAApP,KAAAwqB,KAAApb,EAAAzP,EAAAyP,EAAAzP,EAAAyP,EAAAxP,EAAAwP,EAAAxP,IAYA6qB,SAAA,SAAA1f,EAAA2V,GAOA,IAAAlM,EAUA,OAhBAkM,IACAA,MACA,KAAA3V,EAAA2f,OAAA,GACA3f,IAAA4f,OAAA,GACA,IAAA5f,EAAAlH,QAAA,QACAkH,IAAA4f,OAAA,IAEA,GAAA5f,EAAA1T,SACAmd,EAAAzJ,EAAA4f,OAAA,KACA5f,IAAA4f,OAAA,IAEAjK,EAAA1X,EAAA4hB,SAAA7f,EAAA4f,OAAA,SACAjK,EAAAzX,EAAA2hB,SAAA7f,EAAA4f,OAAA,SACAjK,EAAA5rB,EAAA81B,SAAA7f,EAAA4f,OAAA,SACAnW,IACAkM,EAAA7rB,EAAA+1B,SAAApW,EAAA,KACAkM,GAYAmF,aAAA,SAAAgF,GACA,IAAAC,EAAAD,EAAAxzB,OACA0zB,EAAA,EAAAD,EAOA,gBAAA9kB,GACA,IAAA6Y,EAAA5qB,EACAtB,EAAAm4B,EAAA9kB,EAAA,EAGA,OAFA6Y,GAAA7Y,EAAArT,EAAAo4B,GAAAD,GACA72B,EAAA42B,EAAAl4B,IAAAk4B,EAAAC,EAAA,IACA72B,EAAA4qB,GAAA,KAAAA,IAAA5qB,EAAA+2B,GAAA/2B,KAAA4qB,GAAA5qB,EAAAqP,EAAArP,QAUAyxB,aAAA,SAAAxyB,GACA,IAAAA,EACA,OAAA82B,EAAAtL,OAEA,IADAxrB,IAAA+3B,cACA/3B,EAAA2Q,QAAA,SACA3Q,IAAAmkB,QAAA,SACA,OAAA2S,EAAA92B,IAAA82B,EAAAtL,QAYAwM,sBAAA,SAAAC,EAAAC,QACA,IAAAA,MAAA,KACA,iBAAAA,MAAA,KACAA,EAAA,IACA,IAAA/1B,EAAA,IAAA4rB,EAAAnnB,QAAAqxB,EAAA,GAAA5nB,MAAA4nB,EAAA,GAAAnlB,MACA3Q,EAAAg2B,WAAA,EAKA,IAJA,IAAAC,EAAAj2B,EACAsZ,EAAAwc,EAAA,GACAI,EAAA,EACArG,EAAAiG,EAAAI,GACA54B,EAAA,EAAAA,EAAAy4B,IAAAz4B,EAAA,CAGA,IAFA,IAAAwtB,EAAAxtB,EAAAy4B,EAEAjL,EAAA+E,EAAAlf,MACA2I,EAAAuW,EACAA,EAAAiG,IAAAI,GAGApL,KAAAxR,EAAA3I,OAAAkf,EAAAlf,KAAA2I,EAAA3I,MACA,IAAAwlB,EAAAvB,EAAAQ,SAAA9b,EAAApL,OACAkoB,EAAAxB,EAAAQ,SAAAvF,EAAA3hB,OACAmd,KACAA,EAAA1X,GAAAyiB,EAAAziB,EAAAwiB,EAAAxiB,GAAAmX,EAAAqL,EAAAxiB,EACA0X,EAAAzX,GAAAwiB,EAAAxiB,EAAAuiB,EAAAviB,GAAAkX,EAAAqL,EAAAviB,EACAyX,EAAA5rB,GAAA22B,EAAA32B,EAAA02B,EAAA12B,GAAAqrB,EAAAqL,EAAA12B,EACAw2B,EAAApG,KAAA,IAAAjE,EAAAnnB,QAAA4mB,EAAA/tB,EAAAy4B,GACAE,IAAApG,KAIA,OAAA7vB,IAGA5C,EAAAqH,QAAAmwB,4CCnMA,aACA,IACA9K,EADApgB,EAAA3I,WAAA2I,YACAogB,EAAA9rB,OAAA+rB,iBACAxoB,wBAAAW,OAAA,SAAAtE,EAAA6B,GAAA7B,EAAA2D,UAAA9B,IACA,SAAA7B,EAAA6B,GAAA,QAAAd,KAAAc,IAAAf,eAAAC,KAAAf,EAAAe,GAAAc,EAAAd,KACA,SAAAf,EAAA6B,GAEA,SAAAuqB,IAAAjpB,KAAAkpB,YAAArsB,EADAksB,EAAAlsB,EAAA6B,GAEA7B,EAAAa,UAAA,OAAAgB,EAAAzB,OAAAsD,OAAA7B,IAAAuqB,EAAAvrB,UAAAgB,EAAAhB,UAAA,IAAAurB,KAGAhsB,OAAAC,eAAAb,EAAA,cAAA8Q,OAAA,IACA,IAAAyd,EAAA9B,EAAA,mBACAK,EAAAL,EAAA,cAKAiC,EAAA,IAAAjlB,KAAAklB,MAGAsK,GACA,MACA,OACA,MACA,QACA,QACA,OACA,IACA,KACA,MACA,MACA,MACA,OACA,OACA,OACA,QACA,OAGAC,EAAA,IAAAC,QAGA,yCACA10B,OAAAw0B,GAAAv2B,KAAA,UA6CA02B,EAAA,SAAAtuB,GAEA,SAAAsuB,EAAAh2B,GACA,IAAA4H,EAAAF,EAAAzK,KAAAsD,KAAAP,IAAAO,KAKA,OAJAqH,EAAAquB,KAAA,KACAruB,EAAAsuB,gBAAA,EACAtuB,EAAAuuB,gBAAA,IAAA9vB,KAAAklB,MACA3jB,EAAAwuB,SAAA,EACAxuB,EA4FA,OAnGAsB,EAAA8sB,EAAAtuB,GAcAsuB,EAAA/3B,UAAA+rB,KAAA,WAEAzpB,KAAA21B,gBAAA31B,KAAAqtB,SAEArtB,KAAA0pB,gBAEA1pB,KAAA01B,KAAA11B,KAAAwsB,UAAAkJ,KAEA11B,KAAA6yB,mBAAA7yB,KAAA01B,KAEA11B,KAAA61B,SAAA,EAEA71B,KAAA41B,gBAAArsB,EAAAvJ,KAAAsM,SAAA/C,EACAvJ,KAAA41B,gBAAApsB,EAAAxJ,KAAAsM,SAAA9C,GAOAisB,EAAA/3B,UAAA0O,OAAA,SAAA0d,GACA,IAAAC,EAAA/pB,KAAAgqB,gBAAAF,GAEA,GAAAC,GAAA,GAAA/pB,KAAA01B,KAAA,CAEA,IAAAxG,EAAAlvB,KAAAyxB,UAAA2B,YAAArJ,GAAA/pB,KAAAwxB,gBACAxxB,KAAA61B,UAAA3G,EAAApF,EAEAiB,EAAAxhB,EAAAvJ,KAAA61B,SACA9K,EAAAvhB,EAAAxJ,KAAA01B,KAAA11B,KAAA61B,UACAjL,EAAAlnB,QAAAgtB,YAAA1wB,KAAA21B,gBAAA5K,GACA/qB,KAAAsM,SAAA/C,EAAAvJ,KAAA41B,gBAAArsB,EAAAwhB,EAAAxhB,EACAvJ,KAAAsM,SAAA9C,EAAAxJ,KAAA41B,gBAAApsB,EAAAuhB,EAAAvhB,EAEA,OAAAugB,GAMA0L,EAAA/3B,UAAAmW,QAAA,WACA7T,KAAAoqB,mBACApqB,KAAA01B,KAAA11B,KAAA41B,gBAAA,MAYAH,EAAApL,SAAA,SAAAR,GACA,OAAAV,EAAAzlB,QAAA2mB,SAAAR,IAWA4L,EAAA/F,UAAA,SAAAlD,GACA,IAAAlC,KACA,GAAAkC,KAAAkJ,KACA,IACApL,EAAAoL,KAvHA,SAAAI,GAEA,IADA,IAAAC,EAAAD,EAAAzoB,MAAAkoB,GACAh5B,EAAAw5B,EAAA90B,OAAA,EAAA1E,GAAA,IAAAA,EACA+4B,EAAA7nB,QAAAsoB,EAAAx5B,KAAA,IACAw5B,EAAAx5B,GAAA,QAAAw5B,EAAAx5B,IAGA,OADAu5B,EAAAC,EAAAh3B,KAAA,IACA,IAAAi3B,SAAA,cAAAF,EAAA,KAgHAG,CAAAzJ,EAAAkJ,MAEA,MAAAxoB,GACA0d,EAAAlnB,QAAA+vB,SACA/a,QAAA8G,MAAA,kDACA8K,EAAAoL,KAAA,UAIA9K,EAAAlnB,QAAA+vB,SACA/a,QAAA8G,MAAA,qDACA8K,EAAAoL,KAAA,KAEA,OAAApL,GAEAmL,EApGA,CAqGAtM,EAAAzlB,SACArH,EAAAqH,QAAA+xB,4DC/LA,aACAx4B,OAAAC,eAAAb,EAAA,cAAA8Q,OAAA,IACA,IAAAyd,EAAA9B,EAAA,mBASAoN,EAAA,WACA,SAAAA,EAAAC,QACA,IAAAA,OAAA,GACAn2B,KAAAuY,QAAA,KACAvY,KAAA8uB,KAAA,KACA9uB,KAAAm2B,YACAn2B,KAAAozB,YAAA,KACApzB,KAAAwvB,KAAA,KAuBA,OAfA0G,EAAAx4B,UAAAwlB,MAAA,SAAAjkB,GACAe,KAAAuY,QAAAtZ,EACAe,KAAA8uB,KAAA7vB,EAAA6vB,KACA9uB,KAAA8uB,MAAA9uB,KAAA8uB,KAAAlf,MAAA,EAEA5P,KAAAozB,YAAApzB,KAAAm2B,QAAAC,EAAAC,EAEAp3B,EAAAg2B,UACAj1B,KAAAozB,YAAApzB,KAAAm2B,QAAAG,EAAAC,EAGAv2B,KAAAozB,YAAApzB,KAAAm2B,QAAAK,EAAAC,EAEAz2B,KAAAwvB,KAAAxvB,KAAAuY,QAAAiX,MAEA0G,EA9BA,GAiCA,SAAAG,EAAAtM,GAGA,OAFA/pB,KAAAwvB,OACAzF,EAAA/pB,KAAAwvB,KAAAzF,KACA/pB,KAAA8uB,KAAA3hB,MAAAnN,KAAAuY,QAAApL,OAAA4c,EAAA/pB,KAAAuY,QAAApL,MAEA,SAAAipB,EAAArM,GACA/pB,KAAAwvB,OACAzF,EAAA/pB,KAAAwvB,KAAAzF,IACA,IAAAqL,EAAAp1B,KAAAuY,QAAApL,MAAAkoB,EAAAr1B,KAAA8uB,KAAA3hB,MACAyF,GAAAyiB,EAAAziB,EAAAwiB,EAAAxiB,GAAAmX,EAAAqL,EAAAxiB,EACAC,GAAAwiB,EAAAxiB,EAAAuiB,EAAAviB,GAAAkX,EAAAqL,EAAAviB,EACAnU,GAAA22B,EAAA32B,EAAA02B,EAAA12B,GAAAqrB,EAAAqL,EAAA12B,EACA,OAAAksB,EAAAlnB,QAAAyvB,qBAAAvgB,EAAAC,EAAAnU,GAEA,SAAA+3B,EAAA1M,GAIA,IAHA/pB,KAAAwvB,OACAzF,EAAA/pB,KAAAwvB,KAAAzF,IAEAA,EAAA/pB,KAAA8uB,KAAAlf,MACA5P,KAAAuY,QAAAvY,KAAA8uB,KACA9uB,KAAA8uB,KAAA9uB,KAAA8uB,UAIA,OADA/E,KAAA/pB,KAAAuY,QAAA3I,OAAA5P,KAAA8uB,KAAAlf,KAAA5P,KAAAuY,QAAA3I,OACA5P,KAAA8uB,KAAA3hB,MAAAnN,KAAAuY,QAAApL,OAAA4c,EAAA/pB,KAAAuY,QAAApL,MAEA,SAAAqpB,EAAAzM,GAIA,IAHA/pB,KAAAwvB,OACAzF,EAAA/pB,KAAAwvB,KAAAzF,IAEAA,EAAA/pB,KAAA8uB,KAAAlf,MACA5P,KAAAuY,QAAAvY,KAAA8uB,KACA9uB,KAAA8uB,KAAA9uB,KAAA8uB,UAGA/E,KAAA/pB,KAAAuY,QAAA3I,OAAA5P,KAAA8uB,KAAAlf,KAAA5P,KAAAuY,QAAA3I,MACA,IAAAwlB,EAAAp1B,KAAAuY,QAAApL,MAAAkoB,EAAAr1B,KAAA8uB,KAAA3hB,MACAyF,GAAAyiB,EAAAziB,EAAAwiB,EAAAxiB,GAAAmX,EAAAqL,EAAAxiB,EACAC,GAAAwiB,EAAAxiB,EAAAuiB,EAAAviB,GAAAkX,EAAAqL,EAAAviB,EACAnU,GAAA22B,EAAA32B,EAAA02B,EAAA12B,GAAAqrB,EAAAqL,EAAA12B,EACA,OAAAksB,EAAAlnB,QAAAyvB,qBAAAvgB,EAAAC,EAAAnU,GAEA,SAAA63B,EAAAxM,GAIA,IAHA/pB,KAAAwvB,OACAzF,EAAA/pB,KAAAwvB,KAAAzF,IAEA/pB,KAAA8uB,MAAA/E,EAAA/pB,KAAA8uB,KAAAlf,MACA5P,KAAAuY,QAAAvY,KAAA8uB,KACA9uB,KAAA8uB,KAAA9uB,KAAA8uB,UAEA,OAAA9uB,KAAAuY,QAAApL,MAEA,SAAAmpB,EAAAvM,GAIA,IAHA/pB,KAAAwvB,OACAzF,EAAA/pB,KAAAwvB,KAAAzF,IAEA/pB,KAAA8uB,MAAA/E,EAAA/pB,KAAA8uB,KAAAlf,MACA5P,KAAAuY,QAAAvY,KAAA8uB,KACA9uB,KAAA8uB,KAAA9uB,KAAA8uB,UAEA,IAAAsG,EAAAp1B,KAAAuY,QAAApL,MACA,OAAAyd,EAAAlnB,QAAAyvB,qBAAAiC,EAAAxiB,EAAAwiB,EAAAviB,EAAAuiB,EAAA12B,GA9DArC,EAAAqH,QAAAwyB,6CC3CA,aACAj5B,OAAAC,eAAAb,EAAA,cAAA8Q,OAAA,IACA,IAAAyd,EAAA9B,EAAA,mBAUA4N,EAAA,WACA,SAAAA,EAAAvpB,EAAAyC,EAAA4f,GACAxvB,KAAAmN,MAAA,iBAAAA,EAAAyd,EAAAlnB,QAAA2wB,SAAAlnB,KACAnN,KAAA4P,OACA5P,KAAA8uB,KAAA,KACA9uB,KAAAi1B,WAAA,EAEAj1B,KAAAwvB,KADAA,EACA,mBAAAA,IAAA5E,EAAAlnB,QAAA+rB,aAAAD,GAGA,KAuCA,OAxBAkH,EAAAzH,WAAA,SAAAvU,GACA,GAAAvZ,MAAA4tB,QAAArU,EAAAqa,MAAA,CACA,IAAAvnB,EAAAkN,EAAAqa,KACA4B,OAAA,EAAA13B,OAAA,EAGA,GAFAA,EAAA03B,EAAA,IAAAD,EAAAlpB,EAAA,GAAAL,MAAAK,EAAA,GAAAoC,KAAA8K,EAAA8U,MAEAhiB,EAAAvM,OAAA,OAAAuM,EAAAvM,QAAAuM,EAAA,GAAAL,QAAAK,EAAA,GAAAL,MACA,QAAA5Q,EAAA,EAAAA,EAAAiR,EAAAvM,SAAA1E,EACAo6B,EAAA7H,KAAA,IAAA4H,EAAAlpB,EAAAjR,GAAA4Q,MAAAK,EAAAjR,GAAAqT,MACA+mB,IAAA7H,KAIA,OADA7vB,EAAAg2B,YAAAva,EAAAua,UACAh2B,EAIA,IAAA23B,EAAA,IAAAF,EAAAhc,EAAAkc,MAAA,GAIA,OAFAlc,EAAAmc,MAAAnc,EAAAkc,QACAA,EAAA9H,KAAA,IAAA4H,EAAAhc,EAAAmc,IAAA,IACAD,GAGAF,EAjDA,GAmDAr6B,EAAAqH,QAAAgzB,6CC/DA,aACAz5B,OAAAC,eAAAb,EAAA,cAAA8Q,OAAA,IACA,IAAA2pB,EAAAhO,EAAA,sBACAzsB,EAAAw3B,cAAAiD,EAAApzB,QACA,IAAAqzB,EAAAjO,EAAA,iBACAzsB,EAAAg2B,SAAA0E,EAAArzB,QACA,IAAAszB,EAAAlO,EAAA,gBACAzsB,EAAA4uB,QAAA+L,EAAAtzB,QACA,IAAAuzB,EAAAnO,EAAA,qBACAzsB,EAAAo5B,aAAAwB,EAAAvzB,QACA,IAAAwzB,EAAApO,EAAA,yBACAzsB,EAAAgtB,iBAAA6N,EAAAxzB,yICXA,aAGA,GAFAzG,OAAAC,eAAAb,EAAA,cAAA8Q,OAAA,IAEA,oBAAArH,KACA,0DAGAA,KAAAuQ,YACAvQ,KAAAuQ,cAGA,IAAAA,EAAAyS,EAAA,eAEA,QAAAvqB,KAAA8X,EACAvQ,KAAAuQ,UAAA9X,GAAA8X,EAAA9X,+BTdA,KAAAjC,EAAAD,QAAAmsB,kCUUA,IAAY2O,mDAAZ,SAAYA,GAAMA,IAAA,eAAKA,IAAA,iBAAvB,CAAYA,EAAA96B,EAAA86B,OAAA96B,EAAA86B,UAEZ,IAAMC,EAAoB,IAI1B/6B,EAAAqH,QAAA,SAA6CC,GACzC,IAAI0zB,GAA0DvjB,QAAQX,UAGtE,SAAAmkB,EAAoBC,GAChB,IAAMhuB,EAAMguB,IAASJ,EAAKrjB,KAAQ,IAAM,IAElC0jB,GAAcD,IAASJ,EAAKrjB,KAAOujB,EAAWvjB,KAAOujB,EAAWlkB,OAAOlS,OACvEw2B,EAAeL,EAAoBI,EACzC,OAAQjuB,EAAGA,EAAGkuB,EAAcjuB,EAHlB,IAGsBiuB,GA0BpC,IAVA,IAAMplB,EAAY,IAAIvM,KAAKqP,UAGrBuiB,EAAkB,IAAI5xB,KAAKqP,UAOxB5Y,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAMo7B,EAAO,IAAI7xB,KAAK6tB,OAAO7tB,KAAKP,OAAOqyB,UAAUD,KAAKzN,SAExDyN,EAAKloB,OAAO7C,IAAI,IAChB+qB,EAAKxzB,MAAMyI,IAAI,IAAQ+qB,EAAK1zB,OACtB,IAAA0I,EAAA2qB,EAAAH,EAAArjB,MAACvK,EAAAoD,EAAApD,EAAEC,EAAAmD,EAAAnD,EACTmuB,EAAKpuB,EAAIA,EACTouB,EAAKnuB,EAAIA,EACTmuB,EAAK5vB,OAASxL,EAEd86B,EAAWvjB,KAAK3T,KAAKw3B,GACrBtlB,EAAU4f,SAAS0F,GAEvBh0B,EAAIE,MAAMouB,SAAS5f,GACnB1O,EAAIE,MAAMouB,SAASyF,GAEnB,IAAMlmB,EAAWqmB,YAAY,WACzB,IAAMC,EAxCV,WACI,IAAMH,EAAMN,EAAWvjB,KAAKge,MAC5B,GAAK6F,EAAL,CAGA,IAAMI,EAAYV,EAAWlkB,MAAMhT,KAAKw3B,GAExCA,EAAK5vB,OAAS,IAAIgwB,EAEZ,IAAAprB,EAAA2qB,EAAAH,EAAAhkB,OACN,OAAQwkB,KAAIA,EAAEpuB,EADPoD,EAAApD,EACSC,EADPmD,EAAAnD,IA+BawuB,GACtB,GAAIF,EAAe,CACR,IAAAG,EAAAH,EAAAH,KAAKO,EAAAJ,EAAAvuB,EAAE4uB,EAAAL,EAAAtuB,EACd6I,EAAU+lB,eAAc,EACxB/lB,EAAUC,YAAY2lB,GACtB5lB,EAAU+lB,eAAc,EACxBV,EAAgBzF,SAASgG,GACzB,IAAMI,EAAY5pB,KAAKH,MACjBgqB,EAASL,EAAK3rB,SAAS/C,EACvBgvB,EAASN,EAAK3rB,SAAS9C,EACvBgvB,EAAU,WACZ,IAAM5oB,EAAOnB,KAAKH,MACZwV,EAAYla,KAAKoH,IAAI,GAAGpB,EAAKyoB,GAAW,KAC1CvU,GAAW,IACXngB,EAAI4E,OAAOyF,OAAOwqB,GAClBd,EAAgBplB,YAAY2lB,GAC5B5lB,EAAU+lB,eAAc,EACxB/lB,EAAU4f,SAASgG,GACnB5lB,EAAU+lB,eAAc,GAE5B,IA1EQ3P,EA0EFgQ,GA1EEhQ,EA0E4B3E,GA1EP,GAAK,EAAE2E,EAAEA,GAAQ,EAAE,EAAEA,GAAGA,EAAV,EA2E3CwP,EAAK3rB,SAASM,IAAI0rB,GAAQJ,EAAEI,GAAQG,EAAcF,GAAQJ,EAAEI,GAAQE,IAGxE90B,EAAI4E,OAAOC,IAAIgwB,KAGrB,KACF,OAAO,WACHE,cAAclnB,GACd7N,EAAIE,MAAMyO,YAAYD,GACtBA,EAAUwB,0CC3FjB,SAAA8kB,EAA0BC,EAAiCC,EAA+BC,GAKvF,IAJA,IAAMC,EAAyB,IAAKjzB,KAAKkzB,KAAK,QAAQF,GAAY50B,OAC5D+0B,EAAeL,EAAW5T,IAAI,SAAAkU,GAAc,MAAsB,iBAAfA,EAA0B,IAAIpzB,KAAKkzB,KAAKE,EAAWJ,IARrF5O,EAQoH2O,EAAcK,GAR5Gh1B,EAQyH60B,GAPhKI,EAAS,IAAIrzB,KAAK6tB,OAAOzJ,IACxB/lB,MAAMyI,IAAI1I,EAAOi1B,EAAOj1B,QACxBi1B,GAHX,IAA2BjP,EAAsBhmB,EACvCi1B,IAQFC,EAAQ,EACNC,EAAyB,IAAIvzB,KAAKqP,UAC1B+S,EAAA,EAAAoR,EAAAL,EAAA/Q,EAAAoR,EAAAr4B,OAAAinB,IAAc,CAAvB,IAAIhb,EAACosB,EAAApR,GACNhb,EAAEZ,SAAS/C,EAAI6vB,EACfA,GAASlsB,EAAEjJ,MACXo1B,EAAuBpH,SAAS/kB,GAGpC,OAAOmsB,EAGX,SAAAE,EAAiDC,GAC7C,IAAIC,EAAS3zB,KAAKP,OAAOqyB,UAAU4B,GAAsBlQ,SACrDuP,EAA+B,KAKnC,OAJIY,IACAZ,EAAgB57B,OAAO0lB,KAAS8W,GAAQzU,IAAI,SAAC0U,GAAgB,OAAAD,EAAOC,KACpEhhB,QAAQC,IAAIkgB,KAGZc,aAAc,SAA6Bf,EAAiCE,GACxE,OAAOH,EAAiBC,EAAYC,EAAeC,IAEvDc,UAAW38B,OAAO0lB,KAAK8W,GAAQx4B,yDAXvC5E,EAAAqH,QAAA61B,EAiBA,IAAMM,EAAgB,wVAAwVC,MAAM,KAMhX,SAAAC,EAA4BH,GACxB,IAAM34B,EAAS2I,KAAKC,KAAmB,GAAdD,KAAKunB,UAG9B,OAFWhwB,MAAMa,MAAM,KAAMb,MAAiBF,IAAS+jB,IAAI,WAAM,OAAApb,KAAKunB,SAAW,GAL1E0I,EAAcjwB,KAAKmC,MAAMnC,KAAKunB,SAAS0I,EAAc54B,SAKwC,IAAK2I,KAAKmC,MAAMnC,KAAKunB,SAAWyI,KAKxIv9B,EAAAuH,yBAAA,SAAyCC,GAC/B,IAAA8I,EAAA4sB,EAAA,WAACI,EAAAhtB,EAAAgtB,aAAaC,EAAAjtB,EAAAitB,UACpBlhB,QAAQC,IAAI9U,GACZ,IAAM2N,EAAWqmB,YAAY,WACzB,IAAMpP,EAAIkR,EAAaI,EAAmBH,IAAa1zB,KAAM,QAASD,SAAwB,GAAd2D,KAAKunB,SAAY,IACjG1I,EAAEnc,SAASM,IAAIhD,KAAKunB,UAAU,IAAI1I,EAAExkB,OAAO2F,KAAKunB,UAAU,IAAI1I,EAAEvkB,SAChEL,EAAMouB,SAASxJ,GACfpZ,WAAW,WAAM,OAAAxL,EAAMyO,YAAYmW,IAAkB,IAAd7e,KAAKunB,WAC7C,KAEH,OAAO,WACHuH,cAAclnB,oFCvD1BnV,EAAAqH,QAAA,SAA6CC,GACzC,IAAIq2B,EAAqB,IAAIl0B,KAAKuQ,UAAUC,kBAC5CoC,QAAQC,IAAI7S,KAAKP,OAAOqyB,UAAUqC,MAAM3Q,UACxC,IAAMA,EAAWrsB,OAAO0lB,KAAK7c,KAAKP,OAAOqyB,UAAUqC,MAAM3Q,UACpDtE,IAAI,SAAA0U,GAAe,OAAA5zB,KAAKP,OAAOqyB,UAAUqC,MAAM3Q,SAASoQ,KAG7DhhB,QAAQC,IAAI2Q,GACZ,IAAI4Q,EAAmB,IAAIp0B,KAAKuQ,UAAU4U,QAAQ+O,IAAqB1Q,SAAQA,EAAEC,UAAW,GAAI/D,MAAK,KACjGpH,OACIwY,MAAO,GACPC,IAAK,IAET1yB,OACIyyB,MAAO,IACPC,IAAK,GAgBTxH,UACIre,IAAK,GACL5B,IAAK,KAETwY,UAAW,GACXgF,iBAAkB,EAClBD,aAAc,GACdyD,KACI7mB,EAAG,IACHC,EAAG,KAEPmkB,WAAW,EACXb,UAAW,OACXE,WACIzjB,GAAI,IACJC,EAAG,EACHqD,EAAG,IACH4F,EAAE,GAENpR,MAAM,EACNivB,YAAY,EACZgB,oBAAqBxrB,KAAKuQ,UAAUgT,mBAQxC,OANA6Q,EAAiB5I,oBAAsBxrB,KAAKuQ,UAAUgT,iBACtD6Q,EAAiB74B,MAAK,EAEtB24B,EAAmB1tB,SAASM,IAAI,GAEhCjJ,EAAIE,MAAMouB,SAAS+H,GACZ,WACHr2B,EAAIE,MAAMyO,YAAY0nB,GACtBE,EAAiB74B,MAAK,EACtB24B,EAAmBnmB","file":"index.bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 041dae8d84c8b9d830fa","export * from \"./pixi-app-wrapper\";\nexport * from \"./event/pixi-app-wrapper-event\";\nexport * from \"./util/dom\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/index.ts","const _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport const has = function(obj: any, prop: any) {\n    return _hasOwnProperty.call(obj, prop);\n};\n\n/**\n* Function signature for comparing\n* <0 means a is smaller\n* = 0 means they are equal\n* >0 means a is larger\n*/\nexport interface ICompareFunction<T> {\n    (a: T, b: T): number;\n}\n\n/**\n* Function signature for checking equality\n*/\nexport interface IEqualsFunction<T> {\n    (a: T, b: T): boolean;\n}\n\n/**\n* Function signature for Iterations. Return false to break from loop\n*/\nexport interface ILoopFunction<T> {\n    (a: T): boolean | void;\n}\n\n/**\n * Default function to compare element order.\n * @function\n */\nexport function defaultCompare<T>(a: T, b: T): number {\n    if (a < b) {\n        return -1;\n    } else if (a === b) {\n        return 0;\n    } else {\n        return 1;\n    }\n}\n\n/**\n * Default function to test equality.\n * @function\n */\nexport function defaultEquals<T>(a: T, b: T): boolean {\n    return a === b;\n}\n\n/**\n * Default function to convert an object to a string.\n * @function\n */\nexport function defaultToString(item: any): string {\n    if (item === null) {\n        return 'COLLECTION_NULL';\n    } else if (isUndefined(item)) {\n        return 'COLLECTION_UNDEFINED';\n    } else if (isString(item)) {\n        return '$s' + item;\n    } else {\n        return '$o' + item.toString();\n    }\n}\n\n/**\n* Joins all the properies of the object using the provided join string\n*/\nexport function makeString<T>(item: T, join: string = ','): string {\n    if (item === null) {\n        return 'COLLECTION_NULL';\n    } else if (isUndefined(item)) {\n        return 'COLLECTION_UNDEFINED';\n    } else if (isString(item)) {\n        return item.toString();\n    } else {\n        let toret = '{';\n        let first = true;\n        for (const prop in item) {\n            if (has(item, prop)) {\n                if (first) {\n                    first = false;\n                } else {\n                    toret = toret + join;\n                }\n                toret = toret + prop + ':' + (<any>item)[prop];\n            }\n        }\n        return toret + '}';\n    }\n}\n\n/**\n * Checks if the given argument is a function.\n * @function\n */\nexport function isFunction(func: any): boolean {\n    return (typeof func) === 'function';\n}\n\n/**\n * Checks if the given argument is undefined.\n * @function\n */\nexport function isUndefined(obj: any): obj is undefined {\n    return (typeof obj) === 'undefined';\n}\n\n/**\n * Checks if the given argument is a string.\n * @function\n */\nexport function isString(obj: any): boolean {\n    return Object.prototype.toString.call(obj) === '[object String]';\n}\n\n/**\n * Reverses a compare function.\n * @function\n */\nexport function reverseCompareFunction<T>(compareFunction?: ICompareFunction<T>): ICompareFunction<T> {\n    if (isUndefined(compareFunction) || !isFunction(compareFunction)) {\n        return function(a, b) {\n            if (a < b) {\n                return 1;\n            } else if (a === b) {\n                return 0;\n            } else {\n                return -1;\n            }\n        };\n    } else {\n        return function(d: T, v: T) {\n            return compareFunction(d, v) * -1;\n        };\n    }\n}\n\n/**\n * Returns an equal function given a compare function.\n * @function\n */\nexport function compareToEquals<T>(compareFunction: ICompareFunction<T>): IEqualsFunction<T> {\n    return function(a: T, b: T) {\n        return compareFunction(a, b) === 0;\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/basarat/typescript-collections/util.ts","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scripts/vendor/primus/eventemitter3/index.js\n// module id = 2\n// module chunks = 0","/**\n * App bundle entry point.\n */\nimport \"styles/style.css\"; // Required to bundle styles!\n\n/*\n * YOUR CODE HERE\n */\nimport {SoftgamesApp} from \"app/softgamesApp\";\nconst sampleApp =    SoftgamesApp();\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/index.ts","\nimport {\n    Dom,\n    PixiAppWrapper as Wrapper,\n    pixiAppWrapperEvent as WrapperEvent,\n    PixiAppWrapperOptions as WrapperOpts,\n} from \"pixi-app-wrapper\";\nimport {Asset, AssetPriority, LoadAsset, PixiAssetsLoader, SoundAsset} from \"pixi-assets-loader\";\nimport \"pixi-particles\";\n\nimport initializeCardStacks from \"./cardStacks\";\n\nimport initializeTextWithImages, { drawRandomTextWithImages } from \"./textWithImages\";\n\nimport createParticleSystem from \"./fireParticles\";\n/**\n * Showcase for PixiAppWrapper class.\n */\n\n\n\n\n export function SoftgamesApp() {\n \n    let totalAssets: number;\n    let loadingProgress: number;\n    let assetsCount: { [key: number]: { total: number, progress: number } } = {};\n\n    const width=500;\n    const height=500;\n\n    const canvas = Dom.getElementOrCreateNew<HTMLCanvasElement>(\"app-canvas\", \"canvas\", document.getElementById(\"app-root\"));\n\n    let cardStackButton = <HTMLInputElement> document.getElementById(\"cardsToggle\");\n    let particleButton = <HTMLInputElement>document.getElementById(\"fireToggle\");\n    let imageTextButton = <HTMLInputElement>document.getElementById(\"imageTextToggle\");\n    let fullScreenButton  = <HTMLInputElement>document.getElementById(\"fullscreenToggle\");\n    let particleDestroy:Function=null;\n    let cardStackDestroy:Function=null;\n    let imageTextDestroy:Function   =null;\n\n    cardStackButton.onclick = () => {\n        if (cardStackButton.checked)\n            cardStackDestroy = initializeCardStacks(app);\n        else\n            cardStackDestroy && cardStackDestroy();\n    };\n\n    particleButton.onclick = () => {\n        if (particleButton.checked)\n            particleDestroy = createParticleSystem(app);\n        else\n            particleDestroy && particleDestroy();\n    }\n\n    imageTextButton.onclick = () => {\n        if (imageTextButton.checked)\n            imageTextDestroy = drawRandomTextWithImages(app.stage);\n        else\n            imageTextDestroy && imageTextDestroy();\n    }\n\n    fullScreenButton.onclick = () => {\n        if (fullScreenButton.checked)\n            document.getElementById(\"app-root\").requestFullscreen();\n        else\n            document.exitFullscreen();\n    }\n    // if no view is specified, it appends canvas to body\n    const appOptions: WrapperOpts = {\n        width,\n        height,\n        scale: \"keep-aspect-ratio\",\n        align: \"middle\",\n        resolution: window.devicePixelRatio,\n        roundPixels: true,\n        transparent: false,\n        backgroundColor: 0x000000,\n        view: canvas,\n        showFPS: true,\n        changeOrientation: true,\n    };\n\n    const app: Wrapper = new Wrapper(appOptions);\n \n    // createViews(); \n    const assets = [\n        {id: \"card\", url: \"assets/gfx/cardbacksmall.png\", priority: AssetPriority.HIGH, type: \"texture\"},\n        {id: \"candies\", url: \"assets/gfx/candies.json\", priority: AssetPriority.LOWEST, type: \"atlas\"},\n        {id: \"flame\", url: \"assets/gfx/flame.json\", priority: AssetPriority.LOWEST, type: \"atlas\"},\n\n      ];\n\n      \n\n    const loader: PixiAssetsLoader = new PixiAssetsLoader();\n    loader.on(PixiAssetsLoader.PRIORITY_GROUP_LOADED, onAssetsLoaded);\n\n\n\n\n\n    loader.addAssets(assets).load();\n    \n\n\n\n    const textStyle = new PIXI.TextStyle({\n        fontFamily: \"Verdana\",\n        fontSize: 24,\n        fill: \"#FFFFFF\",\n        wordWrap: true,\n        wordWrapWidth: 440,\n    });\n\n    function createViewsByPriority(priority: number): void {\n        switch (priority) {\n\n            case AssetPriority.HIGH:\n                cardStackDestroy = initializeCardStacks(app);\n                cardStackButton.disabled = false;\n                break;\n\n            case AssetPriority.LOWEST:\n\n                particleButton.disabled = false;\n                imageTextButton.disabled = false;\n                break;\n            default:\n                break;\n        }\n    }\n\n    function onAssetsLoaded(args: { priority: number, assets: LoadAsset[] }): void {\n        createViewsByPriority(args.priority);\n\n    }\n\n\n    \n\n\n\n\n    \n    \n    \n\n\n\n    }\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/app/softgamesApp.ts","import EventEmitter = require(\"eventemitter3\");\nimport \"fpsmeter\";\nimport {Dom, pixiAppWrapperEvent} from \"pixi-app-wrapper\";\nimport \"pixi-layers\";\nimport * as PIXI from \"pixi.js\";\nimport * as screenfull from \"screenfull\";\nimport {MediaInfoData, MediaInfoViewer} from \"./info/media-info-viewer\";\nimport {AlignBottomCenter} from \"./stage/align/align-bottom-center\";\nimport {AlignBottomLeft} from \"./stage/align/align-bottom-left\";\nimport {AlignBottomRight} from \"./stage/align/align-bottom-right\";\nimport {AlignMiddle} from \"./stage/align/align-middle\";\nimport {AlignMiddleLeft} from \"./stage/align/align-middle-left\";\nimport {AlignMiddleRight} from \"./stage/align/align-middle-right\";\nimport {AlignStrategy} from \"./stage/align/align-strategy\";\nimport {AlignTopCenter} from \"./stage/align/align-top-center\";\nimport {AlignTopLeft} from \"./stage/align/align-top-left\";\nimport {AlignTopRight} from \"./stage/align/align-top-right\";\nimport {ScaleFullSize} from \"./stage/scale/scale-full-size\";\nimport {ScaleKeepAspectRatio} from \"./stage/scale/scale-keep-aspect-ratio\";\nimport {ScaleNone} from \"./stage/scale/scale-none\";\nimport {ScaleStrategy} from \"./stage/scale/scale-strategy\";\n\nexport interface PixiAppWrapperOptions extends PIXI.ApplicationOptions {\n    width: number;\n    height: number;\n    align?: \"top-left\" | \"top-center\" | \"top-right\" | \"middle-left\" | \"middle\" | \"middle-right\" | \"bottom-left\" | \"bottom-center\" | \"bottom-right\";\n    scale?: \"none\" | \"keep-aspect-ratio\" | \"full-size\";\n    changeOrientation?: boolean;\n    showFPS?: boolean;\n    showMediaInfo?: boolean;\n}\n\n/**\n * Wrapper for PIXI.Application class enabling features like scaling, aligning, fps-meter and a media info viewer.\n */\nexport class PixiAppWrapper extends EventEmitter {\n\n    /**\n     * Requests fullscreen for given element or documentElement if not provided.\n     * @param {Element} element - Element requesting to go full screen.\n     */\n    public static toggleFulscreen(element?: Element | null): void {\n        const target: Element = element ? element : document.documentElement;\n\n        if (screenfull.enabled) {\n            screenfull.toggle(target);\n        }\n    }\n\n    private readonly defaultScaleMethod = \"none\";\n    private readonly defaultAlignMethod = \"top-left\";\n\n    private readonly defaultOptions: PixiAppWrapperOptions = {\n        width: 800,\n        height: 600,\n        scale: this.defaultScaleMethod,\n        align: this.defaultAlignMethod,\n        showFPS: false,\n        showMediaInfo: false,\n    };\n\n    private readonly fpsmeterOptions: FPSMeterOptions = {\n        theme: \"transparent\",\n        heat: 1,\n        graph: 1,\n        history: 20,\n        zIndex: 100,\n    };\n\n    private app: PIXI.Application;\n    private appOptions: PixiAppWrapperOptions;\n\n    private width: number;\n    private height: number;\n    private landscape: boolean;\n\n    private alignStrategy: AlignStrategy;\n    private scaleStrategy: ScaleStrategy;\n\n    private fpsmeter: FPSMeter;\n    private mediaInfoViewer: MediaInfoViewer;\n\n    private resizing: boolean;\n\n    constructor(options?: PixiAppWrapperOptions) {\n        super();\n\n        if (!options) {\n            options = this.defaultOptions;\n        }\n\n        this.resizing = false;\n\n        this.mediaInfoViewer = new MediaInfoViewer();\n\n        this.app = new PIXI.Application(options);\n        this.app.stage = new PIXI.display.Stage();\n\n        this.configure(options);\n        this.ticker.add(this.resize.bind(this));\n\n        this.appOptions = options;\n    }\n\n    get initialHeight(): number {\n        return this.height;\n    }\n\n    get initialWidth(): number {\n        return this.width;\n    }\n\n    get stage(): PIXI.Container {\n        return this.app.stage;\n    }\n\n    get ticker(): PIXI.ticker.Ticker {\n        return this.app.ticker;\n    }\n\n    get renderer(): PIXI.WebGLRenderer | PIXI.CanvasRenderer {\n        return this.app.renderer;\n    }\n\n    get screen(): PIXI.Rectangle {\n        return this.app.screen;\n    }\n\n    get view(): HTMLCanvasElement {\n        return this.app.view;\n    }\n\n    /**\n     * Returns media info from the application.\n     * @returns {MediaInfoData} Media info\n     */\n    public getMediaInfo(): MediaInfoData {\n        return {\n            display: {\n                screen: {\n                    width: this.screen.width,\n                    height: this.screen.height,\n                },\n                view: {\n                    width: this.view.clientWidth,\n                    height: this.view.clientHeight,\n                },\n                stage: {\n                    x: this.stage.x,\n                    y: this.stage.y,\n                    initialWidth: this.initialWidth,\n                    initialHeight: this.initialHeight,\n                    currentWidth: Math.ceil(this.initialWidth * this.stage.scale.x),\n                    currentHeight: Math.ceil(this.initialHeight * this.stage.scale.y),\n                    scaleX: this.stage.scale.x.toFixed(2),\n                    scaleY: this.stage.scale.y.toFixed(2),\n                    scaling: this.appOptions.scale ? this.appOptions.scale.valueOf() : this.defaultScaleMethod,\n                    alignment: this.appOptions.align ? this.appOptions.align.valueOf() : this.defaultAlignMethod,\n                    orientation: this.landscape ? \"landscape\" : \"portrait\",\n                },\n            },\n        };\n    }\n\n    private configure(options: PixiAppWrapperOptions): void {\n        this.width = options.width;\n        this.height = options.height;\n        this.landscape = (this.width >= this.height);\n\n        switch (options.align) {\n            case \"top-center\":\n                this.alignStrategy = new AlignTopCenter();\n                break;\n\n            case \"top-right\":\n                this.alignStrategy = new AlignTopRight();\n                break;\n\n            case \"middle-left\":\n                this.alignStrategy = new AlignMiddleLeft();\n                break;\n\n            case \"middle\":\n                this.alignStrategy = new AlignMiddle();\n                break;\n\n            case \"middle-right\":\n                this.alignStrategy = new AlignMiddleRight();\n                break;\n\n            case \"bottom-left\":\n                this.alignStrategy = new AlignBottomLeft();\n                break;\n\n            case \"bottom-center\":\n                this.alignStrategy = new AlignBottomCenter();\n                break;\n\n            case \"bottom-right\":\n                this.alignStrategy = new AlignBottomRight();\n                break;\n\n            default:\n                this.alignStrategy = new AlignTopLeft();\n                break;\n        }\n\n        switch (options.scale) {\n            case \"keep-aspect-ratio\":\n                this.scaleStrategy = new ScaleKeepAspectRatio();\n                break;\n\n            case \"full-size\":\n                this.scaleStrategy = new ScaleFullSize();\n                break;\n\n            default:\n                this.scaleStrategy = new ScaleNone();\n                break;\n        }\n\n        if (options.showFPS) {\n            this.createFPSmeter();\n        }\n\n        if (!options.showMediaInfo) {\n            this.mediaInfoViewer.hide();\n        }\n\n        if (!options.view) {\n            document.body.appendChild(this.app.view); // If no canvas specified, add it to html body\n        }\n    }\n\n    private createFPSmeter(): void {\n        this.fpsmeter = new FPSMeter(Dom.getElementOrBody(\"fps-meter\"), this.fpsmeterOptions);\n        this.ticker.add(this.fpsmeter.tick);\n        this.fpsmeter.show();\n    }\n\n    private resize(): void {\n        const multiplier = this.renderer.options.resolution || 1;\n        const width = Math.floor(this.view.clientWidth * multiplier);\n        const height = Math.floor(this.view.clientHeight * multiplier);\n\n        if (!this.resizing && (this.view.width !== width || this.view.height !== height)) {\n            this.resizing = true;\n\n            // dispatch resize start event\n            this.emit(pixiAppWrapperEvent.RESIZE_START);\n\n            // resize\n            this.renderer.resize(this.view.clientWidth, this.view.clientHeight);\n\n            // check orientation\n            const orientationChanged = this.orientate();\n\n            // scale\n            this.scale();\n\n            // align\n            this.align();\n\n            // update media info\n            this.mediaInfoViewer.update(this.getMediaInfo());\n\n            this.resizing = false;\n\n            // dispatch resize end event\n            this.emit(pixiAppWrapperEvent.RESIZE_END, {\n                stage: {\n                    position: {\n                        x: this.stage.position.x,\n                        y: this.stage.position.y,\n                    },\n                    scale: {\n                        x: this.stage.scale.x,\n                        y: this.stage.scale.y,\n                    },\n                    size: {\n                        width: this.initialWidth * this.stage.scale.x,\n                        height: this.initialHeight * this.stage.scale.y,\n                    },\n                    orientation: {\n                        landscape: this.landscape,\n                        changed: orientationChanged,\n                    },\n                },\n                view: {\n                    width: this.view.width,\n                    height: this.view.height,\n                },\n            });\n        }\n    }\n\n    private orientate(): boolean {\n        let changed = false;\n\n        if (this.appOptions.changeOrientation) {\n            if (this.landscape && this.view.clientHeight > this.view.clientWidth) {\n                // change to portrait mode\n                changed = true;\n                this.landscape = false;\n                this.swapSize();\n\n            } else if (!this.landscape && this.view.clientWidth > this.view.clientHeight) {\n                changed = true;\n                this.landscape = true;\n                this.swapSize();\n            }\n        }\n\n        return changed;\n    }\n\n    private swapSize(): void {\n        const tempW = this.width;\n        this.width = this.height;\n        this.height = tempW;\n    }\n\n    private scale(): void {\n        const {scaleX, scaleY} = this.scaleStrategy.scale(this.initialWidth, this.initialHeight, this.view.clientWidth, this.view.clientHeight);\n        this.stage.scale.set(scaleX, scaleY);\n    }\n\n    private align(): void {\n        const {x, y} = this.alignStrategy.align(this.initialWidth * this.stage.scale.x, this.initialHeight * this.stage.scale.y, this.view.clientWidth, this.view.clientHeight);\n        this.stage.position.set(x, y);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/pixi-app-wrapper.ts","/*!\n * FPSMeter 0.3.1 - 9th May 2013\n * https://github.com/Darsain/fpsmeter\n *\n * Licensed under the MIT license.\n * http://opensource.org/licenses/MIT\n */\n;(function (w, undefined) {\n\t'use strict';\n\n\t/**\n\t * Create a new element.\n\t *\n\t * @param  {String} name Element type name.\n\t *\n\t * @return {Element}\n\t */\n\tfunction newEl(name) {\n\t\treturn document.createElement(name);\n\t}\n\n\t/**\n\t * Apply theme CSS properties to element.\n\t *\n\t * @param  {Element} element DOM element.\n\t * @param  {Object}  theme   Theme object.\n\t *\n\t * @return {Element}\n\t */\n\tfunction applyTheme(element, theme) {\n\t\tfor (var name in theme) {\n\t\t\ttry {\n\t\t\t\telement.style[name] = theme[name];\n\t\t\t} catch (e) {}\n\t\t}\n\t\treturn element;\n\t}\n\n\t/**\n\t * Return type of the value.\n\t *\n\t * @param  {Mixed} value\n\t *\n\t * @return {String}\n\t */\n\tfunction type(value) {\n\t\tif (value == null) {\n\t\t\treturn String(value);\n\t\t}\n\n\t\tif (typeof value === 'object' || typeof value === 'function') {\n\t\t\treturn Object.prototype.toString.call(value).match(/\\s([a-z]+)/i)[1].toLowerCase() || 'object';\n\t\t}\n\n\t\treturn typeof value;\n\t}\n\n\t/**\n\t * Check whether the value is in an array.\n\t *\n\t * @param  {Mixed} value\n\t * @param  {Array} array\n\t *\n\t * @return {Integer} Array index or -1 when not found.\n\t */\n\tfunction inArray(value, array) {\n\t\tif (type(array) !== 'array') {\n\t\t\treturn -1;\n\t\t}\n\t\tif (array.indexOf) {\n\t\t\treturn array.indexOf(value);\n\t\t}\n\t\tfor (var i = 0, l = array.length; i < l; i++) {\n\t\t\tif (array[i] === value) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Poor man's deep object extend.\n\t *\n\t * Example:\n\t *   extend({}, defaults, options);\n\t *\n\t * @return {Void}\n\t */\n\tfunction extend() {\n\t\tvar args = arguments;\n\t\tfor (var key in args[1]) {\n\t\t\tif (args[1].hasOwnProperty(key)) {\n\t\t\t\tswitch (type(args[1][key])) {\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\targs[0][key] = extend({}, args[0][key], args[1][key]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'array':\n\t\t\t\t\t\targs[0][key] = args[1][key].slice(0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\targs[0][key] = args[1][key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn args.length > 2 ?\n\t\t\textend.apply(null, [args[0]].concat(Array.prototype.slice.call(args, 2))) :\n\t\t\targs[0];\n\t}\n\n\t/**\n\t * Convert HSL color to HEX string.\n\t *\n\t * @param  {Array} hsl Array with [hue, saturation, lightness].\n\t *\n\t * @return {Array} Array with [red, green, blue].\n\t */\n\tfunction hslToHex(h, s, l) {\n\t\tvar r, g, b;\n\t\tvar v, min, sv, sextant, fract, vsf;\n\n\t\tif (l <= 0.5) {\n\t\t\tv = l * (1 + s);\n\t\t} else {\n\t\t\tv = l + s - l * s;\n\t\t}\n\n\t\tif (v === 0) {\n\t\t\treturn '#000';\n\t\t} else {\n\t\t\tmin = 2 * l - v;\n\t\t\tsv = (v - min) / v;\n\t\t\th = 6 * h;\n\t\t\tsextant = Math.floor(h);\n\t\t\tfract = h - sextant;\n\t\t\tvsf = v * sv * fract;\n\t\t\tif (sextant === 0 || sextant === 6) {\n\t\t\t\tr = v;\n\t\t\t\tg = min + vsf;\n\t\t\t\tb = min;\n\t\t\t} else if (sextant === 1) {\n\t\t\t\tr = v - vsf;\n\t\t\t\tg = v;\n\t\t\t\tb = min;\n\t\t\t} else if (sextant === 2) {\n\t\t\t\tr = min;\n\t\t\t\tg = v;\n\t\t\t\tb = min + vsf;\n\t\t\t} else if (sextant === 3) {\n\t\t\t\tr = min;\n\t\t\t\tg = v - vsf;\n\t\t\t\tb = v;\n\t\t\t} else if (sextant === 4) {\n\t\t\t\tr = min + vsf;\n\t\t\t\tg = min;\n\t\t\t\tb = v;\n\t\t\t} else {\n\t\t\t\tr = v;\n\t\t\t\tg = min;\n\t\t\t\tb = v - vsf;\n\t\t\t}\n\t\t\treturn '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n\t\t}\n\t}\n\n\t/**\n\t * Helper function for hslToHex.\n\t */\n\tfunction componentToHex(c) {\n\t\tc = Math.round(c * 255).toString(16);\n\t\treturn c.length === 1 ? '0' + c : c;\n\t}\n\n\t/**\n\t * Manage element event listeners.\n\t *\n\t * @param  {Node}     element\n\t * @param  {Event}    eventName\n\t * @param  {Function} handler\n\t * @param  {Bool}     remove\n\t *\n\t * @return {Void}\n\t */\n\tfunction listener(element, eventName, handler, remove) {\n\t\tif (element.addEventListener) {\n\t\t\telement[remove ? 'removeEventListener' : 'addEventListener'](eventName, handler, false);\n\t\t} else if (element.attachEvent) {\n\t\t\telement[remove ? 'detachEvent' : 'attachEvent']('on' + eventName, handler);\n\t\t}\n\t}\n\n\t// Preferred timing funtion\n\tvar getTime;\n\t(function () {\n\t\tvar perf = w.performance;\n\t\tif (perf && (perf.now || perf.webkitNow)) {\n\t\t\tvar perfNow = perf.now ? 'now' : 'webkitNow';\n\t\t\tgetTime = perf[perfNow].bind(perf);\n\t\t} else {\n\t\t\tgetTime = function () {\n\t\t\t\treturn +new Date();\n\t\t\t};\n\t\t}\n\t}());\n\n\t// Local WindowAnimationTiming interface polyfill\n\tvar cAF = w.cancelAnimationFrame || w.cancelRequestAnimationFrame;\n\tvar rAF = w.requestAnimationFrame;\n\t(function () {\n\t\tvar vendors = ['moz', 'webkit', 'o'];\n\t\tvar lastTime = 0;\n\n\t\t// For a more accurate WindowAnimationTiming interface implementation, ditch the native\n\t\t// requestAnimationFrame when cancelAnimationFrame is not present (older versions of Firefox)\n\t\tfor (var i = 0, l = vendors.length; i < l && !cAF; ++i) {\n\t\t\tcAF = w[vendors[i]+'CancelAnimationFrame'] || w[vendors[i]+'CancelRequestAnimationFrame'];\n\t\t\trAF = cAF && w[vendors[i]+'RequestAnimationFrame'];\n\t\t}\n\n\t\tif (!cAF) {\n\t\t\trAF = function (callback) {\n\t\t\t\tvar currTime = getTime();\n\t\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\t\tlastTime = currTime + timeToCall;\n\t\t\t\treturn w.setTimeout(function () { callback(currTime + timeToCall); }, timeToCall);\n\t\t\t};\n\n\t\t\tcAF = function (id) {\n\t\t\t\tclearTimeout(id);\n\t\t\t};\n\t\t}\n\t}());\n\n\t// Property name for assigning element text content\n\tvar textProp = type(document.createElement('div').textContent) === 'string' ? 'textContent' : 'innerText';\n\n\t/**\n\t * FPSMeter class.\n\t *\n\t * @param {Element} anchor  Element to append the meter to. Default is document.body.\n\t * @param {Object}  options Object with options.\n\t */\n\tfunction FPSMeter(anchor, options) {\n\t\t// Optional arguments\n\t\tif (type(anchor) === 'object' && anchor.nodeType === undefined) {\n\t\t\toptions = anchor;\n\t\t\tanchor = document.body;\n\t\t}\n\t\tif (!anchor) {\n\t\t\tanchor = document.body;\n\t\t}\n\n\t\t// Private properties\n\t\tvar self = this;\n\t\tvar o = extend({}, FPSMeter.defaults, options || {});\n\n\t\tvar el = {};\n\t\tvar cols = [];\n\t\tvar theme, heatmaps;\n\t\tvar heatDepth = 100;\n\t\tvar heating = [];\n\n\t\tvar thisFrameTime = 0;\n\t\tvar frameTime = o.threshold;\n\t\tvar frameStart = 0;\n\t\tvar lastLoop = getTime() - frameTime;\n\t\tvar time;\n\n\t\tvar fpsHistory = [];\n\t\tvar durationHistory = [];\n\n\t\tvar frameID, renderID;\n\t\tvar showFps = o.show === 'fps';\n\t\tvar graphHeight, count, i, j;\n\n\t\t// Exposed properties\n\t\tself.options = o;\n\t\tself.fps = 0;\n\t\tself.duration = 0;\n\t\tself.isPaused = 0;\n\n\t\t/**\n\t\t * Tick start for measuring the actual rendering duration.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.tickStart = function () {\n\t\t\tframeStart = getTime();\n\t\t};\n\n\t\t/**\n\t\t * FPS tick.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.tick = function () {\n\t\t\ttime = getTime();\n\t\t\tthisFrameTime = time - lastLoop;\n\t\t\tframeTime += (thisFrameTime - frameTime) / o.smoothing;\n\t\t\tself.fps = 1000 / frameTime;\n\t\t\tself.duration = frameStart < lastLoop ? frameTime : time - frameStart;\n\t\t\tlastLoop = time;\n\t\t};\n\n\t\t/**\n\t\t * Pause display rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.pause = function () {\n\t\t\tif (frameID) {\n\t\t\t\tself.isPaused = 1;\n\t\t\t\tclearTimeout(frameID);\n\t\t\t\tcAF(frameID);\n\t\t\t\tcAF(renderID);\n\t\t\t\tframeID = renderID = 0;\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Resume display rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.resume = function () {\n\t\t\tif (!frameID) {\n\t\t\t\tself.isPaused = 0;\n\t\t\t\trequestRender();\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Update options.\n\t\t *\n\t\t * @param {String} name  Option name.\n\t\t * @param {Mixed}  value New value.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.set = function (name, value) {\n\t\t\to[name] = value;\n\t\t\tshowFps = o.show === 'fps';\n\n\t\t\t// Rebuild or reposition elements when specific option has been updated\n\t\t\tif (inArray(name, rebuilders) !== -1) {\n\t\t\t\tcreateMeter();\n\t\t\t}\n\t\t\tif (inArray(name, repositioners) !== -1) {\n\t\t\t\tpositionMeter();\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Change meter into rendering duration mode.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.showDuration = function () {\n\t\t\tself.set('show', 'ms');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Change meter into FPS mode.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.showFps = function () {\n\t\t\tself.set('show', 'fps');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Toggles between show: 'fps' and show: 'duration'.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.toggle = function () {\n\t\t\tself.set('show', showFps ? 'ms' : 'fps');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Hide the FPSMeter. Also pauses the rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.hide = function () {\n\t\t\tself.pause();\n\t\t\tel.container.style.display = 'none';\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Show the FPSMeter. Also resumes the rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.show = function () {\n\t\t\tself.resume();\n\t\t\tel.container.style.display = 'block';\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Check the current FPS and save it in history.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction historyTick() {\n\t\t\tfor (i = o.history; i--;) {\n\t\t\t\tfpsHistory[i] = i === 0 ? self.fps : fpsHistory[i-1];\n\t\t\t\tdurationHistory[i] = i === 0 ? self.duration : durationHistory[i-1];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Returns heat hex color based on values passed.\n\t\t *\n\t\t * @param  {Integer} heatmap\n\t\t * @param  {Integer} value\n\t\t * @param  {Integer} min\n\t\t * @param  {Integer} max\n\t\t *\n\t\t * @return {Integer}\n\t\t */\n\t\tfunction getHeat(heatmap, value, min, max) {\n\t\t\treturn heatmaps[0|heatmap][Math.round(Math.min((value - min) / (max - min) * heatDepth, heatDepth))];\n\t\t}\n\n\t\t/**\n\t\t * Update counter number and legend.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction updateCounter() {\n\t\t\t// Update legend only when changed\n\t\t\tif (el.legend.fps !== showFps) {\n\t\t\t\tel.legend.fps = showFps;\n\t\t\t\tel.legend[textProp] = showFps ? 'FPS' : 'ms';\n\t\t\t}\n\t\t\t// Update counter with a nicely formated & readable number\n\t\t\tcount = showFps ? self.fps : self.duration;\n\t\t\tel.count[textProp] = count > 999 ? '999+' : count.toFixed(count > 99 ? 0 : o.decimals);\n\t\t}\n\n\t\t/**\n\t\t * Render current FPS state.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction render() {\n\t\t\ttime = getTime();\n\t\t\t// If renderer stopped reporting, do a simulated drop to 0 fps\n\t\t\tif (lastLoop < time - o.threshold) {\n\t\t\t\tself.fps -= self.fps / Math.max(1, o.smoothing * 60 / o.interval);\n\t\t\t\tself.duration = 1000 / self.fps;\n\t\t\t}\n\n\t\t\thistoryTick();\n\t\t\tupdateCounter();\n\n\t\t\t// Apply heat to elements\n\t\t\tif (o.heat) {\n\t\t\t\tif (heating.length) {\n\t\t\t\t\tfor (i = heating.length; i--;) {\n\t\t\t\t\t\theating[i].el.style[theme[heating[i].name].heatOn] = showFps ?\n\t\t\t\t\t\t\tgetHeat(theme[heating[i].name].heatmap, self.fps, 0, o.maxFps) :\n\t\t\t\t\t\t\tgetHeat(theme[heating[i].name].heatmap, self.duration, o.threshold, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.graph && theme.column.heatOn) {\n\t\t\t\t\tfor (i = cols.length; i--;) {\n\t\t\t\t\t\tcols[i].style[theme.column.heatOn] = showFps ?\n\t\t\t\t\t\t\tgetHeat(theme.column.heatmap, fpsHistory[i], 0, o.maxFps) :\n\t\t\t\t\t\t\tgetHeat(theme.column.heatmap, durationHistory[i], o.threshold, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update graph columns height\n\t\t\tif (el.graph) {\n\t\t\t\tfor (j = 0; j < o.history; j++) {\n\t\t\t\t\tcols[j].style.height = (showFps ?\n\t\t\t\t\t\t(fpsHistory[j] ? Math.round(graphHeight / o.maxFps * Math.min(fpsHistory[j], o.maxFps)) : 0) :\n\t\t\t\t\t\t(durationHistory[j] ? Math.round(graphHeight / o.threshold * Math.min(durationHistory[j], o.threshold)) : 0)\n\t\t\t\t\t) + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Request rendering loop.\n\t\t *\n\t\t * @return {Int} Animation frame index.\n\t\t */\n\t\tfunction requestRender() {\n\t\t\tif (o.interval < 20) {\n\t\t\t\tframeID = rAF(requestRender);\n\t\t\t\trender();\n\t\t\t} else {\n\t\t\t\tframeID = setTimeout(requestRender, o.interval);\n\t\t\t\trenderID = rAF(render);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Meter events handler.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction eventHandler(event) {\n\t\t\tevent = event || window.event;\n\t\t\tif (event.preventDefault) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t} else {\n\t\t\t\tevent.returnValue = false;\n\t\t\t\tevent.cancelBubble = true;\n\t\t\t}\n\t\t\tself.toggle();\n\t\t}\n\n\t\t/**\n\t\t * Destroys the current FPSMeter instance.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.destroy = function () {\n\t\t\t// Stop rendering\n\t\t\tself.pause();\n\t\t\t// Remove elements\n\t\t\tremoveMeter();\n\t\t\t// Stop listening\n\t\t\tself.tick = self.tickStart = function () {};\n\t\t};\n\n\t\t/**\n\t\t * Remove meter element.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction removeMeter() {\n\t\t\t// Unbind listeners\n\t\t\tif (o.toggleOn) {\n\t\t\t\tlistener(el.container, o.toggleOn, eventHandler, 1);\n\t\t\t}\n\t\t\t// Detach element\n\t\t\tanchor.removeChild(el.container);\n\t\t}\n\n\t\t/**\n\t\t * Sets the theme, and generates heatmaps when needed.\n\t\t */\n\t\tfunction setTheme() {\n\t\t\ttheme = FPSMeter.theme[o.theme];\n\n\t\t\t// Generate heatmaps\n\t\t\theatmaps = theme.compiledHeatmaps || [];\n\t\t\tif (!heatmaps.length && theme.heatmaps.length) {\n\t\t\t\tfor (j = 0; j < theme.heatmaps.length; j++) {\n\t\t\t\t\theatmaps[j] = [];\n\t\t\t\t\tfor (i = 0; i <= heatDepth; i++) {\n\t\t\t\t\t\theatmaps[j][i] = hslToHex(0.33 / heatDepth * i, theme.heatmaps[j].saturation, theme.heatmaps[j].lightness);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttheme.compiledHeatmaps = heatmaps;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Creates and attaches the meter element.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction createMeter() {\n\t\t\t// Remove old meter if present\n\t\t\tif (el.container) {\n\t\t\t\tremoveMeter();\n\t\t\t}\n\n\t\t\t// Set theme\n\t\t\tsetTheme();\n\n\t\t\t// Create elements\n\t\t\tel.container = applyTheme(newEl('div'), theme.container);\n\t\t\tel.count = el.container.appendChild(applyTheme(newEl('div'), theme.count));\n\t\t\tel.legend = el.container.appendChild(applyTheme(newEl('div'), theme.legend));\n\t\t\tel.graph = o.graph ? el.container.appendChild(applyTheme(newEl('div'), theme.graph)) : 0;\n\n\t\t\t// Add elements to heating array\n\t\t\theating.length = 0;\n\t\t\tfor (var key in el) {\n\t\t\t\tif (el[key] && theme[key].heatOn) {\n\t\t\t\t\theating.push({\n\t\t\t\t\t\tname: key,\n\t\t\t\t\t\tel: el[key]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Graph\n\t\t\tcols.length = 0;\n\t\t\tif (el.graph) {\n\t\t\t\t// Create graph\n\t\t\t\tel.graph.style.width = (o.history * theme.column.width + (o.history - 1) * theme.column.spacing) + 'px';\n\n\t\t\t\t// Add columns\n\t\t\t\tfor (i = 0; i < o.history; i++) {\n\t\t\t\t\tcols[i] = el.graph.appendChild(applyTheme(newEl('div'), theme.column));\n\t\t\t\t\tcols[i].style.position = 'absolute';\n\t\t\t\t\tcols[i].style.bottom = 0;\n\t\t\t\t\tcols[i].style.right = (i * theme.column.width + i * theme.column.spacing) + 'px';\n\t\t\t\t\tcols[i].style.width = theme.column.width + 'px';\n\t\t\t\t\tcols[i].style.height = '0px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set the initial state\n\t\t\tpositionMeter();\n\t\t\tupdateCounter();\n\n\t\t\t// Append container to anchor\n\t\t\tanchor.appendChild(el.container);\n\n\t\t\t// Retrieve graph height after it was appended to DOM\n\t\t\tif (el.graph) {\n\t\t\t\tgraphHeight = el.graph.clientHeight;\n\t\t\t}\n\n\t\t\t// Add event listeners\n\t\t\tif (o.toggleOn) {\n\t\t\t\tif (o.toggleOn === 'click') {\n\t\t\t\t\tel.container.style.cursor = 'pointer';\n\t\t\t\t}\n\t\t\t\tlistener(el.container, o.toggleOn, eventHandler);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Positions the meter based on options.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction positionMeter() {\n\t\t\tapplyTheme(el.container, o);\n\t\t}\n\n\t\t/**\n\t\t * Construct.\n\t\t */\n\t\t(function () {\n\t\t\t// Create meter element\n\t\t\tcreateMeter();\n\t\t\t// Start rendering\n\t\t\trequestRender();\n\t\t}());\n\t}\n\n\t// Expose the extend function\n\tFPSMeter.extend = extend;\n\n\t// Expose the FPSMeter class\n\twindow.FPSMeter = FPSMeter;\n\n\t// Default options\n\tFPSMeter.defaults = {\n\t\tinterval:  100,     // Update interval in milliseconds.\n\t\tsmoothing: 10,      // Spike smoothing strength. 1 means no smoothing.\n\t\tshow:      'fps',   // Whether to show 'fps', or 'ms' = frame duration in milliseconds.\n\t\ttoggleOn:  'click', // Toggle between show 'fps' and 'ms' on this event.\n\t\tdecimals:  1,       // Number of decimals in FPS number. 1 = 59.9, 2 = 59.94, ...\n\t\tmaxFps:    60,      // Max expected FPS value.\n\t\tthreshold: 100,     // Minimal tick reporting interval in milliseconds.\n\n\t\t// Meter position\n\t\tposition: 'absolute', // Meter position.\n\t\tzIndex:   10,         // Meter Z index.\n\t\tleft:     '5px',      // Meter left offset.\n\t\ttop:      '5px',      // Meter top offset.\n\t\tright:    'auto',     // Meter right offset.\n\t\tbottom:   'auto',     // Meter bottom offset.\n\t\tmargin:   '0 0 0 0',  // Meter margin. Helps with centering the counter when left: 50%;\n\n\t\t// Theme\n\t\ttheme: 'dark', // Meter theme. Build in: 'dark', 'light', 'transparent', 'colorful'.\n\t\theat:  0,      // Allow themes to use coloring by FPS heat. 0 FPS = red, maxFps = green.\n\n\t\t// Graph\n\t\tgraph:   0, // Whether to show history graph.\n\t\thistory: 20 // How many history states to show in a graph.\n\t};\n\n\t// Option names that trigger FPSMeter rebuild or reposition when modified\n\tvar rebuilders = [\n\t\t'toggleOn',\n\t\t'theme',\n\t\t'heat',\n\t\t'graph',\n\t\t'history'\n\t];\n\tvar repositioners = [\n\t\t'position',\n\t\t'zIndex',\n\t\t'left',\n\t\t'top',\n\t\t'right',\n\t\t'bottom',\n\t\t'margin'\n\t];\n}(window));\n;(function (w, FPSMeter, undefined) {\n\t'use strict';\n\n\t// Themes object\n\tFPSMeter.theme = {};\n\n\t// Base theme with layout, no colors\n\tvar base = FPSMeter.theme.base = {\n\t\theatmaps: [],\n\t\tcontainer: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tpadding: '5px',\n\t\t\tminWidth: '95px',\n\t\t\theight: '30px',\n\t\t\tlineHeight: '30px',\n\t\t\ttextAlign: 'right',\n\t\t\ttextShadow: 'none'\n\t\t},\n\t\tcount: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tpadding: '5px 10px',\n\t\t\theight: '30px',\n\t\t\tfontSize: '24px',\n\t\t\tfontFamily: 'Consolas, Andale Mono, monospace',\n\t\t\tzIndex: 2\n\t\t},\n\t\tlegend: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tpadding: '5px 10px',\n\t\t\theight: '30px',\n\t\t\tfontSize: '12px',\n\t\t\tlineHeight: '32px',\n\t\t\tfontFamily: 'sans-serif',\n\t\t\ttextAlign: 'left',\n\t\t\tzIndex: 2\n\t\t},\n\t\tgraph: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'relative',\n\t\t\tboxSizing: 'padding-box',\n\t\t\tMozBoxSizing: 'padding-box',\n\t\t\theight: '100%',\n\t\t\tzIndex: 1\n\t\t},\n\t\tcolumn: {\n\t\t\t// Settings\n\t\t\twidth: 4,\n\t\t\tspacing: 1,\n\t\t\theatOn: null,\n\t\t\theatmap: null\n\t\t}\n\t};\n\n\t// Dark theme\n\tFPSMeter.theme.dark = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.8,\n\t\t\tlightness: 0.8\n\t\t}],\n\t\tcontainer: {\n\t\t\tbackground: '#222',\n\t\t\tcolor: '#fff',\n\t\t\tborder: '1px solid #1a1a1a',\n\t\t\ttextShadow: '1px 1px 0 #222'\n\t\t},\n\t\tcount: {\n\t\t\theatOn: 'color'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#3f3f3f'\n\t\t}\n\t});\n\n\t// Light theme\n\tFPSMeter.theme.light = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.5,\n\t\t\tlightness: 0.5\n\t\t}],\n\t\tcontainer: {\n\t\t\tcolor: '#666',\n\t\t\tbackground: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(255,255,255,.5), -1px -1px 0 rgba(255,255,255,.5)',\n\t\t\tboxShadow: '0 0 0 1px rgba(0,0,0,.1)'\n\t\t},\n\t\tcount: {\n\t\t\theatOn: 'color'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#eaeaea'\n\t\t}\n\t});\n\n\t// Colorful theme\n\tFPSMeter.theme.colorful = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.5,\n\t\t\tlightness: 0.6\n\t\t}],\n\t\tcontainer: {\n\t\t\theatOn: 'backgroundColor',\n\t\t\tbackground: '#888',\n\t\t\tcolor: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(0,0,0,.2)',\n\t\t\tboxShadow: '0 0 0 1px rgba(0,0,0,.1)'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#777',\n\t\t\tbackgroundColor: 'rgba(0,0,0,.2)'\n\t\t}\n\t});\n\n\t// Transparent theme\n\tFPSMeter.theme.transparent = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.8,\n\t\t\tlightness: 0.5\n\t\t}],\n\t\tcontainer: {\n\t\t\tpadding: 0,\n\t\t\tcolor: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(0,0,0,.5)'\n\t\t},\n\t\tcount: {\n\t\t\tpadding: '0 5px',\n\t\t\theight: '40px',\n\t\t\tlineHeight: '40px'\n\t\t},\n\t\tlegend: {\n\t\t\tpadding: '0 5px',\n\t\t\theight: '40px',\n\t\t\tlineHeight: '42px'\n\t\t},\n\t\tgraph: {\n\t\t\theight: '40px'\n\t\t},\n\t\tcolumn: {\n\t\t\twidth: 5,\n\t\t\tbackground: '#999',\n\t\t\theatOn: 'backgroundColor',\n\t\t\topacity: 0.5\n\t\t}\n\t});\n}(window, FPSMeter));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scripts/vendor/darsain/fpsmeter/fpsmeter.js\n// module id = 7\n// module chunks = 0","declare namespace PIXI {\r\n    export interface Container {\r\n        containerRenderWebGL(renderer: WebGLRenderer): void;\r\n        containerRenderCanvas(renderer: CanvasRenderer): void;\r\n    }\r\n}\r\n\r\nnamespace pixi_display {\r\n    (Object as any).assign(PIXI.Container.prototype, {\r\n        renderWebGL: function (renderer: PIXI.WebGLRenderer): void {\r\n            if (this._activeParentLayer && this._activeParentLayer != renderer._activeLayer) {\r\n                return;\r\n            }\r\n\r\n            if (!this.visible) {\r\n                this.displayOrder = 0;\r\n                return;\r\n            }\r\n\r\n            this.displayOrder = renderer.incDisplayOrder();\r\n\r\n            // if the object is not visible or the alpha is 0 then no need to render this element\r\n            if (this.worldAlpha <= 0 || !this.renderable) {\r\n                return;\r\n            }\r\n\r\n            this.containerRenderWebGL(renderer);\r\n        },\r\n        renderCanvas: function (renderer: PIXI.CanvasRenderer): void {\r\n            if (this._activeParentLayer && this._activeParentLayer != renderer._activeLayer) {\r\n                return;\r\n            }\r\n\r\n            if (!this.visible) {\r\n                this.displayOrder = 0;\r\n                return;\r\n            }\r\n\r\n            this.displayOrder = renderer.incDisplayOrder();\r\n\r\n            // if the object is not visible or the alpha is 0 then no need to render this element\r\n            if (this.worldAlpha <= 0 || !this.renderable) {\r\n                return;\r\n            }\r\n\r\n            this.containerRenderCanvas(renderer);\r\n        },\r\n        containerRenderWebGL: PIXI.Container.prototype.renderWebGL,\r\n        containerRenderCanvas: PIXI.Container.prototype.renderCanvas\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ../src/ContainerMixin.ts","declare namespace PIXI {\r\n    export interface DisplayObject {\r\n        parentGroup: pixi_display.Group,\r\n\r\n        /**\r\n         * Object will be rendered\r\n         *\r\n         * please specify it to handle zOrder and zIndex\r\n         *\r\n         * its always null for layers\r\n         *\r\n         */\r\n        parentLayer: pixi_display.Layer,\r\n\r\n\r\n        _activeParentLayer: pixi_display.Layer,\r\n        /**\r\n         * zOrder is floating point number, distance between screen and object\r\n         * Objects with largest zOrder will appear first in their Layer, if zOrder sorting is enabled\r\n         */\r\n        zOrder: number,\r\n\r\n        /**\r\n         * zIndex is integer number, the number of layer\r\n         * Objects with least zOrder appear first in their Layer, if zIndex sorting is enabled\r\n         */\r\n        zIndex: number,\r\n\r\n        /**\r\n         * updateOrder is calculated by DisplayList, it is required for sorting inside DisplayGroup\r\n         */\r\n        updateOrder: number,\r\n\r\n        /**\r\n         * displayOrder is calculated by render, it is required for interaction\r\n         */\r\n        displayOrder: number,\r\n\r\n        /**\r\n         * Stage will look inside for elements that can be re-arranged, if this flag is true\r\n         * Make it false for ParticleContainer\r\n         */\r\n        layerableChildren: boolean\r\n    }\r\n}\r\n\r\n(Object as any).assign(PIXI.DisplayObject.prototype, {\r\n    parentLayer: null,\r\n    _activeParentLayer: null,\r\n    parentGroup: null,\r\n    zOrder: 0,\r\n    zIndex: 0,\r\n    updateOrder: 0,\r\n    displayOrder: 0,\r\n    layerableChildren: true\r\n});\r\n\r\nif (PIXI.particles && PIXI.particles.ParticleContainer) {\r\n    PIXI.particles.ParticleContainer.prototype.layerableChildren = false;\r\n}\r\nelse if ((PIXI as any).ParticleContainer) {\r\n    (PIXI as any).ParticleContainer.prototype.layerableChildren = false;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/DisplayObjectMixin.ts","//TODO: add maxDisplayOrder for displayObjects and use it to speed up the interaction here\r\n\r\n/**\r\n * @mixin\r\n */\r\n\r\nnamespace pixi_display {\r\n    import InteractionManager = PIXI.interaction.InteractionManager;\r\n    import DisplayObject = PIXI.DisplayObject;\r\n    import Point = PIXI.Point;\r\n    import Graphics = PIXI.Graphics;\r\n    import Container = PIXI.Container;\r\n    import InteractionEvent = PIXI.interaction.InteractionEvent;\r\n    (Object as any).assign(InteractionManager.prototype, {\r\n        _queue: [[] as Array<DisplayObject>, [] as Array<DisplayObject>],\r\n        /**\r\n         * This is private recursive copy of processInteractive\r\n         */\r\n        _displayProcessInteractive: function (point: Point, displayObject: DisplayObject, hitTestOrder: number, interactive: boolean, outOfMask: boolean): number {\r\n            if (!displayObject || !displayObject.visible) {\r\n                return 0;\r\n            }\r\n\r\n            // Took a little while to rework this function correctly! But now it is done and nice and optimised. ^_^\r\n            //\r\n            // This function will now loop through all objects and then only hit test the objects it HAS to, not all of them. MUCH faster..\r\n            // An object will be hit test if the following is true:\r\n            //\r\n            // 1: It is interactive.\r\n            // 2: It belongs to a parent that is interactive AND one of the parents children have not already been hit.\r\n            //\r\n            // As another little optimisation once an interactive object has been hit we can carry on through the scenegraph, but we know that there will be no more hits! So we can avoid extra hit tests\r\n            // A final optimisation is that an object is not hit test directly if a child has already been hit.\r\n\r\n            let hit = 0,\r\n                interactiveParent = interactive = displayObject.interactive || interactive;\r\n\r\n            // if the displayobject has a hitArea, then it does not need to hitTest children.\r\n            if (displayObject.hitArea) {\r\n                interactiveParent = false;\r\n            }\r\n\r\n            if (displayObject._activeParentLayer) {\r\n                outOfMask = false;\r\n            }\r\n\r\n            // it has a mask! Then lets hit test that before continuing..\r\n            const mask: Graphics = (displayObject as any)._mask;\r\n            if (hitTestOrder < Infinity && mask) {\r\n                if (!mask.containsPoint(point)) {\r\n                    outOfMask = true;\r\n                }\r\n            }\r\n\r\n            // it has a filterArea! Same as mask but easier, its a rectangle\r\n            if (hitTestOrder < Infinity && displayObject.filterArea) {\r\n                if (!displayObject.filterArea.contains(point.x, point.y)) {\r\n                    outOfMask = true;\r\n                }\r\n            }\r\n\r\n            // ** FREE TIP **! If an object is not interactive or has no buttons in it\r\n            // (such as a game scene!) set interactiveChildren to false for that displayObject.\r\n            // This will allow pixi to completely ignore and bypass checking the displayObjects children.\r\n            const children: Array<DisplayObject> = (displayObject as Container).children;\r\n            if (displayObject.interactiveChildren && children) {\r\n                for (let i = children.length - 1; i >= 0; i--) {\r\n                    const child = children[i];\r\n\r\n                    // time to get recursive.. if this function will return if something is hit..\r\n                    const hitChild = this._displayProcessInteractive(point, child, hitTestOrder, interactiveParent, outOfMask);\r\n                    if (hitChild) {\r\n                        // its a good idea to check if a child has lost its parent.\r\n                        // this means it has been removed whilst looping so its best\r\n                        if (!child.parent) {\r\n                            continue;\r\n                        }\r\n\r\n                        hit = hitChild;\r\n                        hitTestOrder = hitChild;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // no point running this if the item is not interactive or does not have an interactive parent.\r\n            if (interactive) {\r\n                if (!outOfMask) {\r\n                    // if we are hit testing (as in we have no hit any objects yet)\r\n                    // We also don't need to worry about hit testing if once of the displayObjects children has already been hit!\r\n                    if (hitTestOrder < displayObject.displayOrder) {\r\n                        //pixi v4\r\n                        if (displayObject.hitArea) {\r\n                            displayObject.worldTransform.applyInverse(point, this._tempPoint);\r\n                            if (displayObject.hitArea.contains(this._tempPoint.x, this._tempPoint.y)) {\r\n                                hit = displayObject.displayOrder;\r\n                            }\r\n                        }\r\n                        else if ((displayObject as any).containsPoint) {\r\n                            if ((displayObject as any).containsPoint(point)) {\r\n                                hit = displayObject.displayOrder;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (displayObject.interactive) {\r\n                        this._queueAdd(displayObject, hit === Infinity ? 0 : hit);\r\n                    }\r\n                } else {\r\n                    if (displayObject.interactive) {\r\n                        this._queueAdd(displayObject, 0);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return hit;\r\n\r\n        },\r\n\r\n        processInteractive: function (strangeStuff: InteractionEvent | Point, displayObject: DisplayObject, func: Function, hitTest: boolean, interactive: boolean) {\r\n            //older versions\r\n            let interactionEvent: InteractionEvent = null;\r\n            let point: Point = null;\r\n            if ((strangeStuff as InteractionEvent).data &&\r\n                (strangeStuff as InteractionEvent).data.global) {\r\n                interactionEvent = strangeStuff as InteractionEvent;\r\n                point = interactionEvent.data.global;\r\n            } else {\r\n                point = strangeStuff as Point;\r\n            }\r\n            this._startInteractionProcess();\r\n            this._displayProcessInteractive(point, displayObject, hitTest ? 0 : Infinity, false);\r\n            this._finishInteractionProcess(interactionEvent, func);\r\n        },\r\n\r\n        _startInteractionProcess: function () {\r\n            //move it to constructor\r\n            this._eventDisplayOrder = 1;\r\n            if (!this._queue) {\r\n                //move it to constructor\r\n                this._queue = [[], []];\r\n            }\r\n            this._queue[0].length = 0;\r\n            this._queue[1].length = 0;\r\n        },\r\n\r\n        _queueAdd: function (displayObject: DisplayObject, order: number) {\r\n            let queue = this._queue;\r\n            if (order < this._eventDisplayOrder) {\r\n                queue[0].push(displayObject);\r\n            } else {\r\n                if (order > this._eventDisplayOrder) {\r\n                    this._eventDisplayOrder = order;\r\n                    let q = queue[1];\r\n                    for (let i = 0; i < q.length; i++) {\r\n                        queue[0].push(q[i]);\r\n                    }\r\n                    queue[1].length = 0;\r\n                }\r\n                queue[1].push(displayObject);\r\n            }\r\n        },\r\n        _finishInteractionProcess: function (event: InteractionEvent, func: Function) {\r\n            let queue = this._queue;\r\n            let q = queue[0];\r\n            let i = 0;\r\n            for (; i < q.length; i++) {\r\n                if (event) {\r\n                    //v4.3\r\n                    if (func) {\r\n                        func(event, q[i], false);\r\n                    }\r\n                } else {\r\n                    //old\r\n                    func(q[i], false);\r\n                }\r\n            }\r\n            q = queue[1];\r\n            for (i = 0; i < q.length; i++) {\r\n                if (event) {\r\n                    //v4.3\r\n                    if (!event.target) {\r\n                        event.target = q[i];\r\n                    }\r\n                    if (func) {\r\n                        func(event, q[i], true);\r\n                    }\r\n                } else {\r\n                    //old\r\n                    func(q[i], true);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/InteractionManagerMixin.ts","namespace pixi_display {\r\n\t(PIXI as any).display = pixi_display;\r\n}\r\n\r\ndeclare module \"pixi-layers\" {\r\n\texport = pixi_display;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/xporter.ts","/**\r\n * A shared component for multiple DisplayObject's allows to specify rendering order for them\r\n *\r\n * @class\r\n * @extends EventEmitter\r\n * @memberof PIXI\r\n * @param zIndex {number} z-index for display group\r\n * @param sorting {boolean | Function} if you need to sort elements inside, please provide function that will set displayObject.zOrder accordingly\r\n */\r\n\r\nnamespace pixi_display {\r\n    import DisplayObject = PIXI.DisplayObject;\r\n    import Container = PIXI.Container;\r\n    import utils = PIXI.utils;\r\n    import WebGLRenderer = PIXI.WebGLRenderer;\r\n    import CanvasRenderer = PIXI.CanvasRenderer;\r\n\r\n    export class Group extends utils.EventEmitter {\r\n        static _layerUpdateId = 0;\r\n\r\n        computedChildren: Array<DisplayObject>;\r\n\r\n        _activeLayer: Layer = null;\r\n\r\n        _activeStage: Stage = null;\r\n\r\n        _activeChildren: Array<DisplayObject> = [];\r\n\r\n        _lastUpdateId = -1;\r\n\r\n        useRenderTexture: boolean = false;\r\n        useDoubleBuffer: boolean = false;\r\n        sortPriority: number = 0;\r\n        clearColor : ArrayLike<number> = new Float32Array([0, 0, 0, 0]);\r\n\r\n        //TODO: handle orphan groups\r\n        //TODO: handle groups that don't want to be drawn in parent\r\n        canDrawWithoutLayer = false;\r\n        canDrawInParentStage = true;\r\n\r\n        /**\r\n         * default zIndex value for layers that are created with this Group\r\n         * @type {number}\r\n         */\r\n        zIndex = 0;\r\n\r\n        enableSort = false;\r\n\r\n        constructor(zIndex: number, sorting: boolean | Function) {\r\n            super();\r\n\r\n            this.zIndex = zIndex;\r\n\r\n            this.enableSort = !!sorting;\r\n\r\n            if (typeof sorting === 'function') {\r\n                this.on('sort', sorting);\r\n            }\r\n        }\r\n\r\n        _tempResult: Array<DisplayObject> = [];\r\n        _tempZero: Array<DisplayObject> = [];\r\n\r\n        useZeroOptimization: boolean = false;\r\n\r\n        doSort(layer: Layer, sorted: Array<DisplayObject>) {\r\n            if ((this.listeners as any)('sort', true)) {\r\n                for (let i = 0; i < sorted.length; i++) {\r\n                    this.emit('sort', sorted[i]);\r\n                }\r\n            }\r\n            if (this.useZeroOptimization) {\r\n                this.doSortWithZeroOptimization(layer, sorted);\r\n            } else {\r\n                sorted.sort(Group.compareZIndex);\r\n            }\r\n        }\r\n\r\n        static compareZIndex(a: DisplayObject, b: DisplayObject) {\r\n            if (a.zIndex !== b.zIndex) {\r\n                return a.zIndex - b.zIndex;\r\n            }\r\n            if (a.zOrder > b.zOrder) {\r\n                return -1;\r\n            }\r\n            if (a.zOrder < b.zOrder) {\r\n                return 1;\r\n            }\r\n            return a.updateOrder - b.updateOrder;\r\n        }\r\n\r\n        doSortWithZeroOptimization(layer: Layer, sorted: Array<DisplayObject>) {\r\n            throw new Error(\"not implemented yet\");\r\n            //default sorting\r\n            // const result = this._tempResult;\r\n            // const zero = this._tempZero;\r\n            // for (let i = 0; i < sorted.length; i++) {\r\n            //     const elem = sorted[i];\r\n            //     if (elem.zIndex == 0 && elem.zOrder == 0) {\r\n            //         zero.push(elem);\r\n            //     } else {\r\n            //         result.push(elem);\r\n            //     }\r\n            // }\r\n            // if (zero.length == 0) {\r\n            //     sorted.sort(Group.compareZOrder);\r\n            // } else {\r\n            //     result.sort(Group.compareZOrder);\r\n            //     let j = 0;\r\n            //     for (let i = 0; i < result.length; i++) {\r\n            //         const elem = result[i];\r\n            //         if (elem.zIndex < 0 && elem.zIndex == 0 && elem.zOrder > 0) {\r\n            //             sorted[j++] = result[i]++;\r\n            //         }\r\n            //     }\r\n            // }\r\n        }\r\n\r\n        /**\r\n         * clears temporary variables\r\n         */\r\n        clear() {\r\n            this._activeLayer = null;\r\n            this._activeStage = null;\r\n            this._activeChildren.length = 0;\r\n        }\r\n\r\n        /**\r\n         * used only by displayList before sorting takes place\r\n         */\r\n        addDisplayObject(stage: Stage, displayObject: DisplayObject) {\r\n            this.check(stage);\r\n            displayObject._activeParentLayer = this._activeLayer;\r\n            if (this._activeLayer) {\r\n                this._activeLayer._activeChildren.push(displayObject);\r\n            } else {\r\n                this._activeChildren.push(displayObject);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * called when corresponding layer is found in current stage\r\n         * @param stage\r\n         * @param layer\r\n         */\r\n        foundLayer(stage: Stage, layer: Layer) {\r\n            this.check(stage);\r\n            if (this._activeLayer != null) {\r\n                Group.conflict();\r\n            }\r\n            this._activeLayer = layer;\r\n            this._activeStage = stage;\r\n        }\r\n\r\n        /**\r\n         * called after stage finished the work\r\n         * @param stage\r\n         */\r\n        foundStage(stage: Stage) {\r\n            if (!this._activeLayer && !this.canDrawInParentStage) {\r\n                this.clear();\r\n            }\r\n        }\r\n\r\n        check(stage: Stage) {\r\n            if (this._lastUpdateId < Group._layerUpdateId) {\r\n                this._lastUpdateId = Group._layerUpdateId;\r\n                this.clear();\r\n                this._activeStage = stage;\r\n            } else if (this.canDrawInParentStage) {\r\n                let current = this._activeStage;\r\n                while (current && current != stage) {\r\n                    current = current._activeParentStage;\r\n                }\r\n                this._activeStage = current;\r\n                if (current == null) {\r\n                    this.clear();\r\n                    return\r\n                }\r\n            }\r\n        }\r\n\r\n        static _lastLayerConflict = 0;\r\n\r\n        static conflict() {\r\n            if (Group._lastLayerConflict + 5000 < Date.now()) {\r\n                Group._lastLayerConflict = Date.now();\r\n                console.log(\"PIXI-display plugin found two layers with the same group in one stage - that's not healthy. Please place a breakpoint here and debug it\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/Group.ts","/**\r\n * Created by ivanp on 29.01.2017.\r\n */\r\n\r\nnamespace pixi_display {\r\n    export class LayerTextureCache {\r\n        constructor(public layer: Layer) {\r\n        }\r\n\r\n        renderTexture: PIXI.RenderTexture = null;\r\n        doubleBuffer: Array<PIXI.RenderTexture> = null;\r\n        currentBufferIndex = 0;\r\n        _tempRenderTarget: PIXI.RenderTarget = null;\r\n\r\n        initRenderTexture(renderer?: PIXI.WebGLRenderer) {\r\n            const width = renderer ? renderer.screen.width : 100;\r\n            const height = renderer ? renderer.screen.height : 100;\r\n            const resolution = renderer ? renderer.resolution : PIXI.settings.RESOLUTION;\r\n\r\n            this.renderTexture = PIXI.RenderTexture.create(width, height, resolution);\r\n\r\n            if (this.layer.group.useDoubleBuffer) {\r\n                this.doubleBuffer = [\r\n                    PIXI.RenderTexture.create(width, height, resolution),\r\n                    PIXI.RenderTexture.create(width, height, resolution)\r\n                ];\r\n            }\r\n        }\r\n\r\n        getRenderTexture() {\r\n            if (!this.renderTexture) {\r\n                this.initRenderTexture();\r\n            }\r\n            return this.renderTexture;\r\n        }\r\n\r\n        pushTexture(renderer: PIXI.WebGLRenderer) {\r\n            const screen = renderer.screen;\r\n\r\n            if (!this.renderTexture) {\r\n                this.initRenderTexture(renderer);\r\n            }\r\n\r\n            const rt = this.renderTexture;\r\n            const group = this.layer.group;\r\n            const db = this.doubleBuffer;\r\n\r\n            if (rt.width !== screen.width ||\r\n                rt.height !== screen.height ||\r\n                rt.baseTexture.resolution !== renderer.resolution) {\r\n                rt.baseTexture.resolution = renderer.resolution;\r\n                rt.resize(screen.width, screen.height);\r\n\r\n                if (db) {\r\n                    db[0].baseTexture.resolution = renderer.resolution;\r\n                    db[0].resize(screen.width, screen.height);\r\n                    db[1].baseTexture.resolution = renderer.resolution;\r\n                    db[1].resize(screen.width, screen.height);\r\n                }\r\n            }\r\n\r\n            this._tempRenderTarget = renderer._activeRenderTarget;\r\n\r\n            renderer.currentRenderer.flush();\r\n\r\n            if (group.useDoubleBuffer) {\r\n                // double-buffer logic\r\n                let buffer = db[this.currentBufferIndex];\r\n                if (!(buffer.baseTexture as any)._glTextures[renderer.CONTEXT_UID]) {\r\n                    renderer.bindRenderTexture(buffer, null);\r\n                    if (group.clearColor) {\r\n                        renderer.clear(group.clearColor as any);\r\n                    }\r\n                }\r\n                renderer.unbindTexture(rt);\r\n                (rt.baseTexture as any)._glTextures = (buffer.baseTexture as any)._glTextures;\r\n                (rt.baseTexture as any)._glRenderTargets = (buffer.baseTexture as any)._glRenderTargets;\r\n\r\n                this.currentBufferIndex = 1 - this.currentBufferIndex;\r\n                buffer = db[this.currentBufferIndex]\r\n                renderer.bindRenderTexture(buffer, null);\r\n            } else {\r\n                // simple logic\r\n                renderer.bindRenderTexture(rt, undefined);\r\n            }\r\n\r\n            if (group.clearColor) {\r\n                renderer.clear(group.clearColor as any);\r\n            }\r\n        }\r\n\r\n        popTexture(renderer: PIXI.WebGLRenderer) {\r\n            renderer.currentRenderer.flush();\r\n            renderer.bindRenderTarget(this._tempRenderTarget);\r\n            this._tempRenderTarget = null;\r\n        }\r\n\r\n        destroy() {\r\n            if (this.renderTexture) {\r\n                this.renderTexture.destroy();\r\n                if (this.doubleBuffer) {\r\n                    this.doubleBuffer[0].destroy(true);\r\n                    this.doubleBuffer[1].destroy(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    export class Layer extends PIXI.Container {\r\n        constructor(group: Group = null) {\r\n            super();\r\n            if (group != null) {\r\n                this.group = group;\r\n                this.zIndex = group.zIndex;\r\n            } else {\r\n                this.group = new Group(0, false);\r\n            }\r\n            this._tempChildren = this.children;\r\n        }\r\n\r\n        isLayer = true;\r\n        group: Group = null;\r\n        _activeChildren: Array<PIXI.DisplayObject> = [];\r\n        _tempChildren: Array<PIXI.DisplayObject> = null;\r\n        _activeStageParent: Stage = null;\r\n        _sortedChildren: Array<PIXI.DisplayObject> = [];\r\n        _tempLayerParent: Layer = null;\r\n\r\n        textureCache: LayerTextureCache;\r\n        insertChildrenBeforeActive = true;\r\n        insertChildrenAfterActive = true;\r\n\r\n        beginWork(stage: Stage) {\r\n            const active = this._activeChildren;\r\n            this._activeStageParent = stage;\r\n            this.group.foundLayer(stage, this);\r\n            const groupChildren = this.group._activeChildren;\r\n            active.length = 0;\r\n            for (let i = 0; i < groupChildren.length; i++) {\r\n                groupChildren[i]._activeParentLayer = this;\r\n                active.push(groupChildren[i]);\r\n            }\r\n            groupChildren.length = 0;\r\n        }\r\n\r\n        endWork() {\r\n            const children = this.children;\r\n            const active = this._activeChildren;\r\n            const sorted = this._sortedChildren;\r\n\r\n            for (let i = 0; i < active.length; i++) {\r\n                this.emit(\"display\", active[i])\r\n            }\r\n\r\n            sorted.length = 0;\r\n            if (this.insertChildrenBeforeActive) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    sorted.push(children[i]);\r\n                }\r\n            }\r\n            for (let i = 0; i < active.length; i++) {\r\n                sorted.push(active[i]);\r\n            }\r\n            if (!this.insertChildrenBeforeActive &&\r\n                this.insertChildrenAfterActive) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    sorted.push(children[i]);\r\n                }\r\n            }\r\n\r\n            if (this.group.enableSort) {\r\n                this.doSort();\r\n            }\r\n        }\r\n\r\n        get useRenderTexture() {\r\n            return this.group.useRenderTexture;\r\n        }\r\n\r\n        set useRenderTexture(value: boolean) {\r\n            this.group.useRenderTexture = value;\r\n        }\r\n\r\n        get useDoubleBuffer() {\r\n            return this.group.useDoubleBuffer;\r\n        }\r\n\r\n        set useDoubleBuffer(value: boolean) {\r\n            this.group.useDoubleBuffer = value;\r\n        }\r\n\r\n        get clearColor() {\r\n            return this.group.clearColor;\r\n        }\r\n\r\n        set clearColor(value: ArrayLike<number>) {\r\n            this.group.clearColor = value;\r\n        }\r\n\r\n        get sortPriority() {\r\n            return this.group.sortPriority;\r\n        }\r\n\r\n        set sortPriority(value: number) {\r\n            this.group.sortPriority = value;\r\n        }\r\n\r\n        getRenderTexture() {\r\n            if (!this.textureCache) {\r\n                this.textureCache = new LayerTextureCache(this);\r\n            }\r\n            return this.textureCache.getRenderTexture();\r\n        }\r\n\r\n        updateDisplayLayers() {\r\n\r\n        }\r\n\r\n        /**\r\n         * you can override this method for this particular layer, if you want\r\n         */\r\n        doSort() {\r\n            this.group.doSort(this, this._sortedChildren);\r\n        }\r\n\r\n        _preRender(renderer: PIXI.WebGLRenderer | PIXI.CanvasRenderer): boolean {\r\n            if (this._activeParentLayer && this._activeParentLayer != renderer._activeLayer) {\r\n                return false;\r\n            }\r\n\r\n            if (!this.visible) {\r\n                this.displayOrder = 0;\r\n                return false;\r\n            }\r\n\r\n            this.displayOrder = renderer.incDisplayOrder();\r\n\r\n            // if the object is not visible or the alpha is 0 then no need to render this element\r\n            if (this.worldAlpha <= 0 || !this.renderable) {\r\n                return false;\r\n            }\r\n\r\n            // we are making a hack with swapping children, it can go wrong easily\r\n            // this is special \"recover\" if that allows stage to recover just after failed frame\r\n\r\n            if (this.children !== this._sortedChildren &&\r\n                this._tempChildren != this.children) {\r\n                this._tempChildren = this.children;\r\n            }\r\n\r\n            //just a temporary feature - getBounds() for filters will work with that\r\n            //TODO: make a better hack for getBounds()\r\n\r\n            this._boundsID++;\r\n            this.children = this._sortedChildren;\r\n\r\n            this._tempLayerParent = renderer._activeLayer;\r\n            renderer._activeLayer = this;\r\n            return true;\r\n        }\r\n\r\n        _postRender(renderer: PIXI.WebGLRenderer | PIXI.CanvasRenderer) {\r\n            this.children = this._tempChildren;\r\n            renderer._activeLayer = this._tempLayerParent;\r\n            this._tempLayerParent = null;\r\n        }\r\n\r\n        renderWebGL(renderer: PIXI.WebGLRenderer) {\r\n            if (!this._preRender(renderer)) {\r\n                return;\r\n            }\r\n\r\n            if (this.group.useRenderTexture) {\r\n                if (!this.textureCache) {\r\n                    this.textureCache = new LayerTextureCache(this);\r\n                }\r\n                this.textureCache.pushTexture(renderer);\r\n            }\r\n\r\n            this.containerRenderWebGL(renderer);\r\n            this._postRender(renderer);\r\n\r\n            if (this.group.useRenderTexture) {\r\n                this.textureCache.popTexture(renderer);\r\n            }\r\n        }\r\n\r\n        renderCanvas(renderer: PIXI.CanvasRenderer) {\r\n            if (this._preRender(renderer)) {\r\n                this.containerRenderCanvas(renderer);\r\n                this._postRender(renderer);\r\n            }\r\n        }\r\n\r\n        destroy(options?: any) {\r\n            if (this.textureCache) {\r\n                this.textureCache.destroy();\r\n                this.textureCache = null;\r\n            }\r\n            super.destroy(options);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/Layer.ts","namespace pixi_display {\r\n    import DisplayObject = PIXI.DisplayObject;\r\n    import Container = PIXI.Container;\r\n\r\n    /**\r\n     * Container for layers\r\n     *\r\n     */\r\n    export class Stage extends Layer {\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        static _updateOrderCounter: number = 0;\r\n\r\n        isStage = true;\r\n\r\n        _tempGroups: Array<DisplayObject> = [];\r\n\r\n        /**\r\n         * Found layers\r\n         */\r\n        _activeLayers: Array<Layer> = [];\r\n\r\n        _activeParentStage: Stage = null;\r\n\r\n        /**\r\n         * clears all display lists that were used in last rendering session\r\n         * please clear it when you stop using this displayList, otherwise you may have problems with GC in some cases\r\n         */\r\n        clear() {\r\n            this._activeLayers.length = 0;\r\n            this._tempGroups.length = 0;\r\n        }\r\n\r\n        destroy(options?: any) {\r\n            this.clear();\r\n            super.destroy(options);\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param displayObject {PIXI.DisplayObject} container that we are adding to Stage\r\n         * @private\r\n         */\r\n        _addRecursive(displayObject: DisplayObject) {\r\n            if (!displayObject.visible) {\r\n                return;\r\n            }\r\n\r\n            if ((displayObject as any).isLayer) {\r\n                const layer = displayObject as any as Layer;\r\n                this._activeLayers.push(layer);\r\n                layer.beginWork(this);\r\n            }\r\n\r\n            if (displayObject != this && (displayObject as any).isStage) {\r\n                const stage = displayObject as Stage;\r\n                stage.updateAsChildStage(this);\r\n                return;\r\n            }\r\n\r\n            let group = displayObject.parentGroup;\r\n            if (group !== null) {\r\n                group.addDisplayObject(this, displayObject);\r\n            }\r\n            const layer = displayObject.parentLayer;\r\n            if (layer !== null) {\r\n                group = layer.group;\r\n                group.addDisplayObject(this, displayObject);\r\n            }\r\n\r\n            displayObject.updateOrder = ++Stage._updateOrderCounter;\r\n            if (displayObject.alpha <= 0 || !displayObject.renderable\r\n                || !displayObject.layerableChildren\r\n                || group && group.sortPriority) {\r\n                return;\r\n            }\r\n\r\n            const children = (displayObject as Container).children;\r\n            if (children && children.length) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    this._addRecursive(children[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        _addRecursiveChildren(displayObject: DisplayObject) {\r\n            if (displayObject.alpha <= 0 || !displayObject.renderable\r\n                || !displayObject.layerableChildren) {\r\n                return;\r\n            }\r\n            const children = (displayObject as Container).children;\r\n            if (children && children.length) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    this._addRecursive(children[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        _updateStageInner() {\r\n            this.clear();\r\n            this._addRecursive(this);\r\n            const layers = this._activeLayers;\r\n\r\n            for (let i = 0; i < layers.length; i++) {\r\n                const layer = layers[i];\r\n                if (layer.group.sortPriority) {\r\n                    layer.endWork();\r\n                    const sorted = layer._sortedChildren;\r\n                    for (let j = 0; j < sorted.length; j++) {\r\n                        this._addRecursiveChildren(sorted[j]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < layers.length; i++) {\r\n                const layer = layers[i];\r\n                if (!layer.group.sortPriority) {\r\n                    layer.endWork();\r\n                }\r\n            }\r\n        }\r\n\r\n        updateAsChildStage(stage: Stage) {\r\n            this._activeParentStage = stage;\r\n            Stage._updateOrderCounter = 0;\r\n            this._updateStageInner();\r\n        }\r\n\r\n        updateStage() {\r\n            this._activeParentStage = null;\r\n            Group._layerUpdateId++;\r\n            this._updateStageInner();\r\n        };\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/Stage.ts","/// <reference types=\"pixi.js\" />\r\n\r\ndeclare namespace PIXI {\r\n    interface WebGLRenderer {\r\n        _activeLayer: pixi_display.Layer\r\n        _renderSessionId: number\r\n        _lastDisplayOrder: number\r\n        incDisplayOrder(): number\r\n    }\r\n    interface CanvasRenderer {\r\n        _activeLayer: pixi_display.Layer\r\n        _renderSessionId: number\r\n        _lastDisplayOrder: number\r\n        incDisplayOrder(): number\r\n    }\r\n}\r\n\r\nnamespace pixi_display {\r\n    (Object as any).assign(PIXI.WebGLRenderer.prototype, {\r\n        _lastDisplayOrder: 0,\r\n        _activeLayer: null,\r\n\r\n        incDisplayOrder() {\r\n            return ++this._lastDisplayOrder;\r\n        },\r\n\r\n        _oldRender: PIXI.WebGLRenderer.prototype.render,\r\n\r\n        render(displayObject: PIXI.DisplayObject, renderTexture?: PIXI.RenderTexture, clear?: boolean, transform?: PIXI.Transform, skipUpdateTransform?: boolean) {\r\n            if (!renderTexture) {\r\n                this._lastDisplayOrder = 0;\r\n            }\r\n            this._activeLayer = null;\r\n            if ((displayObject as Stage).isStage) {\r\n                (displayObject as Stage).updateStage()\r\n            }\r\n            this._oldRender(displayObject, renderTexture, clear, transform, skipUpdateTransform);\r\n        }\r\n    });\r\n\r\n    (Object as any).assign(PIXI.CanvasRenderer.prototype, {\r\n        _lastDisplayOrder: 0,\r\n        _activeLayer: null,\r\n\r\n        incDisplayOrder() {\r\n            return ++this._lastDisplayOrder;\r\n        },\r\n\r\n        _oldRender: PIXI.CanvasRenderer.prototype.render,\r\n\r\n        render(displayObject: PIXI.DisplayObject, renderTexture?: PIXI.RenderTexture, clear?: boolean, transform?: PIXI.Transform, skipUpdateTransform?: boolean) {\r\n            if (!renderTexture) {\r\n                this._lastDisplayOrder = 0;\r\n            }\r\n            this._activeLayer = null;\r\n            if ((displayObject as Stage).isStage) {\r\n                (displayObject as Stage).updateStage()\r\n            }\r\n            this._oldRender(displayObject, renderTexture, clear, transform, skipUpdateTransform);\r\n        }\r\n    });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/renderers.ts","module.exports = PIXI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"PIXI\"\n// module id = 9\n// module chunks = 0","/*!\n* screenfull\n* v3.3.2 - 2017-10-27\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\tvar keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n\n\tvar fn = (function () {\n\t\tvar val;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// New WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// Old WebKit (Safari 5.1)\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar eventNameMap = {\n\t\tchange: fn.fullscreenchange,\n\t\terror: fn.fullscreenerror\n\t};\n\n\tvar screenfull = {\n\t\trequest: function (elem) {\n\t\t\tvar request = fn.requestFullscreen;\n\n\t\t\telem = elem || document.documentElement;\n\n\t\t\t// Work around Safari 5.1 bug: reports support for\n\t\t\t// keyboard in fullscreen even though it doesn't.\n\t\t\t// Browser sniffing, since the alternative with\n\t\t\t// setTimeout is even worse.\n\t\t\tif (/ Version\\/5\\.1(?:\\.\\d+)? Safari\\//.test(navigator.userAgent)) {\n\t\t\t\telem[request]();\n\t\t\t} else {\n\t\t\t\telem[request](keyboardAllowed && Element.ALLOW_KEYBOARD_INPUT);\n\t\t\t}\n\t\t},\n\t\texit: function () {\n\t\t\tdocument[fn.exitFullscreen]();\n\t\t},\n\t\ttoggle: function (elem) {\n\t\t\tif (this.isFullscreen) {\n\t\t\t\tthis.exit();\n\t\t\t} else {\n\t\t\t\tthis.request(elem);\n\t\t\t}\n\t\t},\n\t\tonchange: function (callback) {\n\t\t\tthis.on('change', callback);\n\t\t},\n\t\tonerror: function (callback) {\n\t\t\tthis.on('error', callback);\n\t\t},\n\t\ton: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\toff: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = false;\n\t\t} else {\n\t\t\twindow.screenfull = false;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tenabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scripts/vendor/sindresorhus/screenfull/screenfull.js\n// module id = 10\n// module chunks = 0","import {Dom} from \"pixi-app-wrapper\";\nimport \"../util/math\";\n\nexport interface DisplayData {\n    screen: { width: number, height: number };\n    view: { width: number, height: number };\n    stage: {\n        x: number,\n        y: number,\n        initialWidth: number,\n        initialHeight: number,\n        currentWidth: number,\n        currentHeight: number,\n        scaleX: string,\n        scaleY: string,\n        scaling: string;\n        alignment: string;\n        orientation: \"landscape\" | \"portrait\";\n    };\n}\n\nexport interface MediaInfoData {\n    display: DisplayData;\n}\n\nexport class MediaInfoViewer {\n    private rootContainer: HTMLElement;\n    private textContainer: HTMLDivElement;\n    private data: MediaInfoData;\n\n    constructor() {\n        this.createContainer();\n    }\n\n    public update(newData: MediaInfoData): void {\n        this.data = newData;\n        this.textContainer.innerHTML = this.getText();\n    }\n\n    public show(): void {\n        this.rootContainer.className = this.rootContainer.className.replace(\"hidden\", \"\").trim();\n    }\n\n    public hide(): void {\n        this.show(); // to ensure we do not duplicate the style class\n        this.rootContainer.className += \" hidden\";\n    }\n\n    private createContainer(): void {\n        // root container\n        this.rootContainer = Dom.getElementOrCreateNew(\"media-info\", \"div\");\n        this.rootContainer.className = \"media-info\";\n\n        // close button\n        const closeBtn = document.createElement(\"button\");\n        closeBtn.innerHTML = \"[x]\";\n        closeBtn.className = \"media-info-close-button button\";\n        closeBtn.title = \"close\";\n        closeBtn.onclick = this.hide.bind(this);\n        this.rootContainer.appendChild(closeBtn);\n\n        // info text\n        this.textContainer = document.createElement(\"div\");\n        this.rootContainer.appendChild(this.textContainer);\n    }\n\n    private getText(): string {\n        const stageInitialGCD = Math.gcd(this.data.display.stage.initialWidth, this.data.display.stage.initialHeight);\n\n        return `` +\n            `<div>[devicePixelRatio]</div>` +\n            `<div>${window.devicePixelRatio}</div>` +\n            `<div>[window.inner]</div>` +\n            `<div>${window.innerWidth}x${window.innerHeight}</div>` +\n            `<div>[app.screen]</div>` +\n            `<div>${this.data.display.screen.width}x${this.data.display.screen.height}</div>` +\n            `<div>[app.view]</div>` +\n            `<div>${this.data.display.view.width}x${this.data.display.view.height}</div>` +\n            `<div>[app.stage]</div>` +\n            `<div>position (${this.data.display.stage.x}, ${this.data.display.stage.y})</div>` +\n            `<div>initial ${this.data.display.stage.initialWidth}x${this.data.display.stage.initialHeight} ${this.data.display.stage.initialWidth / stageInitialGCD}:${this.data.display.stage.initialHeight / stageInitialGCD}</div>` +\n            `<div>current ${this.data.display.stage.currentWidth}x${this.data.display.stage.currentHeight}</div>` +\n            `<div>scale (${this.data.display.stage.scaleX}, ${this.data.display.stage.scaleY})</div>` +\n            `<div>scaling ${this.data.display.stage.scaling}</div>` +\n            `<div>alignment ${this.data.display.stage.alignment}</div>` +\n            `<div>orientation ${this.data.display.stage.orientation}</div>`\n            ;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/info/media-info-viewer.ts","if (!Math.gcd) {\n    Math.gcd = (n: number, m: number) => {\n        let r = 0;\n\n        while (n !== 0) {\n            r = m % n;\n            m = n;\n            n = r;\n        }\n\n        return m;\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/util/math.ts","import {AlignStrategy} from \"./align-strategy\";\n\nexport class AlignBottomCenter implements AlignStrategy {\n    public align(width: number, height: number, containerWidth: number, containerHeight: number): { x: number, y: number } {\n        return {\n            x: Math.round(containerWidth / 2 - width / 2),\n            y: Math.round(containerHeight - height),\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-bottom-center.ts","import {AlignStrategy} from \"./align-strategy\";\n\nexport class AlignBottomLeft implements AlignStrategy {\n    public align(width: number, height: number, containerWidth: number, containerHeight: number): { x: number, y: number } {\n        return {\n            x: 0,\n            y: Math.round(containerHeight - height),\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-bottom-left.ts","import {AlignStrategy} from \"./align-strategy\";\n\nexport class AlignBottomRight implements AlignStrategy {\n    public align(width: number, height: number, containerWidth: number, containerHeight: number): { x: number, y: number } {\n        return {\n            x: Math.round(containerWidth - width),\n            y: Math.round(containerHeight - height),\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-bottom-right.ts","import {AlignStrategy} from \"./align-strategy\";\n\nexport class AlignMiddle implements AlignStrategy {\n    public align(width: number, height: number, containerWidth: number, containerHeight: number): { x: number, y: number } {\n        return {\n            x: Math.round(containerWidth / 2 - width / 2),\n            y: Math.round(containerHeight / 2 - height / 2),\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-middle.ts","import {AlignStrategy} from \"./align-strategy\";\n\nexport class AlignMiddleLeft implements AlignStrategy {\n    public align(width: number, height: number, containerWidth: number, containerHeight: number): { x: number, y: number } {\n        return {\n            x: 0,\n            y: Math.round(containerHeight / 2 - height / 2),\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-middle-left.ts","import {AlignStrategy} from \"./align-strategy\";\n\nexport class AlignMiddleRight implements AlignStrategy {\n    public align(width: number, height: number, containerWidth: number, containerHeight: number): { x: number, y: number } {\n        return {\n            x: Math.round(containerWidth - width),\n            y: Math.round(containerHeight / 2 - height / 2),\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-middle-right.ts","import {AlignStrategy} from \"./align-strategy\";\n\nexport class AlignTopCenter implements AlignStrategy {\n    public align(width: number, height: number, containerWidth: number, containerHeight: number): { x: number, y: number } {\n        return {\n            x: Math.round(containerWidth / 2 - width / 2),\n            y: 0,\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-top-center.ts","import {AlignStrategy} from \"./align-strategy\";\n\nexport class AlignTopLeft implements AlignStrategy {\n    public align(width?: number, height?: number, containerWidth?: number, containerHeight?: number): { x: number, y: number } {\n        return {x: 0, y: 0};\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-top-left.ts","import {AlignStrategy} from \"./align-strategy\";\n\nexport class AlignTopRight implements AlignStrategy {\n    public align(width: number, height: number, containerWidth: number, containerHeight: number): { x: number, y: number } {\n        return {\n            x: Math.round(containerWidth - width),\n            y: 0,\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/align/align-top-right.ts","import {ScaleStrategy} from \"./scale-strategy\";\n\nexport class ScaleFullSize implements ScaleStrategy {\n    public scale(initialWidth: number, initialHeight: number, finalWidth: number, finalHeight: number): { scaleX: number; scaleY: number; } {\n        return {\n            scaleX: finalWidth / initialWidth,\n            scaleY: finalHeight / initialHeight,\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/scale/scale-full-size.ts","import {ScaleStrategy} from \"./scale-strategy\";\n\nexport class ScaleKeepAspectRatio implements ScaleStrategy {\n    public scale(initialWidth: number, initialHeight: number, finalWidth: number, finalHeight: number): { scaleX: number; scaleY: number; } {\n        // Determine which screen dimension is most constrained\n        const scale = Math.min(finalWidth / initialWidth, finalHeight / initialHeight);\n\n        return {scaleX: scale, scaleY: scale};\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/scale/scale-keep-aspect-ratio.ts","import {ScaleStrategy} from \"./scale-strategy\";\n\nexport class ScaleNone implements ScaleStrategy {\n    public scale(initialWidth?: number, initialHeight?: number, finalWidth?: number, finalHeight?: number): { scaleX: number; scaleY: number } {\n        return {\n            scaleX: 1,\n            scaleY: 1,\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/stage/scale/scale-none.ts","export const pixiAppWrapperEvent = {\n    RESIZE_START: \"PixiAppWrapperEvent.RESIZE_START\",\n    RESIZE_END: \"PixiAppWrapperEvent.RESIZE_END\",\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/event/pixi-app-wrapper-event.ts","export class Dom {\n\n    /**\n     * Returns element with given id or document body if not found.\n     * @param {string} elementId - Element id.\n     * @returns {HTMLElement} Element or body.\n     */\n    public static getElementOrBody(elementId: string): HTMLElement {\n        const element = document.getElementById(elementId);\n\n        if (element !== null) {\n            return element;\n        } else {\n            return document.body;\n        }\n    }\n\n    /**\n     * Returns element wih given id. If not found, a new element is created and appended to specified container or document body.\n     * @param {string} elementId - Element id.\n     * @param {string} tagName - Tag name to create the element if not found.\n     * @param {Element} container - Container to append the new element. Defaults to document body.\n     * @returns {T} Element or a new one if not found.\n     */\n    public static getElementOrCreateNew<T extends HTMLElement>(elementId: string, tagName: string, container?: Element | null): T {\n        let element = document.getElementById(elementId);\n\n        if (element === null) {\n            element = document.createElement(tagName);\n            element.id = elementId;\n\n            container = container ? container : document.body;\n            container.appendChild(element);\n        }\n\n        return element as T;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-app-wrapper/util/dom.ts","export * from \"./pixi-assets-loader\";\nexport * from \"./asset-priority\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-assets-loader/index.ts","import {EventEmitter} from \"eventemitter3\";\nimport PriorityQueue from \"typescript-collections/PriorityQueue\";\n\nexport interface Asset {\n    id: string;\n    url: string;\n    priority: number;\n    type?: any;\n}\n\nexport interface SoundAsset extends Asset {\n    autoplay: boolean;\n    loop?: boolean;\n    volume?: number;\n    mute?: boolean;\n    rate?: number;\n    html5?: boolean;\n    howl?: Howl;\n}\n\nexport interface LoadAsset {\n    asset: Asset;\n    loaded: boolean;\n    error: Error | null;\n}\n\nexport class PixiAssetsLoader extends EventEmitter {\n\n    /**\n     * Event fired when an asset has been loaded.\n     * @type {string}\n     */\n    public static readonly ASSET_LOADED: string = \"AssetsLoader.ASSET_LOADED\";\n\n    /**\n     * Event fired when an assets throws an error on load.\n     * @type {string}\n     */\n    public static readonly ASSET_ERROR: string = \"AssetsLoader.ASSET_ERROR\";\n\n    /**\n     * Event fired when a group of assets of same priority have been loaded (with or without errors).\n     * @type {string}\n     */\n    public static readonly PRIORITY_GROUP_LOADED: string = \"AssetsLoader.PRIORITY_GROUP_LOADED\";\n\n    /**\n     * Event fired with the progress on a group of assets of same priority.\n     * @type {string}\n     */\n    public static readonly PRIORITY_GROUP_PROGRESS: string = \"AssetsLoader.PRIORITY_GROUP_PROGRESS\";\n\n    /**\n     * Event fired when all queued assets have been loaded (with or without errors).\n     * @type {string}\n     */\n    public static readonly ALL_ASSETS_LOADED: string = \"AssetsLoader.ALL_ASSETS_LOADED\";\n\n    /**\n     * Multi-purpose loader used to load everything except sounds.\n     */\n    private loader: PIXI.loaders.Loader;\n\n    /**\n     * Prioritized assets queue to be loaded.\n     */\n    private assetsQueue: PriorityQueue<Asset>;\n\n    /**\n     * Next group of assets to load.\n     */\n    private assetsLoading: { [key: string]: LoadAsset };\n\n    /**\n     * Current priority of the assets being loaded.\n     */\n    private currentPriorityLoading: number | null;\n\n    /**\n     * Generic assets to load.\n     */\n    private genericAssetsToLoad: number;\n\n    /**\n     * Generic assets to load remaining.\n     */\n    private genericAssetsRemaining: number;\n\n    /**\n     * Sound assets to load.\n     */\n    private soundAssetsToLoad: number;\n\n    /**\n     * Sound assets to load remaining.\n     */\n    private soundAssetsRemaining: number;\n\n    /**\n     * Progress percentages.\n     */\n    private progressPercents: { generic: number, sound: number, total: number };\n\n    /**\n     * Custom asset loader that makes use of PIXI.loader and Howler to load.\n     * @param {PIXI.loaders.Loader} pixiLoader\n     * Provided pixi loader instance to use. Uses PIXI.loader if none is specified.\n     */\n    constructor(pixiLoader?: PIXI.loaders.Loader) {\n        super();\n\n        this.loader = pixiLoader ? pixiLoader : PIXI.loader;\n        this.loader.onProgress.add(this.onGenericAssetProgress.bind(this)); // called once per loaded/errored file\n        this.loader.onError.add(this.onGenericAssetError.bind(this)); // called once per errored file\n        this.loader.onLoad.add(this.onGenericAssetLoad.bind(this)); // called once per loaded file\n\n        this.assetsQueue = new PriorityQueue<Asset>((a, b) => a.priority - b.priority);\n\n        this.initLoadingQueue();\n    }\n\n    /**\n     * Determines if there is sth loading right now.\n     * @returns {boolean}\n     */\n    public isLoading(): boolean {\n        return Object.keys(this.assetsLoading).length > 0;\n    }\n\n    /**\n     * Add provided asset to the asset queue.\n     * @param {Asset} asset\n     */\n    public addAsset(asset: Asset): this {\n        this.assetsQueue.enqueue(asset);\n        return this;\n    }\n\n    /**\n     * Adds provided assets to the asset queue.\n     * @param {[Asset]} assets\n     */\n    public addAssets(assets: Asset[]): this {\n        assets.forEach(asset => this.addAsset(asset));\n        return this;\n    }\n\n    /**\n     * Loads all assets on the asset queue batching them by priority.\n     */\n    public load(): this {\n        if (!this.isLoading()) {\n            this.loadNextPriorityGroup();\n        }\n\n        return this;\n    }\n\n    /**\n     * Resets queued and loading asset + PIXI.loader.\n     */\n    public reset(): this {\n        this.assetsQueue.clear();\n        this.initLoadingQueue();\n        this.loader.reset();\n\n        return this;\n    }\n\n    private initLoadingQueue(): void {\n        this.assetsLoading = {};\n        this.currentPriorityLoading = null;\n        this.genericAssetsToLoad = 0;\n        this.genericAssetsRemaining = 0;\n        this.soundAssetsToLoad = 0;\n        this.soundAssetsRemaining = 0;\n        this.progressPercents = {generic: 0, sound: 0, total: 0};\n    }\n\n    private onGenericAssetProgress(loader: PIXI.loaders.Loader, resource: PIXI.loaders.Resource): void {\n        // Calculate real percentage (including other loaders)\n        const innerIncrement = loader.progress - this.progressPercents.generic;\n        this.progressPercents.generic = loader.progress;\n        const totalIncrement = innerIncrement * this.genericAssetsToLoad / Object.keys(this.assetsLoading).length;\n        this.progressPercents.total += totalIncrement;\n\n        this.emit(PixiAssetsLoader.PRIORITY_GROUP_PROGRESS, {\n            priority: this.currentPriorityLoading,\n            progress: this.progressPercents.total,\n        });\n    }\n\n    private onGenericAssetError(error: Error, loader: PIXI.loaders.Loader, resource: PIXI.loaders.Resource): void {\n        const loadAsset = this.assetsLoading[resource.name];\n\n        // Some generic resources add other resources to load we don't know about\n        if (loadAsset) {\n            loadAsset.loaded = false;\n            loadAsset.error = error; // resource.error holds the error too\n\n            this.emit(PixiAssetsLoader.ASSET_ERROR, loadAsset);\n        }\n    }\n\n    private onGenericAssetLoad(loader: PIXI.loaders.Loader, resource: PIXI.loaders.Resource): void {\n        const loadAsset = this.assetsLoading[resource.name];\n\n        // Some generic resources add other resources to load we don't know about\n        if (loadAsset) {\n            loadAsset.loaded = true;\n            loadAsset.error = null;\n\n            this.emit(PixiAssetsLoader.ASSET_LOADED, loadAsset);\n        }\n    }\n\n    private onAllGenericAssetsComplete(): void {\n        // We don't really know how many resources are being loaded because middlewares can add some more to the queue,\n        // so we go down from n resources-to-load to 0 in one step.\n        // See for instance the spine atlas parser middleware: pixi-spine/src/loaders.ts\n        this.genericAssetsRemaining = 0;\n        this.checkAllAssetsLoaded();\n    }\n\n    private onSoundAssetProgress(): void {\n        this.soundAssetsRemaining--;\n\n        // Calculate real percentage (including other loaders)\n        const innerPercent = (this.soundAssetsToLoad - this.soundAssetsRemaining) * 100 / this.soundAssetsToLoad;\n        const innerIncrement = innerPercent - this.progressPercents.sound;\n        this.progressPercents.sound = innerPercent;\n        const totalIncrement = innerIncrement * this.soundAssetsToLoad / Object.keys(this.assetsLoading).length;\n        this.progressPercents.total += totalIncrement;\n\n        this.emit(PixiAssetsLoader.PRIORITY_GROUP_PROGRESS, {\n            priority: this.currentPriorityLoading,\n            progress: this.progressPercents.total,\n        });\n    }\n\n    private onSoundAssetError(asset: Asset, error: Error): void {\n        this.onSoundAssetProgress();\n\n        const loadAsset = this.assetsLoading[asset.id];\n\n        if (loadAsset) {\n            loadAsset.loaded = false;\n            loadAsset.error = error;\n\n            this.emit(PixiAssetsLoader.ASSET_ERROR, loadAsset);\n        }\n\n        if (this.soundAssetsRemaining <= 0) {\n            this.checkAllAssetsLoaded();\n        }\n    }\n\n    private onSoundAssetLoad(asset: Asset): void {\n        this.onSoundAssetProgress();\n\n        const loadAsset = this.assetsLoading[asset.id];\n\n        if (loadAsset) {\n            loadAsset.loaded = true;\n            loadAsset.error = null;\n\n            this.emit(PixiAssetsLoader.ASSET_LOADED, loadAsset);\n        }\n\n        if (this.soundAssetsRemaining <= 0) {\n            this.checkAllAssetsLoaded();\n        }\n    }\n\n    /**\n     * Loads all assets with next prioriy on the queue.\n     */\n    private loadNextPriorityGroup(): void {\n        this.initLoadingQueue();\n\n        const asset = this.assetsQueue.peek();\n\n        if (asset) {\n            this.currentPriorityLoading = asset.priority;\n            this.loadPriorityGroup();\n        } else {\n            // No more assets in the queue, we are done.\n            this.emit(PixiAssetsLoader.ALL_ASSETS_LOADED);\n        }\n    }\n\n    /**\n     * Add all assets with same priority to the loading list and start loading them.\n     */\n    private loadPriorityGroup(): void {\n        while (this.assetsQueue.peek() && this.assetsQueue.peek()!.priority === this.currentPriorityLoading) {\n            const asset = this.assetsQueue.dequeue()!;\n\n            this.assetsLoading[asset.id] = {\n                asset,\n                loaded: false,\n                error: null,\n            };\n        }\n\n        this.startLoadingAssets();\n    }\n\n    private startLoadingAssets(): void {\n        const loadAssets = Object.keys(this.assetsLoading).map(key => this.assetsLoading[key]);\n\n        loadAssets.forEach(loadAsset => {\n            if ((loadAsset.asset as SoundAsset).autoplay !== undefined) {\n                this.soundAssetsToLoad++;\n                this.soundAssetsRemaining++;\n                this.loadSoundAsset(loadAsset.asset as SoundAsset);\n            } else {\n                this.genericAssetsToLoad++;\n                this.addGenericAsset(loadAsset.asset);\n            }\n        });\n\n        // Load generic assets through the loader\n        this.genericAssetsRemaining = this.genericAssetsToLoad;\n        this.loadGenericAssets();\n    }\n\n    private loadSoundAsset(asset: SoundAsset): void {\n        asset.howl = new Howl({\n            src: [asset.url],\n            autoplay: asset.autoplay,\n            loop: asset.loop || false,\n            volume: asset.volume || 1,\n            mute: asset.mute || false,\n            rate: asset.rate || 1,\n            html5: asset.html5 || false,\n            onload: this.onSoundAssetLoad.bind(this, asset),\n            onloaderror: (soundId: number, error: any) => {\n                const loadError = error instanceof Error ? error : new Error(`Error loading sound ${asset.id}`);\n                this.onSoundAssetError(asset, loadError);\n            },\n\n        });\n    }\n\n    private addGenericAsset(asset: Asset): void {\n        this.loader.add(asset.id, asset.url);\n    }\n\n    private loadGenericAssets(): void {\n        if (this.genericAssetsToLoad > 0) {\n            this.loader.load(this.onAllGenericAssetsComplete.bind(this));\n        } else {\n            this.checkAllAssetsLoaded();\n        }\n    }\n\n    private checkAllAssetsLoaded(): void {\n        if (this.genericAssetsRemaining + this.soundAssetsRemaining <= 0) {\n            // Notify priority group loaded\n            this.emit(PixiAssetsLoader.PRIORITY_GROUP_LOADED, {\n                priority: this.currentPriorityLoading,\n                assets: Object.keys(this.assetsLoading).map(key => this.assetsLoading[key]).filter(loadAsset => loadAsset.loaded),\n            });\n\n            // Load next priority group\n            this.loadNextPriorityGroup();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-assets-loader/pixi-assets-loader.ts","import * as util from './util';\nimport Heap from './Heap';\n\nexport default class PriorityQueue<T> {\n\n    private heap: Heap<T>;\n    /**\n     * Creates an empty priority queue.\n     * @class <p>In a priority queue each element is associated with a \"priority\",\n     * elements are dequeued in highest-priority-first order (the elements with the\n     * highest priority are dequeued first). Priority Queues are implemented as heaps.\n     * If the inserted elements are custom objects a compare function must be provided,\n     * otherwise the <=, === and >= operators are used to compare object priority.</p>\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two element priorities. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    constructor(compareFunction?: util.ICompareFunction<T>) {\n        this.heap = new Heap<T>(util.reverseCompareFunction(compareFunction));\n    }\n\n    /**\n     * Inserts the specified element into this priority queue.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    enqueue(element: T): boolean {\n        return this.heap.add(element);\n    }\n\n    /**\n     * Inserts the specified element into this priority queue.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    add(element: T): boolean {\n        return this.heap.add(element);\n    }\n\n    /**\n     * Retrieves and removes the highest priority element of this queue.\n     * @return {*} the the highest priority element of this queue,\n     *  or undefined if this queue is empty.\n     */\n    dequeue(): T | undefined {\n        if (this.heap.size() !== 0) {\n            const el = this.heap.peek();\n            this.heap.removeRoot();\n            return el;\n        }\n        return undefined;\n    }\n\n    /**\n     * Retrieves, but does not remove, the highest priority element of this queue.\n     * @return {*} the highest priority element of this queue, or undefined if this queue is empty.\n     */\n    peek(): T | undefined {\n        return this.heap.peek();\n    }\n\n    /**\n     * Returns true if this priority queue contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this priority queue contains the specified element,\n     * false otherwise.\n     */\n    contains(element: T): boolean {\n        return this.heap.contains(element);\n    }\n\n    /**\n     * Checks if this priority queue is empty.\n     * @return {boolean} true if and only if this priority queue contains no items; false\n     * otherwise.\n     */\n    isEmpty(): boolean {\n        return this.heap.isEmpty();\n    }\n\n    /**\n     * Returns the number of elements in this priority queue.\n     * @return {number} the number of elements in this priority queue.\n     */\n    size(): number {\n        return this.heap.size();\n    }\n\n    /**\n     * Removes all of the elements from this priority queue.\n     */\n    clear(): void {\n        this.heap.clear();\n    }\n\n    /**\n     * Executes the provided function once for each element present in this queue in\n     * no particular order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    forEach(callback: util.ILoopFunction<T>) {\n        this.heap.forEach(callback);\n    }\n\n} // end of priority queue\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/basarat/typescript-collections/PriorityQueue.ts","import * as collections from './util';\nimport * as arrays from './arrays';\n\nexport default class Heap<T> {\n    /**\n     * Array used to store the elements of the heap.\n     * @type {Array.<Object>}\n     * @private\n     */\n    private data: T[] = [];\n    /**\n     * Function used to compare elements.\n     * @type {function(Object,Object):number}\n     * @private\n     */\n    private compare: collections.ICompareFunction<T>;\n    /**\n     * Creates an empty Heap.\n     * @class\n     * <p>A heap is a binary tree, where the nodes maintain the heap property:\n     * each node is smaller than each of its children and therefore a MinHeap\n     * This implementation uses an array to store elements.</p>\n     * <p>If the inserted elements are custom objects a compare function must be provided,\n     *  at construction time, otherwise the <=, === and >= operators are\n     * used to compare elements. Example:</p>\n     *\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     *\n     * <p>If a Max-Heap is wanted (greater elements on top) you can a provide a\n     * reverse compare function to accomplish that behavior. Example:</p>\n     *\n     * <pre>\n     * function reverseCompare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return 1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return -1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     *\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two elements. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    constructor(compareFunction?: collections.ICompareFunction<T>) {\n        this.compare = compareFunction || collections.defaultCompare;\n    }\n\n    /**\n     * Returns the index of the left child of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the left child\n     * for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    private leftChildIndex(nodeIndex: number): number {\n        return (2 * nodeIndex) + 1;\n    }\n    /**\n     * Returns the index of the right child of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the right child\n     * for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    private rightChildIndex(nodeIndex: number): number {\n        return (2 * nodeIndex) + 2;\n    }\n    /**\n     * Returns the index of the parent of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    private parentIndex(nodeIndex: number): number {\n        return Math.floor((nodeIndex - 1) / 2);\n    }\n    /**\n     * Returns the index of the smaller child node (if it exists).\n     * @param {number} leftChild left child index.\n     * @param {number} rightChild right child index.\n     * @return {number} the index with the minimum value or -1 if it doesn't\n     * exists.\n     * @private\n     */\n    private minIndex(leftChild: number, rightChild: number): number {\n\n        if (rightChild >= this.data.length) {\n            if (leftChild >= this.data.length) {\n                return -1;\n            } else {\n                return leftChild;\n            }\n        } else {\n            if (this.compare(this.data[leftChild], this.data[rightChild]) <= 0) {\n                return leftChild;\n            } else {\n                return rightChild;\n            }\n        }\n    }\n    /**\n     * Moves the node at the given index up to its proper place in the heap.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    private siftUp(index: number): void {\n\n        let parent = this.parentIndex(index);\n        while (index > 0 && this.compare(this.data[parent], this.data[index]) > 0) {\n            arrays.swap(this.data, parent, index);\n            index = parent;\n            parent = this.parentIndex(index);\n        }\n    }\n    /**\n     * Moves the node at the given index down to its proper place in the heap.\n     * @param {number} nodeIndex The index of the node to move down.\n     * @private\n     */\n    private siftDown(nodeIndex: number): void {\n\n        //smaller child index\n        let min = this.minIndex(this.leftChildIndex(nodeIndex),\n            this.rightChildIndex(nodeIndex));\n\n        while (min >= 0 && this.compare(this.data[nodeIndex],\n            this.data[min]) > 0) {\n            arrays.swap(this.data, min, nodeIndex);\n            nodeIndex = min;\n            min = this.minIndex(this.leftChildIndex(nodeIndex),\n                this.rightChildIndex(nodeIndex));\n        }\n    }\n    /**\n     * Retrieves but does not remove the root element of this heap.\n     * @return {*} The value at the root of the heap. Returns undefined if the\n     * heap is empty.\n     */\n    peek(): T | undefined {\n\n        if (this.data.length > 0) {\n            return this.data[0];\n        } else {\n            return undefined;\n        }\n    }\n    /**\n     * Adds the given element into the heap.\n     * @param {*} element the element.\n     * @return true if the element was added or fals if it is undefined.\n     */\n    add(element: T): boolean {\n        if (collections.isUndefined(element)) {\n            return false;\n        }\n        this.data.push(element);\n        this.siftUp(this.data.length - 1);\n        return true;\n    }\n\n    /**\n     * Retrieves and removes the root element of this heap.\n     * @return {*} The value removed from the root of the heap. Returns\n     * undefined if the heap is empty.\n     */\n    removeRoot(): T | undefined {\n\n        if (this.data.length > 0) {\n            const obj = this.data[0];\n            this.data[0] = this.data[this.data.length - 1];\n            this.data.splice(this.data.length - 1, 1);\n            if (this.data.length > 0) {\n                this.siftDown(0);\n            }\n            return obj;\n        }\n        return undefined;\n    }\n    /**\n     * Returns true if this heap contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this Heap contains the specified element, false\n     * otherwise.\n     */\n    contains(element: T): boolean {\n        const equF = collections.compareToEquals(this.compare);\n        return arrays.contains(this.data, element, equF);\n    }\n    /**\n     * Returns the number of elements in this heap.\n     * @return {number} the number of elements in this heap.\n     */\n    size(): number {\n        return this.data.length;\n    }\n    /**\n     * Checks if this heap is empty.\n     * @return {boolean} true if and only if this heap contains no items; false\n     * otherwise.\n     */\n    isEmpty(): boolean {\n        return this.data.length <= 0;\n    }\n    /**\n     * Removes all of the elements from this heap.\n     */\n    clear(): void {\n        this.data.length = 0;\n    }\n\n    /**\n     * Executes the provided function once for each element present in this heap in\n     * no particular order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    forEach(callback: collections.ILoopFunction<T>) {\n        arrays.forEach(this.data, callback);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/basarat/typescript-collections/Heap.ts","import * as util from './util';\n\n/**\n * Returns the position of the first occurrence of the specified item\n * within the specified array.4\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the position of the first occurrence of the specified element\n * within the specified array, or -1 if not found.\n */\nexport function indexOf<T>(array: T[], item: T, equalsFunction?: util.IEqualsFunction<T>): number {\n    const equals = equalsFunction || util.defaultEquals;\n    const length = array.length;\n    for (let i = 0; i < length; i++) {\n        if (equals(array[i], item)) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/**\n * Returns the position of the last occurrence of the specified element\n * within the specified array.\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the position of the last occurrence of the specified element\n * within the specified array or -1 if not found.\n */\nexport function lastIndexOf<T>(array: T[], item: T, equalsFunction?: util.IEqualsFunction<T>): number {\n    const equals = equalsFunction || util.defaultEquals;\n    const length = array.length;\n    for (let i = length - 1; i >= 0; i--) {\n        if (equals(array[i], item)) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/**\n * Returns true if the specified array contains the specified element.\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function to\n * check equality between 2 elements.\n * @return {boolean} true if the specified array contains the specified element.\n */\nexport function contains<T>(array: T[], item: T, equalsFunction?: util.IEqualsFunction<T>): boolean {\n    return indexOf(array, item, equalsFunction) >= 0;\n}\n\n\n/**\n * Removes the first ocurrence of the specified element from the specified array.\n * @param {*} array the array in which to search element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function to\n * check equality between 2 elements.\n * @return {boolean} true if the array changed after this call.\n */\nexport function remove<T>(array: T[], item: T, equalsFunction?: util.IEqualsFunction<T>): boolean {\n    const index = indexOf(array, item, equalsFunction);\n    if (index < 0) {\n        return false;\n    }\n    array.splice(index, 1);\n    return true;\n}\n\n/**\n * Returns the number of elements in the specified array equal\n * to the specified object.\n * @param {Array} array the array in which to determine the frequency of the element.\n * @param {Object} item the element whose frequency is to be determined.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the number of elements in the specified array\n * equal to the specified object.\n */\nexport function frequency<T>(array: T[], item: T, equalsFunction?: util.IEqualsFunction<T>): number {\n    const equals = equalsFunction || util.defaultEquals;\n    const length = array.length;\n    let freq = 0;\n    for (let i = 0; i < length; i++) {\n        if (equals(array[i], item)) {\n            freq++;\n        }\n    }\n    return freq;\n}\n\n/**\n * Returns true if the two specified arrays are equal to one another.\n * Two arrays are considered equal if both arrays contain the same number\n * of elements, and all corresponding pairs of elements in the two\n * arrays are equal and are in the same order.\n * @param {Array} array1 one array to be tested for equality.\n * @param {Array} array2 the other array to be tested for equality.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between elemements in the arrays.\n * @return {boolean} true if the two arrays are equal\n */\nexport function equals<T>(array1: T[], array2: T[], equalsFunction?: util.IEqualsFunction<T>): boolean {\n    const equals = equalsFunction || util.defaultEquals;\n\n    if (array1.length !== array2.length) {\n        return false;\n    }\n    const length = array1.length;\n    for (let i = 0; i < length; i++) {\n        if (!equals(array1[i], array2[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Returns shallow a copy of the specified array.\n * @param {*} array the array to copy.\n * @return {Array} a copy of the specified array\n */\nexport function copy<T>(array: T[]): T[] {\n    return array.concat();\n}\n\n/**\n * Swaps the elements at the specified positions in the specified array.\n * @param {Array} array The array in which to swap elements.\n * @param {number} i the index of one element to be swapped.\n * @param {number} j the index of the other element to be swapped.\n * @return {boolean} true if the array is defined and the indexes are valid.\n */\nexport function swap<T>(array: T[], i: number, j: number): boolean {\n    if (i < 0 || i >= array.length || j < 0 || j >= array.length) {\n        return false;\n    }\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n    return true;\n}\n\nexport function toString<T>(array: T[]): string {\n    return '[' + array.toString() + ']';\n}\n\n/**\n * Executes the provided function once for each element present in this array\n * starting from index 0 to length - 1.\n * @param {Array} array The array in which to iterate.\n * @param {function(Object):*} callback function to execute, it is\n * invoked with one argument: the element value, to break the iteration you can\n * optionally return false.\n */\nexport function forEach<T>(array: T[], callback: util.ILoopFunction<T>): void {\n    for (const ele of array) {\n        if (callback(ele) === false) {\n            return;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/basarat/typescript-collections/arrays.ts","export class AssetPriority {\n    public static readonly HIGHEST = 100;\n    public static readonly HIGH = 75;\n    public static readonly NORMAL = 50;\n    public static readonly LOW = 25;\n    public static readonly LOWEST = 0;\n\n    public static getPriority(priority: number): number {\n        if (priority >= AssetPriority.HIGHEST) {\n            return AssetPriority.HIGHEST;\n        } else if (priority >= AssetPriority.HIGH) {\n            return AssetPriority.HIGH;\n        } else if (priority >= AssetPriority.NORMAL) {\n            return AssetPriority.NORMAL;\n        } else if (priority >= AssetPriority.LOW) {\n            return AssetPriority.LOW;\n        } else {\n            return AssetPriority.LOWEST;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/vendor/dacaher/pixi-assets-loader/asset-priority.ts","(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()\n\n\n// WEBPACK FOOTER //\n// node_modules/browser-pack/_prelude.js","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Particle_1 = require(\"./Particle\");\r\nvar Texture = PIXI.Texture;\r\n/**\r\n * An individual particle image with an animation. Art data passed to the emitter must be\r\n * formatted in a particular way for AnimatedParticle to be able to handle it:\r\n *\r\n *     {\r\n *         //framerate is required. It is the animation speed of the particle in frames per\r\n *         //second.\r\n *         //A value of \"matchLife\" causes the animation to match the lifetime of an individual\r\n *         //particle, instead of at a constant framerate. This causes the animation to play\r\n *         //through one time, completing when the particle expires.\r\n *         framerate: 6,\r\n *         //loop is optional, and defaults to false.\r\n *         loop: true,\r\n *         //textures is required, and can be an array of any (non-zero) length.\r\n *         textures: [\r\n *             //each entry represents a single texture that should be used for one or more\r\n *             //frames. Any strings will be converted to Textures with Texture.fromImage().\r\n *             //Instances of PIXI.Texture will be used directly.\r\n *             \"animFrame1.png\",\r\n *             //entries can be an object with a 'count' property, telling AnimatedParticle to\r\n *             //use that texture for 'count' frames sequentially.\r\n *             {\r\n *                 texture: \"animFrame2.png\",\r\n *                 count: 3\r\n *             },\r\n *             \"animFrame3.png\"\r\n *         ]\r\n *     }\r\n *\r\n * @memberof PIXI.particles\r\n * @class AnimatedParticle\r\n * @extends PIXI.particles.Particle\r\n * @constructor\r\n * @param {PIXI.particles.Emitter} emitter The emitter that controls this AnimatedParticle.\r\n */\r\nvar AnimatedParticle = /** @class */ (function (_super) {\r\n    __extends(AnimatedParticle, _super);\r\n    function AnimatedParticle(emitter) {\r\n        var _this = _super.call(this, emitter) || this;\r\n        _this.textures = null;\r\n        _this.duration = 0;\r\n        _this.framerate = 0;\r\n        _this.elapsed = 0;\r\n        _this.loop = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Initializes the particle for use, based on the properties that have to\r\n     * have been set already on the particle.\r\n     * @method PIXI.particles.AnimatedParticle#init\r\n     */\r\n    AnimatedParticle.prototype.init = function () {\r\n        this.Particle_init();\r\n        this.elapsed = 0;\r\n        //if the animation needs to match the particle's life, then cacluate variables\r\n        if (this.framerate < 0) {\r\n            this.duration = this.maxLife;\r\n            this.framerate = this.textures.length / this.duration;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the textures for the particle.\r\n     * @method PIXI.particles.AnimatedParticle#applyArt\r\n     * @param {Array} art An array of PIXI.Texture objects for this animated particle.\r\n     */\r\n    AnimatedParticle.prototype.applyArt = function (art) {\r\n        this.textures = art.textures;\r\n        this.framerate = art.framerate;\r\n        this.duration = art.duration;\r\n        this.loop = art.loop;\r\n    };\r\n    /**\r\n     * Updates the particle.\r\n     * @method PIXI.particles.AnimatedParticle#update\r\n     * @param {Number} delta Time elapsed since the previous frame, in __seconds__.\r\n     */\r\n    AnimatedParticle.prototype.update = function (delta) {\r\n        var lerp = this.Particle_update(delta);\r\n        //only animate the particle if it is still alive\r\n        if (lerp >= 0) {\r\n            this.elapsed += delta;\r\n            if (this.elapsed > this.duration) {\r\n                //loop elapsed back around\r\n                if (this.loop)\r\n                    this.elapsed = this.elapsed % this.duration;\r\n                else\r\n                    this.elapsed = this.duration - 0.000001;\r\n            }\r\n            var frame = (this.elapsed * this.framerate + 0.0000001) | 0;\r\n            this.texture = this.textures[frame] || PIXI.Texture.EMPTY;\r\n        }\r\n        return lerp;\r\n    };\r\n    /**\r\n     * Destroys the particle, removing references and preventing future use.\r\n     * @method PIXI.particles.AnimatedParticle#destroy\r\n     */\r\n    AnimatedParticle.prototype.destroy = function () {\r\n        this.Particle_destroy();\r\n        this.textures = null;\r\n    };\r\n    /**\r\n     * Checks over the art that was passed to the Emitter's init() function, to do any special\r\n     * modifications to prepare it ahead of time.\r\n     * @method PIXI.particles.AnimatedParticle.parseArt\r\n     * @static\r\n     * @param  {Array} art The array of art data, properly formatted for AnimatedParticle.\r\n     * @return {Array} The art, after any needed modifications.\r\n     */\r\n    AnimatedParticle.parseArt = function (art) {\r\n        var data, output, textures, tex, outTextures;\r\n        var outArr = [];\r\n        for (var i = 0; i < art.length; ++i) {\r\n            data = art[i];\r\n            outArr[i] = output = {};\r\n            output.textures = outTextures = [];\r\n            textures = data.textures;\r\n            for (var j = 0; j < textures.length; ++j) {\r\n                tex = textures[j];\r\n                if (typeof tex == \"string\")\r\n                    outTextures.push(Texture.fromImage(tex));\r\n                else if (tex instanceof Texture)\r\n                    outTextures.push(tex);\r\n                else {\r\n                    var dupe = tex.count || 1;\r\n                    if (typeof tex.texture == \"string\")\r\n                        tex = Texture.fromImage(tex.texture);\r\n                    else\r\n                        tex = tex.texture;\r\n                    for (; dupe > 0; --dupe) {\r\n                        outTextures.push(tex);\r\n                    }\r\n                }\r\n            }\r\n            //use these values to signify that the animation should match the particle life time.\r\n            if (data.framerate == \"matchLife\") {\r\n                //-1 means that it should be calculated\r\n                output.framerate = -1;\r\n                output.duration = 0;\r\n                output.loop = false;\r\n            }\r\n            else {\r\n                //determine if the animation should loop\r\n                output.loop = !!data.loop;\r\n                //get the framerate, default to 60\r\n                output.framerate = data.framerate > 0 ? data.framerate : 60;\r\n                //determine the duration\r\n                output.duration = outTextures.length / output.framerate;\r\n            }\r\n        }\r\n        return outArr;\r\n    };\r\n    return AnimatedParticle;\r\n}(Particle_1.default));\r\nexports.default = AnimatedParticle;\r\n\n\n\n// WEBPACK FOOTER //\n// ts-dist/AnimatedParticle.js","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ParticleUtils_1 = require(\"./ParticleUtils\");\r\nvar Particle_1 = require(\"./Particle\");\r\nvar PropertyNode_1 = require(\"./PropertyNode\");\r\nvar ticker = PIXI.ticker.shared;\r\nvar helperPoint = new PIXI.Point();\r\n/**\r\n * A particle emitter.\r\n * @memberof PIXI.particles\r\n * @class Emitter\r\n * @constructor\r\n * @param {PIXI.Container} particleParent The container to add the\r\n *                                                     particles to.\r\n * @param {Array|PIXI.Texture|String} [particleImages] A texture or array of textures to use\r\n *                                                     for the particles. Strings will be turned\r\n *                                                     into textures via Texture.fromImage().\r\n * @param {Object} [config] A configuration object containing settings for the emitter.\r\n * @param {Boolean} [config.emit=true] If config.emit is explicitly passed as false, the Emitter\r\n *                                     will start disabled.\r\n * @param {Boolean} [config.autoUpdate=false] If config.emit is explicitly passed as true, the Emitter\r\n *                                     will automatically call update via the PIXI shared ticker.\r\n */\r\nvar Emitter = /** @class */ (function () {\r\n    function Emitter(particleParent, particleImages, config) {\r\n        this._particleConstructor = Particle_1.default;\r\n        //properties for individual particles\r\n        this.particleImages = null;\r\n        this.startAlpha = null;\r\n        this.startSpeed = null;\r\n        this.minimumSpeedMultiplier = 1;\r\n        this.acceleration = null;\r\n        this.maxSpeed = NaN;\r\n        this.startScale = null;\r\n        this.minimumScaleMultiplier = 1;\r\n        this.startColor = null;\r\n        this.minLifetime = 0;\r\n        this.maxLifetime = 0;\r\n        this.minStartRotation = 0;\r\n        this.maxStartRotation = 0;\r\n        this.noRotation = false;\r\n        this.minRotationSpeed = 0;\r\n        this.maxRotationSpeed = 0;\r\n        this.particleBlendMode = 0;\r\n        this.customEase = null;\r\n        this.extraData = null;\r\n        //properties for spawning particles\r\n        this._frequency = 1;\r\n        this.spawnChance = 1;\r\n        this.maxParticles = 1000;\r\n        this.emitterLifetime = -1;\r\n        this.spawnPos = null;\r\n        this.spawnType = null;\r\n        this._spawnFunc = null;\r\n        this.spawnRect = null;\r\n        this.spawnCircle = null;\r\n        this.particlesPerWave = 1;\r\n        this.particleSpacing = 0;\r\n        this.angleStart = 0;\r\n        //emitter properties\r\n        this.rotation = 0;\r\n        this.ownerPos = null;\r\n        this._prevEmitterPos = null;\r\n        this._prevPosIsValid = false;\r\n        this._posChanged = false;\r\n        this._parent = null;\r\n        this.addAtBack = false;\r\n        this.particleCount = 0;\r\n        this._emit = false;\r\n        this._spawnTimer = 0;\r\n        this._emitterLife = -1;\r\n        this._activeParticlesFirst = null;\r\n        this._activeParticlesLast = null;\r\n        this._poolFirst = null;\r\n        this._origConfig = null;\r\n        this._origArt = null;\r\n        this._autoUpdate = false;\r\n        this._destroyWhenComplete = false;\r\n        this._completeCallback = null;\r\n        //set the initial parent\r\n        this.parent = particleParent;\r\n        if (particleImages && config)\r\n            this.init(particleImages, config);\r\n        //save often used functions on the instance instead of the prototype for better speed\r\n        this.recycle = this.recycle;\r\n        this.update = this.update;\r\n        this.rotate = this.rotate;\r\n        this.updateSpawnPos = this.updateSpawnPos;\r\n        this.updateOwnerPos = this.updateOwnerPos;\r\n    }\r\n    Object.defineProperty(Emitter.prototype, \"frequency\", {\r\n        /**\r\n         * Time between particle spawns in seconds. If this value is not a number greater than 0,\r\n         * it will be set to 1 (particle per second) to prevent infinite loops.\r\n         * @member {Number} PIXI.particles.Emitter#frequency\r\n         */\r\n        get: function () { return this._frequency; },\r\n        set: function (value) {\r\n            //do some error checking to prevent infinite loops\r\n            if (typeof value == \"number\" && value > 0)\r\n                this._frequency = value;\r\n            else\r\n                this._frequency = 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Emitter.prototype, \"particleConstructor\", {\r\n        /**\r\n         * The constructor used to create new particles. The default is\r\n         * the built in Particle class. Setting this will dump any active or\r\n         * pooled particles, if the emitter has already been used.\r\n         * @member {Function} PIXI.particles.Emitter#particleConstructor\r\n         */\r\n        get: function () { return this._particleConstructor; },\r\n        set: function (value) {\r\n            if (value != this._particleConstructor) {\r\n                this._particleConstructor = value;\r\n                //clean up existing particles\r\n                this.cleanup();\r\n                //scrap all the particles\r\n                for (var particle = this._poolFirst; particle; particle = particle.next) {\r\n                    particle.destroy();\r\n                }\r\n                this._poolFirst = null;\r\n                //re-initialize the emitter so that the new constructor can do anything it needs to\r\n                if (this._origConfig && this._origArt)\r\n                    this.init(this._origArt, this._origConfig);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Emitter.prototype, \"parent\", {\r\n        /**\r\n        * The container to add particles to. Settings this will dump any active particles.\r\n        * @member {PIXI.Container} PIXI.particles.Emitter#parent\r\n        */\r\n        get: function () { return this._parent; },\r\n        set: function (value) {\r\n            this.cleanup();\r\n            this._parent = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets up the emitter based on the config settings.\r\n     * @method PIXI.particles.Emitter#init\r\n     * @param {Array|PIXI.Texture} art A texture or array of textures to use for the particles.\r\n     * @param {Object} config A configuration object containing settings for the emitter.\r\n     */\r\n    Emitter.prototype.init = function (art, config) {\r\n        if (!art || !config)\r\n            return;\r\n        //clean up any existing particles\r\n        this.cleanup();\r\n        //store the original config and particle images, in case we need to re-initialize\r\n        //when the particle constructor is changed\r\n        this._origConfig = config;\r\n        this._origArt = art;\r\n        //set up the array of data, also ensuring that it is an array\r\n        art = Array.isArray(art) ? art.slice() : [art];\r\n        //run the art through the particle class's parsing function\r\n        var partClass = this._particleConstructor;\r\n        this.particleImages = partClass.parseArt ? partClass.parseArt(art) : art;\r\n        ///////////////////////////\r\n        // Particle Properties   //\r\n        ///////////////////////////\r\n        //set up the alpha\r\n        if (config.alpha) {\r\n            this.startAlpha = PropertyNode_1.default.createList(config.alpha);\r\n        }\r\n        else\r\n            this.startAlpha = new PropertyNode_1.default(1, 0);\r\n        //set up the speed\r\n        if (config.speed) {\r\n            this.startSpeed = PropertyNode_1.default.createList(config.speed);\r\n            this.minimumSpeedMultiplier = config.speed.minimumSpeedMultiplier || 1;\r\n        }\r\n        else {\r\n            this.minimumSpeedMultiplier = 1;\r\n            this.startSpeed = new PropertyNode_1.default(0, 0);\r\n        }\r\n        //set up acceleration\r\n        var acceleration = config.acceleration;\r\n        if (acceleration && (acceleration.x || acceleration.y)) {\r\n            //make sure we disable speed interpolation\r\n            this.startSpeed.next = null;\r\n            this.acceleration = new PIXI.Point(acceleration.x, acceleration.y);\r\n            this.maxSpeed = config.maxSpeed || NaN;\r\n        }\r\n        else\r\n            this.acceleration = new PIXI.Point();\r\n        //set up the scale\r\n        if (config.scale) {\r\n            this.startScale = PropertyNode_1.default.createList(config.scale);\r\n            this.minimumScaleMultiplier = config.scale.minimumScaleMultiplier || 1;\r\n        }\r\n        else {\r\n            this.startScale = new PropertyNode_1.default(1, 0);\r\n            this.minimumScaleMultiplier = 1;\r\n        }\r\n        //set up the color\r\n        if (config.color) {\r\n            this.startColor = PropertyNode_1.default.createList(config.color);\r\n        }\r\n        else {\r\n            this.startColor = new PropertyNode_1.default({ r: 0xFF, g: 0xFF, b: 0xFF }, 0);\r\n        }\r\n        //set up the start rotation\r\n        if (config.startRotation) {\r\n            this.minStartRotation = config.startRotation.min;\r\n            this.maxStartRotation = config.startRotation.max;\r\n        }\r\n        else\r\n            this.minStartRotation = this.maxStartRotation = 0;\r\n        if (config.noRotation &&\r\n            (this.minStartRotation || this.maxStartRotation)) {\r\n            this.noRotation = !!config.noRotation;\r\n        }\r\n        else\r\n            this.noRotation = false;\r\n        //set up the rotation speed\r\n        if (config.rotationSpeed) {\r\n            this.minRotationSpeed = config.rotationSpeed.min;\r\n            this.maxRotationSpeed = config.rotationSpeed.max;\r\n        }\r\n        else\r\n            this.minRotationSpeed = this.maxRotationSpeed = 0;\r\n        //set up the lifetime\r\n        this.minLifetime = config.lifetime.min;\r\n        this.maxLifetime = config.lifetime.max;\r\n        //get the blend mode\r\n        this.particleBlendMode = ParticleUtils_1.default.getBlendMode(config.blendMode);\r\n        //use the custom ease if provided\r\n        if (config.ease) {\r\n            this.customEase = typeof config.ease == \"function\" ?\r\n                config.ease :\r\n                ParticleUtils_1.default.generateEase(config.ease);\r\n        }\r\n        else\r\n            this.customEase = null;\r\n        //set up the extra data, running it through the particle class's parseData function.\r\n        if (partClass.parseData)\r\n            this.extraData = partClass.parseData(config.extraData);\r\n        else\r\n            this.extraData = config.extraData || null;\r\n        //////////////////////////\r\n        // Emitter Properties   //\r\n        //////////////////////////\r\n        //reset spawn type specific settings\r\n        this.spawnRect = this.spawnCircle = null;\r\n        this.particlesPerWave = 1;\r\n        if (config.particlesPerWave && config.particlesPerWave > 1)\r\n            this.particlesPerWave = config.particlesPerWave;\r\n        this.particleSpacing = 0;\r\n        this.angleStart = 0;\r\n        var spawnCircle;\r\n        //determine the spawn function to use\r\n        switch (config.spawnType) {\r\n            case \"rect\":\r\n                this.spawnType = \"rect\";\r\n                this._spawnFunc = this._spawnRect;\r\n                var spawnRect = config.spawnRect;\r\n                this.spawnRect = new PIXI.Rectangle(spawnRect.x, spawnRect.y, spawnRect.w, spawnRect.h);\r\n                break;\r\n            case \"circle\":\r\n                this.spawnType = \"circle\";\r\n                this._spawnFunc = this._spawnCircle;\r\n                spawnCircle = config.spawnCircle;\r\n                this.spawnCircle = new PIXI.Circle(spawnCircle.x, spawnCircle.y, spawnCircle.r);\r\n                break;\r\n            case \"ring\":\r\n                this.spawnType = \"ring\";\r\n                this._spawnFunc = this._spawnRing;\r\n                spawnCircle = config.spawnCircle;\r\n                this.spawnCircle = new PIXI.Circle(spawnCircle.x, spawnCircle.y, spawnCircle.r);\r\n                this.spawnCircle.minRadius = spawnCircle.minR;\r\n                break;\r\n            case \"burst\":\r\n                this.spawnType = \"burst\";\r\n                this._spawnFunc = this._spawnBurst;\r\n                this.particleSpacing = config.particleSpacing;\r\n                this.angleStart = config.angleStart ? config.angleStart : 0;\r\n                break;\r\n            case \"point\":\r\n                this.spawnType = \"point\";\r\n                this._spawnFunc = this._spawnPoint;\r\n                break;\r\n            default:\r\n                this.spawnType = \"point\";\r\n                this._spawnFunc = this._spawnPoint;\r\n                break;\r\n        }\r\n        //set the spawning frequency\r\n        this.frequency = config.frequency;\r\n        this.spawnChance = (typeof config.spawnChance === 'number' && config.spawnChance > 0) ? config.spawnChance : 1;\r\n        //set the emitter lifetime\r\n        this.emitterLifetime = config.emitterLifetime || -1;\r\n        //set the max particles\r\n        this.maxParticles = config.maxParticles > 0 ? config.maxParticles : 1000;\r\n        //determine if we should add the particle at the back of the list or not\r\n        this.addAtBack = !!config.addAtBack;\r\n        //reset the emitter position and rotation variables\r\n        this.rotation = 0;\r\n        this.ownerPos = new PIXI.Point();\r\n        this.spawnPos = new PIXI.Point(config.pos.x, config.pos.y);\r\n        this._prevEmitterPos = this.spawnPos.clone();\r\n        //previous emitter position is invalid and should not be used for interpolation\r\n        this._prevPosIsValid = false;\r\n        //start emitting\r\n        this._spawnTimer = 0;\r\n        this.emit = config.emit === undefined ? true : !!config.emit;\r\n        this.autoUpdate = config.autoUpdate === undefined ? false : !!config.autoUpdate;\r\n    };\r\n    /**\r\n     * Recycles an individual particle.\r\n     * @method PIXI.particles.Emitter#recycle\r\n     * @param {Particle} particle The particle to recycle.\r\n     * @private\r\n     */\r\n    Emitter.prototype.recycle = function (particle) {\r\n        if (particle.next)\r\n            particle.next.prev = particle.prev;\r\n        if (particle.prev)\r\n            particle.prev.next = particle.next;\r\n        if (particle == this._activeParticlesLast)\r\n            this._activeParticlesLast = particle.prev;\r\n        if (particle == this._activeParticlesFirst)\r\n            this._activeParticlesFirst = particle.next;\r\n        //add to pool\r\n        particle.prev = null;\r\n        particle.next = this._poolFirst;\r\n        this._poolFirst = particle;\r\n        //remove child from display, or make it invisible if it is in a ParticleContainer\r\n        if (particle.parent)\r\n            particle.parent.removeChild(particle);\r\n        //decrease count\r\n        --this.particleCount;\r\n    };\r\n    /**\r\n     * Sets the rotation of the emitter to a new value.\r\n     * @method PIXI.particles.Emitter#rotate\r\n     * @param {Number} newRot The new rotation, in degrees.\r\n     */\r\n    Emitter.prototype.rotate = function (newRot) {\r\n        if (this.rotation == newRot)\r\n            return;\r\n        //caclulate the difference in rotation for rotating spawnPos\r\n        var diff = newRot - this.rotation;\r\n        this.rotation = newRot;\r\n        //rotate spawnPos\r\n        ParticleUtils_1.default.rotatePoint(diff, this.spawnPos);\r\n        //mark the position as having changed\r\n        this._posChanged = true;\r\n    };\r\n    /**\r\n     * Changes the spawn position of the emitter.\r\n     * @method PIXI.particles.Emitter#updateSpawnPos\r\n     * @param {Number} x The new x value of the spawn position for the emitter.\r\n     * @param {Number} y The new y value of the spawn position for the emitter.\r\n     */\r\n    Emitter.prototype.updateSpawnPos = function (x, y) {\r\n        this._posChanged = true;\r\n        this.spawnPos.x = x;\r\n        this.spawnPos.y = y;\r\n    };\r\n    /**\r\n     * Changes the position of the emitter's owner. You should call this if you are adding\r\n     * particles to the world container that your emitter's owner is moving around in.\r\n     * @method PIXI.particles.Emitter#updateOwnerPos\r\n     * @param {Number} x The new x value of the emitter's owner.\r\n     * @param {Number} y The new y value of the emitter's owner.\r\n     */\r\n    Emitter.prototype.updateOwnerPos = function (x, y) {\r\n        this._posChanged = true;\r\n        this.ownerPos.x = x;\r\n        this.ownerPos.y = y;\r\n    };\r\n    /**\r\n     * Prevents emitter position interpolation in the next update.\r\n     * This should be used if you made a major position change of your emitter's owner\r\n     * that was not normal movement.\r\n     * @method PIXI.particles.Emitter#resetPositionTracking\r\n     */\r\n    Emitter.prototype.resetPositionTracking = function () {\r\n        this._prevPosIsValid = false;\r\n    };\r\n    Object.defineProperty(Emitter.prototype, \"emit\", {\r\n        /**\r\n         * If particles should be emitted during update() calls. Setting this to false\r\n         * stops new particles from being created, but allows existing ones to die out.\r\n         * @member {Boolean} PIXI.particles.Emitter#emit\r\n         */\r\n        get: function () { return this._emit; },\r\n        set: function (value) {\r\n            this._emit = !!value;\r\n            this._emitterLife = this.emitterLifetime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(Emitter.prototype, \"autoUpdate\", {\r\n        /**\r\n         * If the update function is called automatically from the shared ticker.\r\n         * Setting this to false requires calling the update function manually.\r\n         * @member {Boolean} PIXI.particles.Emitter#autoUpdate\r\n         */\r\n        get: function () { return this._autoUpdate; },\r\n        set: function (value) {\r\n            if (this._autoUpdate && !value) {\r\n                ticker.remove(this.update, this);\r\n            }\r\n            else if (!this._autoUpdate && value) {\r\n                ticker.add(this.update, this);\r\n            }\r\n            this._autoUpdate = !!value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Starts emitting particles, sets autoUpdate to true, and sets up the Emitter to destroy itself\r\n     * when particle emission is complete.\r\n     * @method PIXI.particles.Emitter#playOnceAndDestroy\r\n     * @param {Function} [callback] Callback for when emission is complete (all particles have died off)\r\n     */\r\n    Emitter.prototype.playOnceAndDestroy = function (callback) {\r\n        this.autoUpdate = true;\r\n        this.emit = true;\r\n        this._destroyWhenComplete = true;\r\n        this._completeCallback = callback;\r\n    };\r\n    /**\r\n     * Starts emitting particles and optionally calls a callback when particle emission is complete.\r\n     * @method PIXI.particles.Emitter#playOnce\r\n     * @param {Function} [callback] Callback for when emission is complete (all particles have died off)\r\n     */\r\n    Emitter.prototype.playOnce = function (callback) {\r\n        this.emit = true;\r\n        this._completeCallback = callback;\r\n    };\r\n    /**\r\n     * Updates all particles spawned by this emitter and emits new ones.\r\n     * @method PIXI.particles.Emitter#update\r\n     * @param {Number} delta Time elapsed since the previous frame, in __seconds__.\r\n     */\r\n    Emitter.prototype.update = function (delta) {\r\n        if (this._autoUpdate) {\r\n            delta = delta / PIXI.settings.TARGET_FPMS / 1000;\r\n        }\r\n        //if we don't have a parent to add particles to, then don't do anything.\r\n        //this also works as a isDestroyed check\r\n        if (!this._parent)\r\n            return;\r\n        //update existing particles\r\n        var i, particle, next;\r\n        for (particle = this._activeParticlesFirst; particle; particle = next) {\r\n            next = particle.next;\r\n            particle.update(delta);\r\n        }\r\n        var prevX, prevY;\r\n        //if the previous position is valid, store these for later interpolation\r\n        if (this._prevPosIsValid) {\r\n            prevX = this._prevEmitterPos.x;\r\n            prevY = this._prevEmitterPos.y;\r\n        }\r\n        //store current position of the emitter as local variables\r\n        var curX = this.ownerPos.x + this.spawnPos.x;\r\n        var curY = this.ownerPos.y + this.spawnPos.y;\r\n        //spawn new particles\r\n        if (this._emit) {\r\n            //decrease spawn timer\r\n            this._spawnTimer -= delta;\r\n            //while _spawnTimer < 0, we have particles to spawn\r\n            while (this._spawnTimer <= 0) {\r\n                //determine if the emitter should stop spawning\r\n                if (this._emitterLife > 0) {\r\n                    this._emitterLife -= this._frequency;\r\n                    if (this._emitterLife <= 0) {\r\n                        this._spawnTimer = 0;\r\n                        this._emitterLife = 0;\r\n                        this.emit = false;\r\n                        break;\r\n                    }\r\n                }\r\n                //determine if we have hit the particle limit\r\n                if (this.particleCount >= this.maxParticles) {\r\n                    this._spawnTimer += this._frequency;\r\n                    continue;\r\n                }\r\n                //determine the particle lifetime\r\n                var lifetime = void 0;\r\n                if (this.minLifetime == this.maxLifetime)\r\n                    lifetime = this.minLifetime;\r\n                else\r\n                    lifetime = Math.random() * (this.maxLifetime - this.minLifetime) + this.minLifetime;\r\n                //only make the particle if it wouldn't immediately destroy itself\r\n                if (-this._spawnTimer < lifetime) {\r\n                    //If the position has changed and this isn't the first spawn,\r\n                    //interpolate the spawn position\r\n                    var emitPosX = void 0, emitPosY = void 0;\r\n                    if (this._prevPosIsValid && this._posChanged) {\r\n                        //1 - _spawnTimer / delta, but _spawnTimer is negative\r\n                        var lerp = 1 + this._spawnTimer / delta;\r\n                        emitPosX = (curX - prevX) * lerp + prevX;\r\n                        emitPosY = (curY - prevY) * lerp + prevY;\r\n                    }\r\n                    else {\r\n                        emitPosX = curX;\r\n                        emitPosY = curY;\r\n                    }\r\n                    //create enough particles to fill the wave (non-burst types have a wave of 1)\r\n                    i = 0;\r\n                    for (var len = Math.min(this.particlesPerWave, this.maxParticles - this.particleCount); i < len; ++i) {\r\n                        //see if we actually spawn one\r\n                        if (this.spawnChance < 1 && Math.random() >= this.spawnChance)\r\n                            continue;\r\n                        //create particle\r\n                        var p = void 0;\r\n                        if (this._poolFirst) {\r\n                            p = this._poolFirst;\r\n                            this._poolFirst = this._poolFirst.next;\r\n                            p.next = null;\r\n                        }\r\n                        else {\r\n                            p = new this.particleConstructor(this);\r\n                        }\r\n                        //set a random texture if we have more than one\r\n                        if (this.particleImages.length > 1) {\r\n                            p.applyArt(this.particleImages[Math.floor(Math.random() * this.particleImages.length)]);\r\n                        }\r\n                        else {\r\n                            //if they are actually the same texture, a standard particle\r\n                            //will quit early from the texture setting in setTexture().\r\n                            p.applyArt(this.particleImages[0]);\r\n                        }\r\n                        //set up the start and end values\r\n                        p.alphaList.reset(this.startAlpha);\r\n                        if (this.minimumSpeedMultiplier != 1) {\r\n                            p.speedMultiplier = Math.random() * (1 - this.minimumSpeedMultiplier) + this.minimumSpeedMultiplier;\r\n                        }\r\n                        p.speedList.reset(this.startSpeed);\r\n                        p.acceleration.x = this.acceleration.x;\r\n                        p.acceleration.y = this.acceleration.y;\r\n                        p.maxSpeed = this.maxSpeed;\r\n                        if (this.minimumScaleMultiplier != 1) {\r\n                            p.scaleMultiplier = Math.random() * (1 - this.minimumScaleMultiplier) + this.minimumScaleMultiplier;\r\n                        }\r\n                        p.scaleList.reset(this.startScale);\r\n                        p.colorList.reset(this.startColor);\r\n                        //randomize the rotation speed\r\n                        if (this.minRotationSpeed == this.maxRotationSpeed)\r\n                            p.rotationSpeed = this.minRotationSpeed;\r\n                        else\r\n                            p.rotationSpeed = Math.random() * (this.maxRotationSpeed - this.minRotationSpeed) + this.minRotationSpeed;\r\n                        p.noRotation = this.noRotation;\r\n                        //set up the lifetime\r\n                        p.maxLife = lifetime;\r\n                        //set the blend mode\r\n                        p.blendMode = this.particleBlendMode;\r\n                        //set the custom ease, if any\r\n                        p.ease = this.customEase;\r\n                        //set the extra data, if any\r\n                        p.extraData = this.extraData;\r\n                        //call the proper function to handle rotation and position of particle\r\n                        this._spawnFunc(p, emitPosX, emitPosY, i);\r\n                        //initialize particle\r\n                        p.init();\r\n                        //update the particle by the time passed, so the particles are spread out properly\r\n                        p.update(-this._spawnTimer); //we want a positive delta, because a negative delta messes things up\r\n                        //add the particle to the display list\r\n                        if (!p.parent) {\r\n                            if (this.addAtBack)\r\n                                this._parent.addChildAt(p, 0);\r\n                            else\r\n                                this._parent.addChild(p);\r\n                        }\r\n                        else {\r\n                            //kind of hacky, but performance friendly\r\n                            //shuffle children to correct place\r\n                            var children = this._parent.children;\r\n                            //avoid using splice if possible\r\n                            if (children[0] == p)\r\n                                children.shift();\r\n                            else if (children[children.length - 1] == p)\r\n                                children.pop();\r\n                            else {\r\n                                var index = children.indexOf(p);\r\n                                children.splice(index, 1);\r\n                            }\r\n                            if (this.addAtBack)\r\n                                children.unshift(p);\r\n                            else\r\n                                children.push(p);\r\n                        }\r\n                        //add particle to list of active particles\r\n                        if (this._activeParticlesLast) {\r\n                            this._activeParticlesLast.next = p;\r\n                            p.prev = this._activeParticlesLast;\r\n                            this._activeParticlesLast = p;\r\n                        }\r\n                        else {\r\n                            this._activeParticlesLast = this._activeParticlesFirst = p;\r\n                        }\r\n                        ++this.particleCount;\r\n                    }\r\n                }\r\n                //increase timer and continue on to any other particles that need to be created\r\n                this._spawnTimer += this._frequency;\r\n            }\r\n        }\r\n        //if the position changed before this update, then keep track of that\r\n        if (this._posChanged) {\r\n            this._prevEmitterPos.x = curX;\r\n            this._prevEmitterPos.y = curY;\r\n            this._prevPosIsValid = true;\r\n            this._posChanged = false;\r\n        }\r\n        //if we are all done and should destroy ourselves, take care of that\r\n        if (!this._emit && !this._activeParticlesFirst) {\r\n            if (this._completeCallback) {\r\n                this._completeCallback();\r\n            }\r\n            if (this._destroyWhenComplete) {\r\n                this.destroy();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Positions a particle for a point type emitter.\r\n     * @method PIXI.particles.Emitter#_spawnPoint\r\n     * @private\r\n     * @param {Particle} p The particle to position and rotate.\r\n     * @param {Number} emitPosX The emitter's x position\r\n     * @param {Number} emitPosY The emitter's y position\r\n     * @param {int} i The particle number in the current wave. Not used for this function.\r\n     */\r\n    Emitter.prototype._spawnPoint = function (p, emitPosX, emitPosY) {\r\n        //set the initial rotation/direction of the particle based on\r\n        //starting particle angle and rotation of emitter\r\n        if (this.minStartRotation == this.maxStartRotation)\r\n            p.rotation = this.minStartRotation + this.rotation;\r\n        else\r\n            p.rotation = Math.random() * (this.maxStartRotation - this.minStartRotation) + this.minStartRotation + this.rotation;\r\n        //drop the particle at the emitter's position\r\n        p.position.x = emitPosX;\r\n        p.position.y = emitPosY;\r\n    };\r\n    /**\r\n     * Positions a particle for a rectangle type emitter.\r\n     * @method PIXI.particles.Emitter#_spawnRect\r\n     * @private\r\n     * @param {Particle} p The particle to position and rotate.\r\n     * @param {Number} emitPosX The emitter's x position\r\n     * @param {Number} emitPosY The emitter's y position\r\n     * @param {int} i The particle number in the current wave. Not used for this function.\r\n     */\r\n    Emitter.prototype._spawnRect = function (p, emitPosX, emitPosY) {\r\n        //set the initial rotation/direction of the particle based on starting\r\n        //particle angle and rotation of emitter\r\n        if (this.minStartRotation == this.maxStartRotation)\r\n            p.rotation = this.minStartRotation + this.rotation;\r\n        else\r\n            p.rotation = Math.random() * (this.maxStartRotation - this.minStartRotation) + this.minStartRotation + this.rotation;\r\n        //place the particle at a random point in the rectangle\r\n        helperPoint.x = Math.random() * this.spawnRect.width + this.spawnRect.x;\r\n        helperPoint.y = Math.random() * this.spawnRect.height + this.spawnRect.y;\r\n        if (this.rotation !== 0)\r\n            ParticleUtils_1.default.rotatePoint(this.rotation, helperPoint);\r\n        p.position.x = emitPosX + helperPoint.x;\r\n        p.position.y = emitPosY + helperPoint.y;\r\n    };\r\n    /**\r\n     * Positions a particle for a circle type emitter.\r\n     * @method PIXI.particles.Emitter#_spawnCircle\r\n     * @private\r\n     * @param {Particle} p The particle to position and rotate.\r\n     * @param {Number} emitPosX The emitter's x position\r\n     * @param {Number} emitPosY The emitter's y position\r\n     * @param {int} i The particle number in the current wave. Not used for this function.\r\n     */\r\n    Emitter.prototype._spawnCircle = function (p, emitPosX, emitPosY) {\r\n        //set the initial rotation/direction of the particle based on starting\r\n        //particle angle and rotation of emitter\r\n        if (this.minStartRotation == this.maxStartRotation)\r\n            p.rotation = this.minStartRotation + this.rotation;\r\n        else\r\n            p.rotation = Math.random() * (this.maxStartRotation - this.minStartRotation) +\r\n                this.minStartRotation + this.rotation;\r\n        //place the particle at a random radius in the circle\r\n        helperPoint.x = Math.random() * this.spawnCircle.radius;\r\n        helperPoint.y = 0;\r\n        //rotate the point to a random angle in the circle\r\n        ParticleUtils_1.default.rotatePoint(Math.random() * 360, helperPoint);\r\n        //offset by the circle's center\r\n        helperPoint.x += this.spawnCircle.x;\r\n        helperPoint.y += this.spawnCircle.y;\r\n        //rotate the point by the emitter's rotation\r\n        if (this.rotation !== 0)\r\n            ParticleUtils_1.default.rotatePoint(this.rotation, helperPoint);\r\n        //set the position, offset by the emitter's position\r\n        p.position.x = emitPosX + helperPoint.x;\r\n        p.position.y = emitPosY + helperPoint.y;\r\n    };\r\n    /**\r\n     * Positions a particle for a ring type emitter.\r\n     * @method PIXI.particles.Emitter#_spawnRing\r\n     * @private\r\n     * @param {Particle} p The particle to position and rotate.\r\n     * @param {Number} emitPosX The emitter's x position\r\n     * @param {Number} emitPosY The emitter's y position\r\n     * @param {int} i The particle number in the current wave. Not used for this function.\r\n     */\r\n    Emitter.prototype._spawnRing = function (p, emitPosX, emitPosY) {\r\n        var spawnCircle = this.spawnCircle;\r\n        //set the initial rotation/direction of the particle based on starting\r\n        //particle angle and rotation of emitter\r\n        if (this.minStartRotation == this.maxStartRotation)\r\n            p.rotation = this.minStartRotation + this.rotation;\r\n        else\r\n            p.rotation = Math.random() * (this.maxStartRotation - this.minStartRotation) +\r\n                this.minStartRotation + this.rotation;\r\n        //place the particle at a random radius in the ring\r\n        if (spawnCircle.minRadius == spawnCircle.radius) {\r\n            helperPoint.x = Math.random() * (spawnCircle.radius - spawnCircle.minRadius) +\r\n                spawnCircle.minRadius;\r\n        }\r\n        else\r\n            helperPoint.x = spawnCircle.radius;\r\n        helperPoint.y = 0;\r\n        //rotate the point to a random angle in the circle\r\n        var angle = Math.random() * 360;\r\n        p.rotation += angle;\r\n        ParticleUtils_1.default.rotatePoint(angle, helperPoint);\r\n        //offset by the circle's center\r\n        helperPoint.x += this.spawnCircle.x;\r\n        helperPoint.y += this.spawnCircle.y;\r\n        //rotate the point by the emitter's rotation\r\n        if (this.rotation !== 0)\r\n            ParticleUtils_1.default.rotatePoint(this.rotation, helperPoint);\r\n        //set the position, offset by the emitter's position\r\n        p.position.x = emitPosX + helperPoint.x;\r\n        p.position.y = emitPosY + helperPoint.y;\r\n    };\r\n    /**\r\n     * Positions a particle for a burst type emitter.\r\n     * @method PIXI.particles.Emitter#_spawnBurst\r\n     * @private\r\n     * @param {Particle} p The particle to position and rotate.\r\n     * @param {Number} emitPosX The emitter's x position\r\n     * @param {Number} emitPosY The emitter's y position\r\n     * @param {int} i The particle number in the current wave.\r\n     */\r\n    Emitter.prototype._spawnBurst = function (p, emitPosX, emitPosY, i) {\r\n        //set the initial rotation/direction of the particle based on spawn\r\n        //angle and rotation of emitter\r\n        if (this.particleSpacing === 0)\r\n            p.rotation = Math.random() * 360;\r\n        else\r\n            p.rotation = this.angleStart + (this.particleSpacing * i) + this.rotation;\r\n        //drop the particle at the emitter's position\r\n        p.position.x = emitPosX;\r\n        p.position.y = emitPosY;\r\n    };\r\n    /**\r\n     * Kills all active particles immediately.\r\n     * @method PIXI.particles.Emitter#cleanup\r\n     */\r\n    Emitter.prototype.cleanup = function () {\r\n        var particle, next;\r\n        for (particle = this._activeParticlesFirst; particle; particle = next) {\r\n            next = particle.next;\r\n            this.recycle(particle);\r\n            if (particle.parent)\r\n                particle.parent.removeChild(particle);\r\n        }\r\n        this._activeParticlesFirst = this._activeParticlesLast = null;\r\n        this.particleCount = 0;\r\n    };\r\n    /**\r\n     * Destroys the emitter and all of its particles.\r\n     * @method PIXI.particles.Emitter#destroy\r\n     */\r\n    Emitter.prototype.destroy = function () {\r\n        //make sure we aren't still listening to any tickers\r\n        this.autoUpdate = false;\r\n        //puts all active particles in the pool, and removes them from the particle parent\r\n        this.cleanup();\r\n        //wipe the pool clean\r\n        var next;\r\n        for (var particle = this._poolFirst; particle; particle = next) {\r\n            //store next value so we don't lose it in our destroy call\r\n            next = particle.next;\r\n            particle.destroy();\r\n        }\r\n        this._poolFirst = this._parent = this.particleImages = this.spawnPos = this.ownerPos =\r\n            this.startColor = this.startScale = this.startAlpha = this.startSpeed =\r\n                this.customEase = this._completeCallback = null;\r\n    };\r\n    return Emitter;\r\n}());\r\nexports.default = Emitter;\r\n\n\n\n// WEBPACK FOOTER //\n// ts-dist/Emitter.js","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ParticleUtils_1 = require(\"./ParticleUtils\");\r\nvar PropertyList_1 = require(\"./PropertyList\");\r\nvar Sprite = PIXI.Sprite;\r\n/**\r\n * An individual particle image. You shouldn't have to deal with these.\r\n * @memberof PIXI.particles\r\n * @class Particle\r\n * @extends PIXI.Sprite\r\n * @constructor\r\n * @param {PIXI.particles.Emitter} emitter The emitter that controls this particle.\r\n */\r\nvar Particle = /** @class */ (function (_super) {\r\n    __extends(Particle, _super);\r\n    function Particle(emitter) {\r\n        var _this = \r\n        //start off the sprite with a blank texture, since we are going to replace it\r\n        //later when the particle is initialized.\r\n        _super.call(this) || this;\r\n        _this.emitter = emitter;\r\n        //particles should be centered\r\n        _this.anchor.x = _this.anchor.y = 0.5;\r\n        _this.velocity = new PIXI.Point();\r\n        _this.maxLife = 0;\r\n        _this.age = 0;\r\n        _this.ease = null;\r\n        _this.extraData = null;\r\n        _this.alphaList = new PropertyList_1.default();\r\n        _this.speedList = new PropertyList_1.default();\r\n        _this.speedMultiplier = 1;\r\n        /**\r\n         * Acceleration to apply to the particle.\r\n         * @property {PIXI.Point} accleration\r\n         */\r\n        _this.acceleration = new PIXI.Point();\r\n        /**\r\n         * The maximum speed allowed for accelerating particles. Negative values, values of 0 or NaN\r\n         * will disable the maximum speed.\r\n         * @property {Number} maxSpeed\r\n         * @default NaN\r\n         */\r\n        _this.maxSpeed = NaN;\r\n        /**\r\n         * The scale of the particle throughout its life.\r\n         * @property {PIXI.particles.PropertyList} scaleList\r\n         */\r\n        _this.scaleList = new PropertyList_1.default();\r\n        /**\r\n         * A multiplier from 0-1 applied to the scale of the particle at all times.\r\n         * @property {number} scaleMultiplier\r\n         */\r\n        _this.scaleMultiplier = 1;\r\n        /**\r\n         * The tint of the particle throughout its life.\r\n         * @property {PIXI.particles.PropertyList} colorList\r\n         */\r\n        _this.colorList = new PropertyList_1.default(true);\r\n        /**\r\n         * If alpha should be interpolated at all.\r\n         * @property {Boolean} _doAlpha\r\n         * @private\r\n         */\r\n        _this._doAlpha = false;\r\n        /**\r\n         * If scale should be interpolated at all.\r\n         * @property {Boolean} _doScale\r\n         * @private\r\n         */\r\n        _this._doScale = false;\r\n        /**\r\n         * If speed should be interpolated at all.\r\n         * @property {Boolean} _doSpeed\r\n         * @private\r\n         */\r\n        _this._doSpeed = false;\r\n        /**\r\n         * If acceleration should be handled at all. _doSpeed is mutually exclusive with this,\r\n         * and _doSpeed gets priority.\r\n         * @property {Boolean} _doAcceleration\r\n         * @private\r\n         */\r\n        _this._doAcceleration = false;\r\n        /**\r\n         * If color should be interpolated at all.\r\n         * @property {Boolean} _doColor\r\n         * @private\r\n         */\r\n        _this._doColor = false;\r\n        /**\r\n         * If normal movement should be handled. Subclasses wishing to override movement\r\n         * can set this to false in init().\r\n         * @property {Boolean} _doNormalMovement\r\n         * @private\r\n         */\r\n        _this._doNormalMovement = false;\r\n        /**\r\n         * One divided by the max life of the particle, saved for slightly faster math.\r\n         * @property {Number} _oneOverLife\r\n         * @private\r\n         */\r\n        _this._oneOverLife = 0;\r\n        /**\r\n         * Reference to the next particle in the list.\r\n         * @property {Particle} next\r\n         * @private\r\n         */\r\n        _this.next = null;\r\n        /**\r\n         * Reference to the previous particle in the list.\r\n         * @property {Particle} prev\r\n         * @private\r\n         */\r\n        _this.prev = null;\r\n        //save often used functions on the instance instead of the prototype for better speed\r\n        _this.init = _this.init;\r\n        _this.Particle_init = Particle.prototype.init;\r\n        _this.update = _this.update;\r\n        _this.Particle_update = Particle.prototype.update;\r\n        _this.Sprite_destroy = _super.prototype.destroy;\r\n        _this.Particle_destroy = Particle.prototype.destroy;\r\n        _this.applyArt = _this.applyArt;\r\n        _this.kill = _this.kill;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Initializes the particle for use, based on the properties that have to\r\n     * have been set already on the particle.\r\n     * @method PIXI.particles.Particle#init\r\n     */\r\n    Particle.prototype.init = function () {\r\n        //reset the age\r\n        this.age = 0;\r\n        //set up the velocity based on the start speed and rotation\r\n        this.velocity.x = this.speedList.current.value * this.speedMultiplier;\r\n        this.velocity.y = 0;\r\n        ParticleUtils_1.default.rotatePoint(this.rotation, this.velocity);\r\n        if (this.noRotation) {\r\n            this.rotation = 0;\r\n        }\r\n        else {\r\n            //convert rotation to Radians from Degrees\r\n            this.rotation *= ParticleUtils_1.default.DEG_TO_RADS;\r\n        }\r\n        //convert rotation speed to Radians from Degrees\r\n        this.rotationSpeed *= ParticleUtils_1.default.DEG_TO_RADS;\r\n        //set alpha to inital alpha\r\n        this.alpha = this.alphaList.current.value;\r\n        //set scale to initial scale\r\n        this.scale.x = this.scale.y = this.scaleList.current.value;\r\n        //figure out what we need to interpolate\r\n        this._doAlpha = !!this.alphaList.current.next;\r\n        this._doSpeed = !!this.speedList.current.next;\r\n        this._doScale = !!this.scaleList.current.next;\r\n        this._doColor = !!this.colorList.current.next;\r\n        this._doAcceleration = this.acceleration.x !== 0 || this.acceleration.y !== 0;\r\n        //_doNormalMovement can be cancelled by subclasses\r\n        this._doNormalMovement = this._doSpeed || this.speedList.current.value !== 0 || this._doAcceleration;\r\n        //save our lerp helper\r\n        this._oneOverLife = 1 / this.maxLife;\r\n        //set the inital color\r\n        var color = this.colorList.current.value;\r\n        this.tint = ParticleUtils_1.default.combineRGBComponents(color.r, color.g, color.b);\r\n        //ensure visibility\r\n        this.visible = true;\r\n    };\r\n    /**\r\n     * Sets the texture for the particle. This can be overridden to allow\r\n     * for an animated particle.\r\n     * @method PIXI.particles.Particle#applyArt\r\n     * @param {PIXI.Texture} art The texture to set.\r\n     */\r\n    Particle.prototype.applyArt = function (art) {\r\n        this.texture = art || PIXI.Texture.EMPTY;\r\n    };\r\n    /**\r\n     * Updates the particle.\r\n     * @method PIXI.particles.Particle#update\r\n     * @param {Number} delta Time elapsed since the previous frame, in __seconds__.\r\n     * @return {Number} The standard interpolation multiplier (0-1) used for all relevant particle\r\n     *                   properties. A value of -1 means the particle died of old age instead.\r\n     */\r\n    Particle.prototype.update = function (delta) {\r\n        //increase age\r\n        this.age += delta;\r\n        //recycle particle if it is too old\r\n        if (this.age >= this.maxLife) {\r\n            this.kill();\r\n            return -1;\r\n        }\r\n        //determine our interpolation value\r\n        var lerp = this.age * this._oneOverLife; //lifetime / maxLife;\r\n        if (this.ease) {\r\n            if (this.ease.length == 4) {\r\n                //the t, b, c, d parameters that some tween libraries use\r\n                //(time, initial value, end value, duration)\r\n                lerp = this.ease(lerp, 0, 1, 1);\r\n            }\r\n            else {\r\n                //the simplified version that we like that takes\r\n                //one parameter, time from 0-1. TweenJS eases provide this usage.\r\n                lerp = this.ease(lerp);\r\n            }\r\n        }\r\n        //interpolate alpha\r\n        if (this._doAlpha)\r\n            this.alpha = this.alphaList.interpolate(lerp);\r\n        //interpolate scale\r\n        if (this._doScale) {\r\n            var scale = this.scaleList.interpolate(lerp) * this.scaleMultiplier;\r\n            this.scale.x = this.scale.y = scale;\r\n        }\r\n        //handle movement\r\n        if (this._doNormalMovement) {\r\n            //interpolate speed\r\n            if (this._doSpeed) {\r\n                var speed = this.speedList.interpolate(lerp) * this.speedMultiplier;\r\n                ParticleUtils_1.default.normalize(this.velocity);\r\n                ParticleUtils_1.default.scaleBy(this.velocity, speed);\r\n            }\r\n            else if (this._doAcceleration) {\r\n                this.velocity.x += this.acceleration.x * delta;\r\n                this.velocity.y += this.acceleration.y * delta;\r\n                if (this.maxSpeed) {\r\n                    var currentSpeed = ParticleUtils_1.default.length(this.velocity);\r\n                    //if we are going faster than we should, clamp at the max speed\r\n                    //DO NOT recalculate vector length\r\n                    if (currentSpeed > this.maxSpeed) {\r\n                        ParticleUtils_1.default.scaleBy(this.velocity, this.maxSpeed / currentSpeed);\r\n                    }\r\n                }\r\n            }\r\n            //adjust position based on velocity\r\n            this.position.x += this.velocity.x * delta;\r\n            this.position.y += this.velocity.y * delta;\r\n        }\r\n        //interpolate color\r\n        if (this._doColor) {\r\n            this.tint = this.colorList.interpolate(lerp);\r\n        }\r\n        //update rotation\r\n        if (this.rotationSpeed !== 0) {\r\n            this.rotation += this.rotationSpeed * delta;\r\n        }\r\n        else if (this.acceleration && !this.noRotation) {\r\n            this.rotation = Math.atan2(this.velocity.y, this.velocity.x); // + Math.PI / 2;\r\n        }\r\n        return lerp;\r\n    };\r\n    /**\r\n     * Kills the particle, removing it from the display list\r\n     * and telling the emitter to recycle it.\r\n     * @method PIXI.particles.Particle#kill\r\n     */\r\n    Particle.prototype.kill = function () {\r\n        this.emitter.recycle(this);\r\n    };\r\n    /**\r\n     * Destroys the particle, removing references and preventing future use.\r\n     * @method PIXI.particles.Particle#destroy\r\n     */\r\n    Particle.prototype.destroy = function () {\r\n        if (this.parent)\r\n            this.parent.removeChild(this);\r\n        this.Sprite_destroy();\r\n        this.emitter = this.velocity = this.colorList = this.scaleList = this.alphaList =\r\n            this.speedList = this.ease = this.next = this.prev = null;\r\n    };\r\n    /**\r\n     * Checks over the art that was passed to the Emitter's init() function, to do any special\r\n     * modifications to prepare it ahead of time.\r\n     * @method PIXI.particles.Particle.parseArt\r\n     * @static\r\n     * @param  {Array} art The array of art data. For Particle, it should be an array of Textures.\r\n     *                     Any strings in the array will be converted to Textures via\r\n     *                     Texture.fromImage().\r\n     * @return {Array} The art, after any needed modifications.\r\n     */\r\n    Particle.parseArt = function (art) {\r\n        //convert any strings to Textures.\r\n        var i;\r\n        for (i = art.length; i >= 0; --i) {\r\n            if (typeof art[i] == \"string\")\r\n                art[i] = PIXI.Texture.fromImage(art[i]);\r\n        }\r\n        //particles from different base textures will be slower in WebGL than if they\r\n        //were from one spritesheet\r\n        if (ParticleUtils_1.default.verbose) {\r\n            for (i = art.length - 1; i > 0; --i) {\r\n                if (art[i].baseTexture != art[i - 1].baseTexture) {\r\n                    if (window.console)\r\n                        console.warn(\"PixiParticles: using particle textures from different images may hinder performance in WebGL\");\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return art;\r\n    };\r\n    /**\r\n     * Parses extra emitter data to ensure it is set up for this particle class.\r\n     * Particle does nothing to the extra data.\r\n     * @method PIXI.particles.Particle.parseData\r\n     * @static\r\n     * @param  {Object} extraData The extra data from the particle config.\r\n     * @return {Object} The parsed extra data.\r\n     */\r\n    Particle.parseData = function (extraData) {\r\n        return extraData;\r\n    };\r\n    return Particle;\r\n}(Sprite));\r\nexports.default = Particle;\r\n\n\n\n// WEBPACK FOOTER //\n// ts-dist/Particle.js","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BLEND_MODES = PIXI.BLEND_MODES;\r\nvar PropertyNode_1 = require(\"./PropertyNode\");\r\n/**\r\n * Contains helper functions for particles and emitters to use.\r\n * @memberof PIXI.particles\r\n * @class ParticleUtils\r\n * @static\r\n */\r\nvar ParticleUtils = {\r\n    /**\r\n     * If errors and warnings should be logged within the library.\r\n     * @name PIXI.particles.ParticleUtils.verbose\r\n     * @default false\r\n     * @static\r\n     */\r\n    verbose: false,\r\n    DEG_TO_RADS: Math.PI / 180,\r\n    /**\r\n     * Rotates a point by a given angle.\r\n     * @method PIXI.particles.ParticleUtils.rotatePoint\r\n     * @param {Number} angle The angle to rotate by in degrees\r\n     * @param {PIXI.Point} p The point to rotate around 0,0.\r\n     * @static\r\n     */\r\n    rotatePoint: function (angle, p) {\r\n        if (!angle)\r\n            return;\r\n        angle *= ParticleUtils.DEG_TO_RADS;\r\n        var s = Math.sin(angle);\r\n        var c = Math.cos(angle);\r\n        var xnew = p.x * c - p.y * s;\r\n        var ynew = p.x * s + p.y * c;\r\n        p.x = xnew;\r\n        p.y = ynew;\r\n    },\r\n    /**\r\n     * Combines separate color components (0-255) into a single uint color.\r\n     * @method PIXI.particles.ParticleUtils.combineRGBComponents\r\n     * @param {uint} r The red value of the color\r\n     * @param {uint} g The green value of the color\r\n     * @param {uint} b The blue value of the color\r\n     * @return {uint} The color in the form of 0xRRGGBB\r\n     * @static\r\n     */\r\n    combineRGBComponents: function (r, g, b /*, a*/) {\r\n        return /*a << 24 |*/ r << 16 | g << 8 | b;\r\n    },\r\n    /**\r\n     * Reduces the point to a length of 1.\r\n     * @method PIXI.particles.ParticleUtils.normalize\r\n     * @static\r\n     * @param {PIXI.Point} point The point to normalize\r\n     */\r\n    normalize: function (point) {\r\n        var oneOverLen = 1 / ParticleUtils.length(point);\r\n        point.x *= oneOverLen;\r\n        point.y *= oneOverLen;\r\n    },\r\n    /**\r\n     * Multiplies the x and y values of this point by a value.\r\n     * @method PIXI.particles.ParticleUtils.scaleBy\r\n     * @static\r\n     * @param {PIXI.Point} point The point to scaleBy\r\n     * @param {number} value The value to scale by.\r\n     */\r\n    scaleBy: function (point, value) {\r\n        point.x *= value;\r\n        point.y *= value;\r\n    },\r\n    /**\r\n     * Returns the length (or magnitude) of this point.\r\n     * @method PIXI.particles.ParticleUtils.length\r\n     * @static\r\n     * @param {PIXI.Point} point The point to measure length\r\n     * @return The length of this point.\r\n     */\r\n    length: function (point) {\r\n        return Math.sqrt(point.x * point.x + point.y * point.y);\r\n    },\r\n    /**\r\n     * Converts a hex string from \"#AARRGGBB\", \"#RRGGBB\", \"0xAARRGGBB\", \"0xRRGGBB\",\r\n     * \"AARRGGBB\", or \"RRGGBB\" to an object of ints of 0-255, as\r\n     * {r, g, b, (a)}.\r\n     * @method PIXI.particles.ParticleUtils.hexToRGB\r\n     * @param {string} color The input color string.\r\n     * @param {Object} [output] An object to put the output in. If omitted, a new object is created.\r\n     * @return The object with r, g, and b properties, possibly with an a property.\r\n     * @static\r\n     */\r\n    hexToRGB: function (color, output) {\r\n        if (!output)\r\n            output = {};\r\n        if (color.charAt(0) == \"#\")\r\n            color = color.substr(1);\r\n        else if (color.indexOf(\"0x\") === 0)\r\n            color = color.substr(2);\r\n        var alpha;\r\n        if (color.length == 8) {\r\n            alpha = color.substr(0, 2);\r\n            color = color.substr(2);\r\n        }\r\n        output.r = parseInt(color.substr(0, 2), 16); //Red\r\n        output.g = parseInt(color.substr(2, 2), 16); //Green\r\n        output.b = parseInt(color.substr(4, 2), 16); //Blue\r\n        if (alpha)\r\n            output.a = parseInt(alpha, 16);\r\n        return output;\r\n    },\r\n    /**\r\n     * Generates a custom ease function, based on the GreenSock custom ease, as demonstrated\r\n     * by the related tool at http://www.greensock.com/customease/.\r\n     * @method PIXI.particles.ParticleUtils.generateEase\r\n     * @param {Array} segments An array of segments, as created by\r\n     * http://www.greensock.com/customease/.\r\n     * @return {Function} A function that calculates the percentage of change at\r\n     *                    a given point in time (0-1 inclusive).\r\n     * @static\r\n     */\r\n    generateEase: function (segments) {\r\n        var qty = segments.length;\r\n        var oneOverQty = 1 / qty;\r\n        /*\r\n         * Calculates the percentage of change at a given point in time (0-1 inclusive).\r\n         * @param {Number} time The time of the ease, 0-1 inclusive.\r\n         * @return {Number} The percentage of the change, 0-1 inclusive (unless your\r\n         *                  ease goes outside those bounds).\r\n         */\r\n        return function (time) {\r\n            var t, s;\r\n            var i = (qty * time) | 0; //do a quick floor operation\r\n            t = (time - (i * oneOverQty)) * qty;\r\n            s = segments[i] || segments[qty - 1];\r\n            return (s.s + t * (2 * (1 - t) * (s.cp - s.s) + t * (s.e - s.s)));\r\n        };\r\n    },\r\n    /**\r\n     * Gets a blend mode, ensuring that it is valid.\r\n     * @method PIXI.particles.ParticleUtils.getBlendMode\r\n     * @param {string} name The name of the blend mode to get.\r\n     * @return {int} The blend mode as specified in the PIXI.BLEND_MODES enumeration.\r\n     * @static\r\n     */\r\n    getBlendMode: function (name) {\r\n        if (!name)\r\n            return BLEND_MODES.NORMAL;\r\n        name = name.toUpperCase();\r\n        while (name.indexOf(\" \") >= 0)\r\n            name = name.replace(\" \", \"_\");\r\n        return BLEND_MODES[name] || BLEND_MODES.NORMAL;\r\n    },\r\n    /**\r\n     * Converts a list of {value, time} objects starting at time 0 and ending at time 1 into an evenly\r\n     * spaced stepped list of PropertyNodes for color values. This is primarily to handle conversion of\r\n     * linear gradients to fewer colors, allowing for some optimization for Canvas2d fallbacks.\r\n     * @method PIXI.particles.ParticleUtils.createSteppedGradient\r\n     * @param {Array} list The list of data to convert.\r\n     * @param {number} [numSteps=10] The number of steps to use.\r\n     * @return {PIXI.particles.PropertyNode} The blend mode as specified in the PIXI.blendModes enumeration.\r\n     * @static\r\n     */\r\n    createSteppedGradient: function (list, numSteps) {\r\n        if (numSteps === void 0) { numSteps = 10; }\r\n        if (typeof numSteps !== 'number' || numSteps <= 0)\r\n            numSteps = 10;\r\n        var first = new PropertyNode_1.default(list[0].value, list[0].time);\r\n        first.isStepped = true;\r\n        var currentNode = first;\r\n        var current = list[0];\r\n        var nextIndex = 1;\r\n        var next = list[nextIndex];\r\n        for (var i = 1; i < numSteps; ++i) {\r\n            var lerp = i / numSteps;\r\n            //ensure we are on the right segment, if multiple\r\n            while (lerp > next.time) {\r\n                current = next;\r\n                next = list[++nextIndex];\r\n            }\r\n            //convert the lerp value to the segment range\r\n            lerp = (lerp - current.time) / (next.time - current.time);\r\n            var curVal = ParticleUtils.hexToRGB(current.value);\r\n            var nextVal = ParticleUtils.hexToRGB(next.value);\r\n            var output = {};\r\n            output.r = (nextVal.r - curVal.r) * lerp + curVal.r;\r\n            output.g = (nextVal.g - curVal.g) * lerp + curVal.g;\r\n            output.b = (nextVal.b - curVal.b) * lerp + curVal.b;\r\n            currentNode.next = new PropertyNode_1.default(output, i / numSteps);\r\n            currentNode = currentNode.next;\r\n        }\r\n        //we don't need to have a PropertyNode for time of 1, because in a stepped version at that point\r\n        //the particle has died of old age\r\n        return first;\r\n    }\r\n};\r\nexports.default = ParticleUtils;\r\n\n\n\n// WEBPACK FOOTER //\n// ts-dist/ParticleUtils.js","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ParticleUtils_1 = require(\"./ParticleUtils\");\r\nvar Particle_1 = require(\"./Particle\");\r\n/**\r\n * A helper point for math things.\r\n * @private\r\n */\r\nvar helperPoint = new PIXI.Point();\r\n//a hand picked list of Math functions (and a couple properties) that are allowable.\r\n//they should be used without the preceding \"Math.\"\r\nvar MATH_FUNCS = [\r\n    \"pow\",\r\n    \"sqrt\",\r\n    \"abs\",\r\n    \"floor\",\r\n    \"round\",\r\n    \"ceil\",\r\n    \"E\",\r\n    \"PI\",\r\n    \"sin\",\r\n    \"cos\",\r\n    \"tan\",\r\n    \"asin\",\r\n    \"acos\",\r\n    \"atan\",\r\n    \"atan2\",\r\n    \"log\"\r\n];\r\n//create an actual regular expression object from the string\r\nvar WHITELISTER = new RegExp([\r\n    //Allow the 4 basic operations, parentheses and all numbers/decimals, as well\r\n    //as 'x', for the variable usage.\r\n    \"[01234567890\\\\.\\\\*\\\\-\\\\+\\\\/\\\\(\\\\)x ,]\",\r\n].concat(MATH_FUNCS).join(\"|\"), \"g\");\r\n/**\r\n * Parses a string into a function for path following.\r\n * This involves whitelisting the string for safety, inserting \"Math.\" to math function\r\n * names, and using `new Function()` to generate a function.\r\n * @method PIXI.particles.PathParticle~parsePath\r\n * @private\r\n * @static\r\n * @param {String} pathString The string to parse.\r\n * @return {Function} The path function - takes x, outputs y.\r\n */\r\nvar parsePath = function (pathString) {\r\n    var matches = pathString.match(WHITELISTER);\r\n    for (var i = matches.length - 1; i >= 0; --i) {\r\n        if (MATH_FUNCS.indexOf(matches[i]) >= 0)\r\n            matches[i] = \"Math.\" + matches[i];\r\n    }\r\n    pathString = matches.join(\"\");\r\n    return new Function(\"x\", \"return \" + pathString + \";\");\r\n};\r\n/**\r\n * An particle that follows a path defined by an algebraic expression, e.g. \"sin(x)\" or\r\n * \"5x + 3\".\r\n * To use this class, the particle config must have a \"path\" string in the\r\n * \"extraData\" parameter. This string should have \"x\" in it to represent movement (from the\r\n * speed settings of the particle). It may have numbers, parentheses, the four basic\r\n * operations, and the following Math functions or properties (without the preceding \"Math.\"):\r\n * \"pow\", \"sqrt\", \"abs\", \"floor\", \"round\", \"ceil\", \"E\", \"PI\", \"sin\", \"cos\", \"tan\", \"asin\",\r\n * \"acos\", \"atan\", \"atan2\", \"log\".\r\n * The overall movement of the particle and the expression value become x and y positions for\r\n * the particle, respectively. The final position is rotated by the spawn rotation/angle of\r\n * the particle.\r\n *\r\n * Some example paths:\r\n *\r\n * \t\"sin(x/10) * 20\" // A sine wave path.\r\n * \t\"cos(x/100) * 30\" // Particles curve counterclockwise (for medium speed/low lifetime particles)\r\n * \t\"pow(x/10, 2) / 2\" // Particles curve clockwise (remember, +y is down).\r\n *\r\n * @memberof PIXI.particles\r\n * @class PathParticle\r\n * @extends PIXI.particles.Particle\r\n * @constructor\r\n * @param {PIXI.particles.Emitter} emitter The emitter that controls this PathParticle.\r\n */\r\nvar PathParticle = /** @class */ (function (_super) {\r\n    __extends(PathParticle, _super);\r\n    function PathParticle(emitter) {\r\n        var _this = _super.call(this, emitter) || this;\r\n        _this.path = null;\r\n        _this.initialRotation = 0;\r\n        _this.initialPosition = new PIXI.Point();\r\n        _this.movement = 0;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Initializes the particle for use, based on the properties that have to\r\n     * have been set already on the particle.\r\n     * @method PIXI.particles.PathParticle#init\r\n     */\r\n    PathParticle.prototype.init = function () {\r\n        //get initial rotation before it is converted to radians\r\n        this.initialRotation = this.rotation;\r\n        //standard init\r\n        this.Particle_init();\r\n        //set the path for the particle\r\n        this.path = this.extraData.path;\r\n        //cancel the normal movement behavior\r\n        this._doNormalMovement = !this.path;\r\n        //reset movement\r\n        this.movement = 0;\r\n        //grab position\r\n        this.initialPosition.x = this.position.x;\r\n        this.initialPosition.y = this.position.y;\r\n    };\r\n    /**\r\n     * Updates the particle.\r\n     * @method PIXI.particles.PathParticle#update\r\n     * @param {Number} delta Time elapsed since the previous frame, in __seconds__.\r\n     */\r\n    PathParticle.prototype.update = function (delta) {\r\n        var lerp = this.Particle_update(delta);\r\n        //if the particle died during the update, then don't bother\r\n        if (lerp >= 0 && this.path) {\r\n            //increase linear movement based on speed\r\n            var speed = this.speedList.interpolate(lerp) * this.speedMultiplier;\r\n            this.movement += speed * delta;\r\n            //set up the helper point for rotation\r\n            helperPoint.x = this.movement;\r\n            helperPoint.y = this.path(this.movement);\r\n            ParticleUtils_1.default.rotatePoint(this.initialRotation, helperPoint);\r\n            this.position.x = this.initialPosition.x + helperPoint.x;\r\n            this.position.y = this.initialPosition.y + helperPoint.y;\r\n        }\r\n        return lerp;\r\n    };\r\n    /**\r\n     * Destroys the particle, removing references and preventing future use.\r\n     * @method PIXI.particles.PathParticle#destroy\r\n     */\r\n    PathParticle.prototype.destroy = function () {\r\n        this.Particle_destroy();\r\n        this.path = this.initialPosition = null;\r\n    };\r\n    /**\r\n     * Checks over the art that was passed to the Emitter's init() function, to do any special\r\n     * modifications to prepare it ahead of time. This just runs Particle.parseArt().\r\n     * @method PIXI.particles.PathParticle.parseArt\r\n     * @static\r\n     * @param  {Array} art The array of art data. For Particle, it should be an array of Textures.\r\n     *                     Any strings in the array will be converted to Textures via\r\n     *                     Texture.fromImage().\r\n     * @return {Array} The art, after any needed modifications.\r\n     */\r\n    PathParticle.parseArt = function (art) {\r\n        return Particle_1.default.parseArt(art);\r\n    };\r\n    /**\r\n     * Parses extra emitter data to ensure it is set up for this particle class.\r\n     * PathParticle checks for the existence of path data, and parses the path data for use\r\n     * by particle instances.\r\n     * @method PIXI.particles.PathParticle.parseData\r\n     * @static\r\n     * @param  {Object} extraData The extra data from the particle config.\r\n     * @return {Object} The parsed extra data.\r\n     */\r\n    PathParticle.parseData = function (extraData) {\r\n        var output = {};\r\n        if (extraData && extraData.path) {\r\n            try {\r\n                output.path = parsePath(extraData.path);\r\n            }\r\n            catch (e) {\r\n                if (ParticleUtils_1.default.verbose)\r\n                    console.error(\"PathParticle: error in parsing path expression\");\r\n                output.path = null;\r\n            }\r\n        }\r\n        else {\r\n            if (ParticleUtils_1.default.verbose)\r\n                console.error(\"PathParticle requires a path string in extraData!\");\r\n            output.path = null;\r\n        }\r\n        return output;\r\n    };\r\n    return PathParticle;\r\n}(Particle_1.default));\r\nexports.default = PathParticle;\r\n\n\n\n// WEBPACK FOOTER //\n// ts-dist/PathParticle.js","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ParticleUtils_1 = require(\"./ParticleUtils\");\r\n/**\r\n * Singly linked list container for keeping track of interpolated properties for particles.\r\n * Each Particle will have one of these for each interpolated property.\r\n * @memberof PIXI.particles\r\n * @class PropertyList\r\n * @constructor\r\n * @param {boolean} isColor If this list handles color values\r\n */\r\nvar PropertyList = /** @class */ (function () {\r\n    function PropertyList(isColor) {\r\n        if (isColor === void 0) { isColor = false; }\r\n        this.current = null;\r\n        this.next = null;\r\n        this.isColor = !!isColor;\r\n        this.interpolate = null;\r\n        this.ease = null;\r\n    }\r\n    /**\r\n     * Resets the list for use.\r\n     * @method interpolate\r\n     * @param {PIXI.particles.PropertyNode} first The first node in the list.\r\n     * @param {boolean} [isStepped=false] If the values should be stepped instead of interpolated linearly.\r\n     */\r\n    PropertyList.prototype.reset = function (first) {\r\n        this.current = first;\r\n        this.next = first.next;\r\n        var isSimple = this.next && this.next.time >= 1;\r\n        if (isSimple) {\r\n            this.interpolate = this.isColor ? intColorSimple : intValueSimple;\r\n        }\r\n        else if (first.isStepped) {\r\n            this.interpolate = this.isColor ? intColorStepped : intValueStepped;\r\n        }\r\n        else {\r\n            this.interpolate = this.isColor ? intColorComplex : intValueComplex;\r\n        }\r\n        this.ease = this.current.ease;\r\n    };\r\n    return PropertyList;\r\n}());\r\nexports.default = PropertyList;\r\nfunction intValueSimple(lerp) {\r\n    if (this.ease)\r\n        lerp = this.ease(lerp);\r\n    return (this.next.value - this.current.value) * lerp + this.current.value;\r\n}\r\nfunction intColorSimple(lerp) {\r\n    if (this.ease)\r\n        lerp = this.ease(lerp);\r\n    var curVal = this.current.value, nextVal = this.next.value;\r\n    var r = (nextVal.r - curVal.r) * lerp + curVal.r;\r\n    var g = (nextVal.g - curVal.g) * lerp + curVal.g;\r\n    var b = (nextVal.b - curVal.b) * lerp + curVal.b;\r\n    return ParticleUtils_1.default.combineRGBComponents(r, g, b);\r\n}\r\nfunction intValueComplex(lerp) {\r\n    if (this.ease)\r\n        lerp = this.ease(lerp);\r\n    //make sure we are on the right segment\r\n    while (lerp > this.next.time) {\r\n        this.current = this.next;\r\n        this.next = this.next.next;\r\n    }\r\n    //convert the lerp value to the segment range\r\n    lerp = (lerp - this.current.time) / (this.next.time - this.current.time);\r\n    return (this.next.value - this.current.value) * lerp + this.current.value;\r\n}\r\nfunction intColorComplex(lerp) {\r\n    if (this.ease)\r\n        lerp = this.ease(lerp);\r\n    //make sure we are on the right segment\r\n    while (lerp > this.next.time) {\r\n        this.current = this.next;\r\n        this.next = this.next.next;\r\n    }\r\n    //convert the lerp value to the segment range\r\n    lerp = (lerp - this.current.time) / (this.next.time - this.current.time);\r\n    var curVal = this.current.value, nextVal = this.next.value;\r\n    var r = (nextVal.r - curVal.r) * lerp + curVal.r;\r\n    var g = (nextVal.g - curVal.g) * lerp + curVal.g;\r\n    var b = (nextVal.b - curVal.b) * lerp + curVal.b;\r\n    return ParticleUtils_1.default.combineRGBComponents(r, g, b);\r\n}\r\nfunction intValueStepped(lerp) {\r\n    if (this.ease)\r\n        lerp = this.ease(lerp);\r\n    //make sure we are on the right segment\r\n    while (this.next && lerp > this.next.time) {\r\n        this.current = this.next;\r\n        this.next = this.next.next;\r\n    }\r\n    return this.current.value;\r\n}\r\nfunction intColorStepped(lerp) {\r\n    if (this.ease)\r\n        lerp = this.ease(lerp);\r\n    //make sure we are on the right segment\r\n    while (this.next && lerp > this.next.time) {\r\n        this.current = this.next;\r\n        this.next = this.next.next;\r\n    }\r\n    var curVal = this.current.value;\r\n    return ParticleUtils_1.default.combineRGBComponents(curVal.r, curVal.g, curVal.b);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ts-dist/PropertyList.js","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ParticleUtils_1 = require(\"./ParticleUtils\");\r\n/**\r\n * A single node in a PropertyList.\r\n * @memberof PIXI.particles\r\n * @class PropertyNode\r\n * @constructor\r\n * @param {number|string} value The value for this node\r\n * @param {number} time The time for this node, between 0-1\r\n * @param {Function|Array} [ease] Custom ease for this list. Only relevant for the first node.\r\n */\r\nvar PropertyNode = /** @class */ (function () {\r\n    function PropertyNode(value, time, ease) {\r\n        this.value = typeof value == \"string\" ? ParticleUtils_1.default.hexToRGB(value) : value;\r\n        this.time = time;\r\n        this.next = null;\r\n        this.isStepped = false;\r\n        if (ease) {\r\n            this.ease = typeof ease == \"function\" ? ease : ParticleUtils_1.default.generateEase(ease);\r\n        }\r\n        else {\r\n            this.ease = null;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a list of property values from a data object {list, isStepped} with a list of objects in\r\n     * the form {value, time}. Alternatively, the data object can be in the deprecated form of\r\n     * {start, end}.\r\n     * @method PIXI.particles.PropertyNode.createListFromArray\r\n     * @static\r\n     * @param  {Object} data The data for the list.\r\n     * @param  {Array} data.list The array of value and time objects.\r\n     * @param  {boolean} [data.isStepped] If the list is stepped rather than interpolated.\r\n     * @param  {Function|Array} [data.ease] Custom ease for this list.\r\n     * @return {PIXI.particles.PropertyNode} The first node in the list\r\n     */\r\n    PropertyNode.createList = function (data) {\r\n        if (Array.isArray(data.list)) {\r\n            var array = data.list;\r\n            var node = void 0, first = void 0;\r\n            first = node = new PropertyNode(array[0].value, array[0].time, data.ease);\r\n            //only set up subsequent nodes if there are a bunch or the 2nd one is different from the first\r\n            if (array.length > 2 || (array.length === 2 && array[1].value !== array[0].value)) {\r\n                for (var i = 1; i < array.length; ++i) {\r\n                    node.next = new PropertyNode(array[i].value, array[i].time);\r\n                    node = node.next;\r\n                }\r\n            }\r\n            first.isStepped = !!data.isStepped;\r\n            return first;\r\n        }\r\n        else {\r\n            //Handle deprecated version here\r\n            var start = new PropertyNode(data.start, 0);\r\n            //only set up a next value if it is different from the starting value\r\n            if (data.end !== data.start)\r\n                start.next = new PropertyNode(data.end, 1);\r\n            return start;\r\n        }\r\n    };\r\n    return PropertyNode;\r\n}());\r\nexports.default = PropertyNode;\r\n\n\n\n// WEBPACK FOOTER //\n// ts-dist/PropertyNode.js","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ParticleUtils_js_1 = require(\"./ParticleUtils.js\");\r\nexports.ParticleUtils = ParticleUtils_js_1.default;\r\nvar Particle_js_1 = require(\"./Particle.js\");\r\nexports.Particle = Particle_js_1.default;\r\nvar Emitter_js_1 = require(\"./Emitter.js\");\r\nexports.Emitter = Emitter_js_1.default;\r\nvar PathParticle_js_1 = require(\"./PathParticle.js\");\r\nexports.PathParticle = PathParticle_js_1.default;\r\nvar AnimatedParticle_js_1 = require(\"./AnimatedParticle.js\");\r\nexports.AnimatedParticle = AnimatedParticle_js_1.default;\r\n\n\n\n// WEBPACK FOOTER //\n// ts-dist/particles.js","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// If we're in the browser make sure PIXI is available\r\nif (typeof PIXI === 'undefined') {\r\n    throw \"pixi-particles requires pixi.js to be loaded first\";\r\n}\r\n//ensure that the particles namespace exist - PIXI 4 creates it itself, PIXI 3 does not\r\nif (!PIXI.particles) {\r\n    PIXI.particles = {};\r\n}\r\n// get the library itself\r\nvar particles = require(\"./particles\");\r\n// insert the library into the particles namespace on PIXI\r\nfor (var prop in particles) {\r\n    PIXI.particles[prop] = particles[prop];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ts-dist","import { Stage } from \"pixi-layers\";\n\n// import {TweenLite} from \"gsap\";\nimport {\n    Dom,\n    PixiAppWrapper as Wrapper,\n    pixiAppWrapperEvent as WrapperEvent,\n    PixiAppWrapperOptions as WrapperOpts,\n} from \"pixi-app-wrapper\";\n\nexport enum Side {left,right };\n\nconst stackDisplacement = 0.05;    \n\nfunction easeInOutQuad (t:number) { return t<.5 ? 2*t*t : -1+(4-2*t)*t }\n\nexport default function initializeCardStacks(app: Wrapper):Function {\n    let cardStacks :  {left:PIXI.Sprite[], right:PIXI.Sprite[]}= {left:[],right:[]};\n \n    \n    function getCardPos(side:Side) {\n        const x = ((side === Side.left) ? 100 : 300) ;\n        const y = 250;\n        const numInStack = (side === Side.left ? cardStacks.left : cardStacks.right).length;\n        const displacement = stackDisplacement * numInStack;\n        return {x: x+ displacement, y:y+displacement}\n    }\n\n    function moveFirstToRightStackAndGetNewPosition() {\n        const card= cardStacks.left.pop() ;\n        if (!card)\n            return undefined;\n        // const card =  topBunny;\n        const newLength = cardStacks.right.push(card);\n        const displacement = stackDisplacement * newLength;\n        card.zIndex = 144+newLength;\n\n        const {x,y} = getCardPos(Side.right);\n        return {card, x,y }\n    }\n\n    const container = new PIXI.Container();\n\n    // for performance separate moving from nonMoving objects\n    const movingContainer = new PIXI.Container();\n\n    // const layer = new PIXI.display.Layer();\n    // layer.group.enableSort = true;\n    // app.stage.addChild(layer);\n    // container.parentLayer = layer;\n\n    for (let i = 0; i < 144; i++) {\n        const card = new PIXI.Sprite(PIXI.loader.resources.card.texture);\n        \n        card.anchor.set(0.5);\n        card.scale.set(100.0 / card.width); \n        const {x,y} = getCardPos(Side.left);\n        card.x = x;\n        card.y = y;\n        card.zIndex = i;\n      \n        cardStacks.left.push(card);\n        container.addChild(card);\n    }\n    app.stage.addChild(container);\n    app.stage.addChild(movingContainer);\n\n    const interval = setInterval(() => {\n        const hasCardToMove = moveFirstToRightStackAndGetNewPosition();\n        if (hasCardToMove) {\n            const {card,x,y} = hasCardToMove;\n            container.cacheAsBitmap=false;\n            container.removeChild(card);\n            container.cacheAsBitmap=true;\n            movingContainer.addChild(card);\n            const startTime = Date.now();\n            const startX = card.position.x;\n            const startY = card.position.y;\n            const tweener = ():void => {\n                const time = Date.now();\n                const progress =  Math.min(1,(time-startTime)/2000);\n                if (progress >=1 ) {\n                    app.ticker.remove(tweener);\n                    movingContainer.removeChild(card);\n                    container.cacheAsBitmap=false;\n                    container.addChild(card);\n                    container.cacheAsBitmap=true;\n                }\n                const easedProgress = easeInOutQuad(progress);\n                card.position.set(startX+(x-startX)*easedProgress,startY+(y-startY)*easedProgress )\n\n            }           \n            app.ticker.add(tweener);\n            // TweenLite.to(card, 2, {x,y});\n        }\n    },1000)\n    return function removeCardStacks():void {\n        clearInterval(interval);\n        app.stage.removeChild(container);\n        container.destroy();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/app/cardStacks.ts","\n\nfunction createImageSprite(texture:PIXI.Texture, height:number) {\n    const sprite = new PIXI.Sprite(texture);\n    sprite.scale.set(height/sprite.height);\n    return sprite;\n }\n\n function getTextWithImage(textSource: (string | number)[], imageTextures: PIXI.Texture[], textStyle:{}) {\n    const DUMMYTEXTELEMENTHEIGHT = (new PIXI.Text(\"DUMMY\",textStyle)).height;\n    const textElements = textSource.map(txtOrImage => typeof txtOrImage === \"string\" ? new PIXI.Text(txtOrImage,textStyle) : createImageSprite(imageTextures[txtOrImage], DUMMYTEXTELEMENTHEIGHT) );\n    let lastX = 0;\n    const textWithImageContainer = new PIXI.Container();\n    for (let e of textElements) {\n        e.position.x = lastX;\n        lastX += e.width;\n        textWithImageContainer.addChild(e);\n    }\n    // textWithImageContainer.scale.set(0.2)\n    return textWithImageContainer;\n}\n\nexport default function initializeTextWithImages(multiTextureResource: string): {textRenderer: Function, numImages: number} {\n    let images = PIXI.loader.resources[multiTextureResource].textures;\n    let imageTextures:PIXI.Texture[] = null;\n    if (images) {  \n        imageTextures = Object.keys(<{}>images).map((textureName) => images[textureName])\n        console.log(imageTextures);     \n    }\n    return {\n        textRenderer: function renderTextWithImage(textSource: (string | number)[], textStyle:{}):PIXI.Container {\n            return getTextWithImage(textSource, imageTextures, textStyle);\n        },\n        numImages: Object.keys(images).length\n    }\n}\n\n\n\nconst randomStrings = \"Lorizzle ipsum bling bling sit amizzle, consectetuer adipiscing elit. Nizzle sapien velizzle, bling bling volutpat, suscipit, gravida vel, arcu. Check it out hizzle thats the shizzle. We gonna chung erizzle. Fo izzle dolor fo turpis tempizzle tempor. Gangsta boom shackalack mofo et turpizzle. Sizzle izzle tortor. Pellentesque uhuh ... yih!\".split(\" \")\n   \nfunction randomWord() {\n        return randomStrings[Math.floor(Math.random()*randomStrings.length)]\n    }\n    \n    function getRandomImageText(numImages:number): (string|number)[]{\n        const length = Math.ceil(Math.random()*10);\n        let text = Array.apply(null, Array<undefined>(length)).map(() => Math.random() < 0.7 ? randomWord()+\" \": Math.floor(Math.random() * numImages))\n        // console.log(text)\n        return text;\n    }\n\n    export function drawRandomTextWithImages(stage:PIXI.Container):Function{\n        const {textRenderer,numImages} = initializeTextWithImages(\"candies\");\n        console.log(stage)\n        const interval = setInterval(() => {\n            const t = textRenderer(getRandomImageText(numImages), {fill: \"white\", fontSize: Math.random()*20+6});\n            t.position.set(Math.random()*(500-t.width),Math.random()*(500-t.height))\n            stage.addChild(t);\n            setTimeout(() => stage.removeChild(t), Math.random()*5000);\n        }, 1000)\n\n        return function removeTextWithImage() {\n            clearInterval(interval);\n        }\n    }\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/app/textWithImages.ts","import {\n    Dom,\n    PixiAppWrapper as Wrapper,\n    pixiAppWrapperEvent as WrapperEvent,\n    PixiAppWrapperOptions as WrapperOpts,\n} from \"pixi-app-wrapper\";\n\n\nexport default function createParticleSystem(app: Wrapper):Function {\n    let particlesContainer = new PIXI.particles.ParticleContainer();\n    console.log(PIXI.loader.resources.flame.textures);\n    const textures = Object.keys(PIXI.loader.resources.flame.textures)\n        .map(textureName => PIXI.loader.resources.flame.textures[textureName])\n        // .map(origTexture => new PIXI.Texture( origTexture.baseTexture, origTexture.frame, undefined,undefined,6 )) ;\n  \n    console.log(textures);\n    let particlesEmitter = new PIXI.particles.Emitter(particlesContainer,[{textures, framerate: 10, loop:false}] , {\n        alpha: {\n            start: 0.5,\n            end: 0.1,\n        },\n        scale: {\n            start: 0.01,\n            end: 3,\n        },\n        // minimumScaleMultiplier: -1,\n        // color: {\n        //     start: \"ffffff\",\n        //     end: \"0000ff\",\n        // },\n        // speed: {\n        //     start: 0,\n        //     end: 0,\n        // },\n        // startRotation: {\n        //     min: 270,\n        //     max: 270,\n        // },  \n\n        lifetime: {\n            min: 0.8,\n            max: 0.96,\n        },\n        frequency: 0.1,\n        emitterLifetime: -1,\n        maxParticles: 10,\n        pos: {\n            x: 250,\n            y: 500,\n        },\n        addAtBack: false,\n        spawnType: \"rect\",\n        spawnRect : {\n            x: -250,\n            y: 0,   \n            w: 500,\n            h:0\n        },\n        emit: false,\n        autoUpdate: true,\n        particleConstructor: PIXI.particles.AnimatedParticle\n    });\n    particlesEmitter.particleConstructor = PIXI.particles.AnimatedParticle\n    particlesEmitter.emit=true;\n\n    particlesContainer.position.set(0)\n    // app.ticker.add(update);\n    app.stage.addChild(particlesContainer);  \n    return function removeParticles() {\n        app.stage.removeChild(particlesContainer);\n        particlesEmitter.emit=false;\n        particlesContainer.destroy();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/app/fireParticles.ts"],"sourceRoot":""}