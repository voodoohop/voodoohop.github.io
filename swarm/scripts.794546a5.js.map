{"mappings":"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","sources":["./Users/thomash/Documents/Code/swarm-animism-2/node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@parcel/runtime-js/lib/bundle-manifest.js","./node_modules/@parcel/runtime-js/lib/JSRuntime.js","./node_modules/@parcel/runtime-js/lib/bundle-url.js","./node_modules/@parcel/runtime-js/lib/relative-path.js","./node_modules/@firebase/app/dist/index.cjs.js","./node_modules/tslib/tslib.es6.js","./node_modules/@firebase/util/dist/index.cjs.js","./node_modules/@firebase/component/dist/index.cjs.js","./node_modules/@firebase/logger/dist/index.esm.js","./node_modules/firebase/app/dist/index.cjs.js","./node_modules/process/browser.js","./node_modules/@firebase/database/dist/index.cjs.js","./scripts/visuals/index.js","./scripts/audio/index.js","./node_modules/tone/build/esm/version.js","./node_modules/@babel/runtime/helpers/arrayWithHoles.js","./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","./node_modules/@babel/runtime/helpers/nonIterableRest.js","./node_modules/@babel/runtime/helpers/slicedToArray.js","./node_modules/@babel/runtime/helpers/classCallCheck.js","./node_modules/@babel/runtime/helpers/createClass.js","./node_modules/automation-events/build/es5/bundle.js","./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","./node_modules/standardized-audio-context/build/es2019/globals.js","./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","./node_modules/standardized-audio-context/build/es2019/constants.js","./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","./node_modules/standardized-audio-context/build/es2019/read-only-map.js","./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","./node_modules/standardized-audio-context/build/es2019/factories/get-backup-native-context.js","./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js","./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js","./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","./node_modules/standardized-audio-context/build/es2019/factories/native-audio-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-faker-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js","./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","./node_modules/standardized-audio-context/build/es2019/factories/window.js","./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js","./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","./node_modules/standardized-audio-context/build/es2019/module.js","./node_modules/tone/build/esm/core/util/Debug.js","./node_modules/tone/build/esm/core/util/TypeCheck.js","./node_modules/tone/build/esm/core/context/AudioContext.js","./node_modules/tone/build/esm/core/clock/Ticker.js","./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js","./node_modules/tone/build/esm/core/util/Defaults.js","./node_modules/tone/build/esm/core/Tone.js","./node_modules/tone/build/esm/core/util/Math.js","./node_modules/tone/build/esm/core/util/Timeline.js","./node_modules/tone/build/esm/core/context/ContextInitialization.js","./node_modules/tone/build/esm/core/util/Emitter.js","./node_modules/tone/build/esm/core/context/BaseContext.js","./node_modules/tone/build/esm/core/context/Context.js","./node_modules/tone/build/esm/core/context/DummyContext.js","./node_modules/tone/build/esm/core/util/Interface.js","./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js","./node_modules/tone/build/esm/core/context/OfflineContext.js","./node_modules/tone/build/esm/core/Global.js","./node_modules/tone/build/esm/core/type/Conversions.js","./node_modules/tone/build/esm/core/type/TimeBase.js","./node_modules/tone/build/esm/core/type/Time.js","./node_modules/tone/build/esm/core/type/Frequency.js","./node_modules/tone/build/esm/core/type/TransportTime.js","./node_modules/tone/build/esm/core/context/ToneWithContext.js","./node_modules/tone/build/esm/core/util/StateTimeline.js","./node_modules/tone/build/esm/core/context/Param.js","./node_modules/tone/build/esm/core/context/ToneAudioNode.js","./node_modules/tone/build/esm/core/context/Gain.js","./node_modules/tone/build/esm/source/OneShotSource.js","./node_modules/tone/build/esm/signal/ToneConstantSource.js","./node_modules/tone/build/esm/signal/Signal.js","./node_modules/tone/build/esm/core/clock/TickParam.js","./node_modules/tone/build/esm/core/clock/TickSignal.js","./node_modules/tone/build/esm/core/clock/TickSource.js","./node_modules/tone/build/esm/core/clock/Clock.js","./node_modules/tone/build/esm/core/util/TimelineValue.js","./node_modules/tone/build/esm/core/type/Ticks.js","./node_modules/tone/build/esm/core/util/IntervalTimeline.js","./node_modules/tone/build/esm/core/clock/TransportEvent.js","./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js","./node_modules/tone/build/esm/core/clock/Transport.js","./node_modules/tone/build/esm/core/context/Delay.js","./node_modules/tone/build/esm/component/channel/Volume.js","./node_modules/tone/build/esm/core/context/Destination.js","./node_modules/tone/build/esm/core/context/Offline.js","./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js","./node_modules/tone/build/esm/core/type/Midi.js","./node_modules/tone/build/esm/core/util/Draw.js","./node_modules/tone/build/esm/core/index.js","./node_modules/tone/build/esm/source/Source.js","./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js","./node_modules/tone/build/esm/source/Noise.js","./node_modules/tone/build/esm/source/UserMedia.js","./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js","./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js","./node_modules/tone/build/esm/source/oscillator/Oscillator.js","./node_modules/tone/build/esm/signal/SignalOperator.js","./node_modules/tone/build/esm/signal/WaveShaper.js","./node_modules/tone/build/esm/signal/AudioToGain.js","./node_modules/tone/build/esm/signal/Multiply.js","./node_modules/tone/build/esm/source/oscillator/AMOscillator.js","./node_modules/tone/build/esm/source/oscillator/FMOscillator.js","./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js","./node_modules/tone/build/esm/source/oscillator/FatOscillator.js","./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js","./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js","./node_modules/tone/build/esm/signal/Add.js","./node_modules/tone/build/esm/signal/Scale.js","./node_modules/tone/build/esm/signal/Zero.js","./node_modules/tone/build/esm/source/oscillator/LFO.js","./node_modules/tone/build/esm/core/util/Decorator.js","./node_modules/tone/build/esm/source/buffer/Player.js","./node_modules/tone/build/esm/source/buffer/Players.js","./node_modules/tone/build/esm/source/buffer/GrainPlayer.js","./node_modules/tone/build/esm/signal/Abs.js","./node_modules/tone/build/esm/signal/GainToAudio.js","./node_modules/tone/build/esm/signal/Negate.js","./node_modules/tone/build/esm/signal/Subtract.js","./node_modules/tone/build/esm/signal/GreaterThanZero.js","./node_modules/tone/build/esm/signal/GreaterThan.js","./node_modules/tone/build/esm/signal/Pow.js","./node_modules/tone/build/esm/signal/ScaleExp.js","./node_modules/tone/build/esm/signal/SyncedSignal.js","./node_modules/tone/build/esm/component/envelope/Envelope.js","./node_modules/tone/build/esm/instrument/Instrument.js","./node_modules/tone/build/esm/instrument/Monophonic.js","./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js","./node_modules/tone/build/esm/instrument/Synth.js","./node_modules/tone/build/esm/instrument/ModulationSynth.js","./node_modules/tone/build/esm/instrument/AMSynth.js","./node_modules/tone/build/esm/component/filter/BiquadFilter.js","./node_modules/tone/build/esm/component/filter/Filter.js","./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js","./node_modules/tone/build/esm/instrument/MonoSynth.js","./node_modules/tone/build/esm/instrument/DuoSynth.js","./node_modules/tone/build/esm/instrument/FMSynth.js","./node_modules/tone/build/esm/instrument/MetalSynth.js","./node_modules/tone/build/esm/instrument/MembraneSynth.js","./node_modules/tone/build/esm/instrument/NoiseSynth.js","./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js","./node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js","./node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js","./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js","./node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js","./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js","./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js","./node_modules/tone/build/esm/component/filter/OnePoleFilter.js","./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js","./node_modules/tone/build/esm/instrument/PluckSynth.js","./node_modules/tone/build/esm/instrument/PolySynth.js","./node_modules/tone/build/esm/instrument/Sampler.js","./node_modules/tone/build/esm/event/ToneEvent.js","./node_modules/tone/build/esm/event/Loop.js","./node_modules/tone/build/esm/event/Part.js","./node_modules/tone/build/esm/event/PatternGenerator.js","./node_modules/tone/build/esm/event/Pattern.js","./node_modules/tone/build/esm/event/Sequence.js","./node_modules/tone/build/esm/component/channel/CrossFade.js","./node_modules/tone/build/esm/effect/Effect.js","./node_modules/tone/build/esm/effect/LFOEffect.js","./node_modules/tone/build/esm/effect/AutoFilter.js","./node_modules/tone/build/esm/component/channel/Panner.js","./node_modules/tone/build/esm/effect/AutoPanner.js","./node_modules/tone/build/esm/component/analysis/Follower.js","./node_modules/tone/build/esm/effect/AutoWah.js","./node_modules/tone/build/esm/effect/BitCrusher.worklet.js","./node_modules/tone/build/esm/effect/BitCrusher.js","./node_modules/tone/build/esm/effect/Chebyshev.js","./node_modules/tone/build/esm/component/channel/Split.js","./node_modules/tone/build/esm/component/channel/Merge.js","./node_modules/tone/build/esm/effect/StereoEffect.js","./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js","./node_modules/tone/build/esm/effect/Chorus.js","./node_modules/tone/build/esm/effect/Distortion.js","./node_modules/tone/build/esm/effect/FeedbackEffect.js","./node_modules/tone/build/esm/effect/FeedbackDelay.js","./node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js","./node_modules/tone/build/esm/effect/FrequencyShifter.js","./node_modules/tone/build/esm/effect/Freeverb.js","./node_modules/tone/build/esm/effect/JCReverb.js","./node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js","./node_modules/tone/build/esm/effect/PingPongDelay.js","./node_modules/tone/build/esm/effect/PitchShift.js","./node_modules/tone/build/esm/effect/Phaser.js","./node_modules/tone/build/esm/effect/Reverb.js","./node_modules/tone/build/esm/component/channel/MidSideSplit.js","./node_modules/tone/build/esm/component/channel/MidSideMerge.js","./node_modules/tone/build/esm/effect/MidSideEffect.js","./node_modules/tone/build/esm/effect/StereoWidener.js","./node_modules/tone/build/esm/effect/Tremolo.js","./node_modules/tone/build/esm/effect/Vibrato.js","./node_modules/tone/build/esm/component/analysis/Analyser.js","./node_modules/tone/build/esm/component/analysis/MeterBase.js","./node_modules/tone/build/esm/component/analysis/Meter.js","./node_modules/tone/build/esm/component/analysis/FFT.js","./node_modules/tone/build/esm/component/analysis/DCMeter.js","./node_modules/tone/build/esm/component/analysis/Waveform.js","./node_modules/tone/build/esm/component/channel/Solo.js","./node_modules/tone/build/esm/component/channel/PanVol.js","./node_modules/tone/build/esm/component/channel/Channel.js","./node_modules/tone/build/esm/component/channel/MultibandSplit.js","./node_modules/tone/build/esm/core/context/Listener.js","./node_modules/tone/build/esm/component/channel/Panner3D.js","./node_modules/tone/build/esm/component/channel/Recorder.js","./node_modules/tone/build/esm/component/dynamics/Compressor.js","./node_modules/tone/build/esm/component/dynamics/Gate.js","./node_modules/tone/build/esm/component/dynamics/Limiter.js","./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js","./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js","./node_modules/tone/build/esm/component/filter/EQ3.js","./node_modules/tone/build/esm/component/filter/Convolver.js","./node_modules/tone/build/esm/index.js","./scripts/utils.js","./node_modules/a-weighting/index.js","./node_modules/a-weighting/a.js","./node_modules/a-weighting/b.js","./node_modules/a-weighting/c.js","./node_modules/a-weighting/d.js","./node_modules/a-weighting/m.js","./node_modules/a-weighting/z.js","./scripts/agents/flocking.js","./node_modules/ramda/es/internal/_isPlaceholder.js","./node_modules/ramda/es/internal/_curry1.js","./node_modules/ramda/es/internal/_curry2.js","./node_modules/ramda/es/internal/_isArray.js","./node_modules/ramda/es/internal/_isTransformer.js","./node_modules/ramda/es/internal/_dispatchable.js","./node_modules/ramda/es/internal/_xfBase.js","./node_modules/ramda/es/internal/_xall.js","./node_modules/ramda/es/internal/_reduced.js","./node_modules/ramda/es/all.js","./scripts/behaviours/bandpassPolyTracker.js","./scripts/agents/chord.js","./firebase.json","./scripts/index.js"],"sourcesContent":[null,"\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = require(\"@parcel/plugin\");\n\nvar _utils = require(\"@parcel/utils\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _nullthrows = _interopRequireDefault(require(\"nullthrows\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// List of browsers that support dynamic import natively\n// https://caniuse.com/#feat=es6-module-dynamic-import\nconst DYNAMIC_IMPORT_BROWSERS = {\n  edge: '76',\n  firefox: '67',\n  chrome: '63',\n  safari: '11.1',\n  opera: '50'\n};\nconst LOADERS = {\n  browser: {\n    css: './loaders/browser/css-loader',\n    html: './loaders/browser/html-loader',\n    js: './loaders/browser/js-loader',\n    wasm: './loaders/browser/wasm-loader',\n    IMPORT_POLYFILL: './loaders/browser/import-polyfill'\n  },\n  worker: {\n    js: './loaders/worker/js-loader',\n    wasm: './loaders/worker/wasm-loader',\n    IMPORT_POLYFILL: false\n  },\n  node: {\n    css: './loaders/node/css-loader',\n    html: './loaders/node/html-loader',\n    js: './loaders/node/js-loader',\n    wasm: './loaders/node/wasm-loader',\n    IMPORT_POLYFILL: null\n  }\n};\n\nfunction getLoaders(ctx) {\n  if (ctx.isWorker()) return LOADERS.worker;\n  if (ctx.isBrowser()) return LOADERS.browser;\n  if (ctx.isNode()) return LOADERS.node;\n  return null;\n}\n\nvar _default = new _plugin.Runtime({\n  apply({\n    bundle,\n    bundleGraph,\n    options\n  }) {\n    // Dependency ids in code replaced with referenced bundle names\n    // Loader runtime added for bundle groups that don't have a native loader (e.g. HTML/CSS/Worker - isURL?),\n    // and which are not loaded by a parent bundle.\n    // Loaders also added for modules that were moved to a separate bundle because they are a different type\n    // (e.g. WASM, HTML). These should be preloaded prior to the bundle being executed. Replace the entry asset(s)\n    // with the preload module.\n    if (bundle.type !== 'js') {\n      return;\n    }\n\n    let asyncDependencies = [];\n    let otherDependencies = [];\n    bundle.traverse(node => {\n      if (node.type !== 'dependency') {\n        return;\n      }\n\n      let dependency = node.value;\n\n      if (dependency.isAsync && !dependency.isURL) {\n        asyncDependencies.push(dependency);\n      } else {\n        otherDependencies.push(dependency);\n      }\n    });\n    let assets = [];\n\n    for (let dependency of asyncDependencies) {\n      let resolved = bundleGraph.resolveExternalDependency(dependency, bundle);\n\n      if (resolved == null) {\n        continue;\n      }\n\n      if (resolved.type === 'asset') {\n        // If this bundle already has the asset this dependency references,\n        // return a simple runtime of `Promise.resolve(require(\"path/to/asset\"))`.\n        assets.push({\n          filePath: _path.default.join(options.projectRoot, 'JSRuntime.js'),\n          // Using Promise['resolve'] to prevent Parcel from inferring this is an async dependency.\n          // TODO: Find a better way of doing this.\n          code: `module.exports = Promise['resolve'](require(${JSON.stringify('./' + _path.default.relative(options.projectRoot, resolved.value.filePath))}))`,\n          dependency\n        });\n      } else {\n        assets.push(...getLoaderRuntimes({\n          bundle,\n          dependency,\n          bundleGraph,\n          bundleGroup: resolved.value\n        }));\n      }\n    }\n\n    for (let dependency of otherDependencies) {\n      let resolved = bundleGraph.resolveExternalDependency(dependency, bundle);\n\n      if (dependency.isURL && resolved == null) {\n        // If a URL dependency was not able to be resolved, add a runtime that\n        // exports the original moduleSpecifier.\n        assets.push({\n          filePath: __filename,\n          code: `module.exports = ${JSON.stringify(dependency.moduleSpecifier)}`,\n          dependency\n        });\n        continue;\n      }\n\n      if (resolved == null || resolved.type !== 'bundle_group') {\n        continue;\n      }\n\n      let bundleGroup = resolved.value;\n      let mainBundle = (0, _nullthrows.default)(bundleGraph.getBundlesInBundleGroup(bundleGroup).find(b => {\n        let main = b.getMainEntry();\n        return main && bundleGroup.entryAssetId === main.id;\n      }));\n\n      if (mainBundle.isInline) {\n        assets.push({\n          filePath: _path.default.join(__dirname, `/bundles/${mainBundle.id}.js`),\n          code: `module.exports = ${JSON.stringify(dependency.id)};`,\n          dependency\n        });\n        continue;\n      } // URL dependency or not, fall back to including a runtime that exports the url\n\n\n      assets.push(getURLRuntime(dependency, bundle, mainBundle));\n    }\n\n    if (shouldUseRuntimeManifest(bundle) && bundleGraph.getChildBundles(bundle).length > 0 && isNewContext(bundle, bundleGraph)) {\n      assets.push({\n        filePath: __filename,\n        code: getRegisterCode(bundle, bundleGraph),\n        isEntry: true\n      });\n    }\n\n    return assets;\n  }\n\n});\n\nexports.default = _default;\n\nfunction getLoaderRuntimes({\n  bundle,\n  dependency,\n  bundleGroup,\n  bundleGraph\n}) {\n  let assets = []; // Sort so the bundles containing the entry asset appear last\n\n  let externalBundles = bundleGraph.getBundlesInBundleGroup(bundleGroup).filter(bundle => !bundle.isInline).sort(bundle => bundle.getEntryAssets().map(asset => asset.id).includes(bundleGroup.entryAssetId) ? 1 : -1); // CommonJS is a synchronous module system, so there is no need to load bundles in parallel.\n  // Importing of the other bundles will be handled by the bundle group entry.\n  // Do the same thing in library mode for ES modules, as we are building for another bundler\n  // and the imports for sibling bundles will be in the target bundle.\n\n  if (bundle.env.outputFormat === 'commonjs' || bundle.env.isLibrary) {\n    externalBundles = externalBundles.slice(-1);\n  }\n\n  let loaders = getLoaders(bundle.env); // Determine if we need to add a dynamic import() polyfill, or if all target browsers support it natively.\n\n  let needsDynamicImportPolyfill = false;\n\n  if (bundle.env.isBrowser() && bundle.env.outputFormat === 'esmodule') {\n    needsDynamicImportPolyfill = !bundle.env.matchesEngines(DYNAMIC_IMPORT_BROWSERS);\n  }\n\n  let loaderModules = loaders ? externalBundles.map(to => {\n    let loader = loaders[to.type];\n\n    if (!loader) {\n      return;\n    }\n\n    let relativePathExpr = getRelativePathExpr(bundle, to); // Use esmodule loader if possible\n\n    if (to.type === 'js' && to.env.outputFormat === 'esmodule') {\n      if (!needsDynamicImportPolyfill) {\n        return `import(\"./\" + ${relativePathExpr})`;\n      }\n\n      loader = (0, _nullthrows.default)(loaders.IMPORT_POLYFILL, `No import() polyfill available for context '${bundle.env.context}'`);\n    } else if (to.type === 'js' && to.env.outputFormat === 'commonjs') {\n      return `Promise.resolve(require(\"./\" + ${relativePathExpr}))`;\n    }\n\n    return `require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr})`;\n  }).filter(Boolean) : [];\n\n  if (loaderModules.length > 0) {\n    let loaders = loaderModules.join(', ');\n\n    if (loaderModules.length > 1 && (bundle.env.outputFormat === 'global' || !externalBundles.every(b => b.type === 'js'))) {\n      loaders = `Promise.all([${loaders}])`;\n\n      if (bundle.env.outputFormat !== 'global') {\n        loaders += `.then(r => r[r.length - 1])`;\n      }\n    } else {\n      loaders = `(${loaders})`;\n    }\n\n    if (bundle.env.outputFormat === 'global') {\n      loaders += `.then(() => parcelRequire('${bundleGroup.entryAssetId}')${// In global output with scope hoisting, functions return exports are\n      // always returned. Otherwise, the exports are returned.\n      bundle.env.scopeHoist ? '()' : ''})`;\n    }\n\n    assets.push({\n      filePath: __filename,\n      code: `module.exports = ${loaders};`,\n      dependency\n    });\n  }\n\n  return assets;\n}\n\nfunction isNewContext(bundle, bundleGraph) {\n  return bundle.isEntry || bundleGraph.getParentBundles(bundle).some(parent => parent.env.context !== bundle.env.context || parent.type !== 'js');\n}\n\nfunction getURLRuntime(dependency, from, to) {\n  let relativePathExpr = getRelativePathExpr(from, to);\n\n  if (dependency.meta.webworker === true) {\n    return {\n      filePath: __filename,\n      code: `module.exports = require('./get-worker-url')(${relativePathExpr});`,\n      dependency\n    };\n  }\n\n  return {\n    filePath: __filename,\n    code: `module.exports = require('./bundle-url').getBundleURL() + ${relativePathExpr}`,\n    dependency\n  };\n}\n\nfunction getRegisterCode(entryBundle, bundleGraph) {\n  let idToName = {};\n  bundleGraph.traverseBundles((bundle, _, actions) => {\n    if (bundle.isInline) {\n      return;\n    }\n\n    idToName[getPublicBundleId(bundle)] = (0, _nullthrows.default)(bundle.name);\n\n    if (bundle !== entryBundle && isNewContext(bundle, bundleGraph)) {\n      // New contexts have their own manifests, so there's no need to continue.\n      actions.skipChildren();\n    }\n  }, entryBundle);\n  return \"require('./bundle-manifest').register(JSON.parse(\" + JSON.stringify(JSON.stringify(idToName)) + '));';\n}\n\nfunction getRelativePathExpr(from, to) {\n  if (shouldUseRuntimeManifest(from)) {\n    return `require('./relative-path')(${JSON.stringify(getPublicBundleId(from))}, ${JSON.stringify(getPublicBundleId(to))})`;\n  }\n\n  return JSON.stringify((0, _utils.relativeBundlePath)(from, to, {\n    leadingDotSlash: false\n  }));\n}\n\nfunction shouldUseRuntimeManifest(bundle) {\n  let env = bundle.env;\n  return !env.isLibrary && env.outputFormat === 'global' && env.isBrowser();\n}\n\nfunction getPublicBundleId(bundle) {\n  return bundle.id.slice(-16);\n}","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar component = require('@firebase/component');\nvar logger$1 = require('@firebase/logger');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERRORS = (_a = {},\r\n    _a[\"no-app\" /* NO_APP */] = \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    _a[\"bad-app-name\" /* BAD_APP_NAME */] = \"Illegal App name: '{$appName}\",\r\n    _a[\"duplicate-app\" /* DUPLICATE_APP */] = \"Firebase App named '{$appName}' already exists\",\r\n    _a[\"app-deleted\" /* APP_DELETED */] = \"Firebase App named '{$appName}' already deleted\",\r\n    _a[\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */] = 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    _a[\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */] = 'First argument to `onLog` must be null or a function.',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory('app', 'Firebase', ERRORS);\n\nvar name$1 = \"@firebase/app\";\nvar version = \"0.6.9\";\n\nvar name$2 = \"@firebase/analytics\";\n\nvar name$3 = \"@firebase/auth\";\n\nvar name$4 = \"@firebase/database\";\n\nvar name$5 = \"@firebase/functions\";\n\nvar name$6 = \"@firebase/installations\";\n\nvar name$7 = \"@firebase/messaging\";\n\nvar name$8 = \"@firebase/performance\";\n\nvar name$9 = \"@firebase/remote-config\";\n\nvar name$a = \"@firebase/storage\";\n\nvar name$b = \"@firebase/firestore\";\n\nvar name$c = \"firebase-wrapper\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a$1;\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nvar PLATFORM_LOG_STRING = (_a$1 = {},\r\n    _a$1[name$1] = 'fire-core',\r\n    _a$1[name$2] = 'fire-analytics',\r\n    _a$1[name$3] = 'fire-auth',\r\n    _a$1[name$4] = 'fire-rtdb',\r\n    _a$1[name$5] = 'fire-fn',\r\n    _a$1[name$6] = 'fire-iid',\r\n    _a$1[name$7] = 'fire-fcm',\r\n    _a$1[name$8] = 'fire-perf',\r\n    _a$1[name$9] = 'fire-rc',\r\n    _a$1[name$a] = 'fire-gcs',\r\n    _a$1[name$b] = 'fire-fst',\r\n    _a$1['fire-js'] = 'fire-js',\r\n    _a$1[name$c] = 'fire-js-all',\r\n    _a$1);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logger = new logger$1.Logger('@firebase/app');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        var e_1, _a;\r\n        var _this = this;\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.name_ = config.name;\r\n        this.automaticDataCollectionEnabled_ =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.container = new component.ComponentContainer(config.name);\r\n        // add itself to container\r\n        this._addComponent(new component.Component('app', function () { return _this; }, \"PUBLIC\" /* PUBLIC */));\r\n        try {\r\n            // populate ComponentContainer with existing components\r\n            for (var _b = tslib.__values(this.firebase_.INTERNAL.components.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component$1 = _c.value;\r\n                this._addComponent(component$1);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.automaticDataCollectionEnabled_;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this.automaticDataCollectionEnabled_ = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            return Promise.all(_this.container.getProviders().map(function (provider) { return provider.delete(); }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        // getImmediate will always succeed because _getService is only called for registered components.\r\n        return this.container.getProvider(name).getImmediate({\r\n            identifier: instanceIdentifier\r\n        });\r\n    };\r\n    /**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get this service again.\r\n     *\r\n     * NOTE: currently only firestore is using this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.container.getProvider(name).clearInstance(instanceIdentifier);\r\n    };\r\n    /**\r\n     * @param component the component being added to this app's container\r\n     */\r\n    FirebaseAppImpl.prototype._addComponent = function (component) {\r\n        try {\r\n            this.container.addComponent(component);\r\n        }\r\n        catch (e) {\r\n            logger.debug(\"Component \" + component.name + \" failed to register with FirebaseApp \" + this.name, e);\r\n        }\r\n    };\r\n    FirebaseAppImpl.prototype._addOrOverwriteComponent = function (component) {\r\n        this.container.addOrOverwriteComponent(component);\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* APP_DELETED */, { appName: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\n\nvar version$1 = \"7.17.1\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\r\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\r\n    var apps = {};\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var components = new Map();\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        // @ts-ignore\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        // @ts-ignore\r\n        app: app,\r\n        registerVersion: registerVersion,\r\n        setLogLevel: logger$1.setLogLevel,\r\n        onLog: onLog,\r\n        // @ts-ignore\r\n        apps: null,\r\n        SDK_VERSION: version$1,\r\n        INTERNAL: {\r\n            registerComponent: registerComponent,\r\n            removeApp: removeApp,\r\n            components: components,\r\n            useAsService: useAsService\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    namespace['default'] = namespace;\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        delete apps[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!util.contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n        }\r\n        return apps[name];\r\n    }\r\n    // @ts-ignore\r\n    app['App'] = firebaseAppImpl;\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            throw ERROR_FACTORY.create(\"bad-app-name\" /* BAD_APP_NAME */, {\r\n                appName: String(name)\r\n            });\r\n        }\r\n        if (util.contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* DUPLICATE_APP */, { appName: name });\r\n        }\r\n        var app = new firebaseAppImpl(options, config, namespace);\r\n        apps[name] = app;\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps).map(function (name) { return apps[name]; });\r\n    }\r\n    function registerComponent(component) {\r\n        var e_1, _a;\r\n        var componentName = component.name;\r\n        if (components.has(componentName)) {\r\n            logger.debug(\"There were multiple attempts to register component \" + componentName + \".\");\r\n            return component.type === \"PUBLIC\" /* PUBLIC */\r\n                ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    namespace[componentName]\r\n                : null;\r\n        }\r\n        components.set(componentName, component);\r\n        // create service namespace for public components\r\n        if (component.type === \"PUBLIC\" /* PUBLIC */) {\r\n            // The Service namespace is an accessor function ...\r\n            var serviceNamespace = function (appArg) {\r\n                if (appArg === void 0) { appArg = app(); }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (typeof appArg[componentName] !== 'function') {\r\n                    // Invalid argument.\r\n                    // This happens in the following case: firebase.storage('gs:/')\r\n                    throw ERROR_FACTORY.create(\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */, {\r\n                        appName: componentName\r\n                    });\r\n                }\r\n                // Forward service instance lookup to the FirebaseApp.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                return appArg[componentName]();\r\n            };\r\n            // ... and a container for service-level properties.\r\n            if (component.serviceProps !== undefined) {\r\n                util.deepExtend(serviceNamespace, component.serviceProps);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            namespace[componentName] = serviceNamespace;\r\n            // Patch the FirebaseAppImpl prototype\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            firebaseAppImpl.prototype[componentName] =\r\n                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\r\n                // option added to the no-explicit-any rule when ESlint releases it.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    var serviceFxn = this._getService.bind(this, componentName);\r\n                    return serviceFxn.apply(this, component.multipleInstances ? args : []);\r\n                };\r\n        }\r\n        try {\r\n            // add the component to existing app instances\r\n            for (var _b = tslib.__values(Object.keys(apps)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var appName = _c.value;\r\n                apps[appName]._addComponent(component);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return component.type === \"PUBLIC\" /* PUBLIC */\r\n            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                namespace[componentName]\r\n            : null;\r\n    }\r\n    function registerVersion(libraryKeyOrName, version, variant) {\r\n        var _a;\r\n        // TODO: We can use this check to whitelist strings when/if we set up\r\n        // a good whitelist system.\r\n        var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n        if (variant) {\r\n            library += \"-\" + variant;\r\n        }\r\n        var libraryMismatch = library.match(/\\s|\\//);\r\n        var versionMismatch = version.match(/\\s|\\//);\r\n        if (libraryMismatch || versionMismatch) {\r\n            var warning = [\r\n                \"Unable to register library \\\"\" + library + \"\\\" with version \\\"\" + version + \"\\\":\"\r\n            ];\r\n            if (libraryMismatch) {\r\n                warning.push(\"library name \\\"\" + library + \"\\\" contains illegal characters (whitespace or \\\"/\\\")\");\r\n            }\r\n            if (libraryMismatch && versionMismatch) {\r\n                warning.push('and');\r\n            }\r\n            if (versionMismatch) {\r\n                warning.push(\"version name \\\"\" + version + \"\\\" contains illegal characters (whitespace or \\\"/\\\")\");\r\n            }\r\n            logger.warn(warning.join(' '));\r\n            return;\r\n        }\r\n        registerComponent(new component.Component(library + \"-version\", function () { return ({ library: library, version: version }); }, \"VERSION\" /* VERSION */));\r\n    }\r\n    function onLog(logCallback, options) {\r\n        if (logCallback !== null && typeof logCallback !== 'function') {\r\n            throw ERROR_FACTORY.create(\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */, {\r\n                appName: name\r\n            });\r\n        }\r\n        logger$1.setUserLogHandler(logCallback, options);\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\r\n    namespace.INTERNAL = tslib.__assign(tslib.__assign({}, namespace.INTERNAL), { createFirebaseNamespace: createFirebaseNamespace,\r\n        extendNamespace: extendNamespace,\r\n        createSubscribe: util.createSubscribe,\r\n        ErrorFactory: util.ErrorFactory,\r\n        deepExtend: util.deepExtend });\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    return namespace;\r\n}\r\nvar firebase = createFirebaseNamespace();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PlatformLoggerService = /** @class */ (function () {\r\n    function PlatformLoggerService(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    PlatformLoggerService.prototype.getPlatformInfoString = function () {\r\n        var providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(function (provider) {\r\n            if (isVersionServiceProvider(provider)) {\r\n                var service = provider.getImmediate();\r\n                return service.library + \"/\" + service.version;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(function (logString) { return logString; })\r\n            .join(' ');\r\n    };\r\n    return PlatformLoggerService;\r\n}());\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    var component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* VERSION */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(firebase, variant) {\r\n    firebase.INTERNAL.registerComponent(new component.Component('platform-logger', function (container) { return new PlatformLoggerService(container); }, \"PRIVATE\" /* PRIVATE */));\r\n    // Register `app` package.\r\n    firebase.registerVersion(name$1, version, variant);\r\n    // Register platform SDK identifier (no version).\r\n    firebase.registerVersion('fire-js', '');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Firebase Lite detection test\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nif (util.isBrowser() && self.firebase !== undefined) {\r\n    logger.warn(\"\\n    Warning: Firebase is already defined in the global scope. Please make sure\\n    Firebase library is only loaded once.\\n  \");\r\n    // eslint-disable-next-line\r\n    var sdkVersion = self.firebase.SDK_VERSION;\r\n    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\r\n        logger.warn(\"\\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\\n    \");\r\n    }\r\n}\r\nvar initializeApp = firebase.initializeApp;\r\n// TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n// the no-explicit-any rule when ESlint releases it.\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfirebase.initializeApp = function () {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    // Environment check before initializing app\r\n    // Do the check in initializeApp, so people have a chance to disable it by setting logLevel\r\n    // in @firebase/logger\r\n    if (util.isNode()) {\r\n        logger.warn(\"\\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\\n      run in a Node environment.  If running in a Node environment, make sure you\\n      are using the bundle specified by the \\\"main\\\" field in package.json.\\n      \\n      If you are using Webpack, you can specify \\\"main\\\" as the first item in\\n      \\\"resolve.mainFields\\\":\\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\\n      \\n      If using Rollup, use the rollup-plugin-node-resolve plugin and specify \\\"main\\\"\\n      as the first item in \\\"mainFields\\\", e.g. ['main', 'module'].\\n      https://github.com/rollup/rollup-plugin-node-resolve\\n      \");\r\n    }\r\n    return initializeApp.apply(undefined, args);\r\n};\r\nvar firebase$1 = firebase;\r\nregisterCoreComponents(firebase$1);\n\nexports.default = firebase$1;\nexports.firebase = firebase$1;\n//# sourceMappingURL=index.cjs.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [];\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [];\r\n    var pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString: function (input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString: function (input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, webSafe) {\r\n        this.init_();\r\n        var charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.reject = function () { };\r\n        this.resolve = function () { };\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    var runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    var ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser\r\n * @return true if indexedDB is supported by current browser\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    if (!('indexedDB' in window) || indexedDB === null) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * This method validates browser context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var preExist_1 = true;\r\n            var DB_CHECK_NAME_1 = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            var request_1 = window.indexedDB.open(DB_CHECK_NAME_1);\r\n            request_1.onsuccess = function () {\r\n                request_1.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist_1) {\r\n                    window.indexedDB.deleteDatabase(DB_CHECK_NAME_1);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request_1.onupgradeneeded = function () {\r\n                preExist_1 = false;\r\n            };\r\n            request_1.onerror = function () {\r\n                var _a;\r\n                reject(((_a = request_1.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (!navigator || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nvar FirebaseError = /** @class */ (function (_super) {\r\n    tslib.__extends(FirebaseError, _super);\r\n    function FirebaseError(code, message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = code;\r\n        _this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(_this, ErrorFactory.prototype.create);\r\n        }\r\n        return _this;\r\n    }\r\n    return FirebaseError;\r\n}(Error));\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    ErrorFactory.prototype.create = function (code) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        var customData = data[0] || {};\r\n        var fullCode = this.service + \"/\" + code;\r\n        var template = this.errors[code];\r\n        var message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        var fullMessage = this.serviceName + \": \" + message + \" (\" + fullCode + \").\";\r\n        var error = new FirebaseError(fullCode, fullMessage);\r\n        // Keys with an underscore at the end of their name are not included in\r\n        // error.data for some reason.\r\n        // TODO: Replace with Object.entries when lib is updated to es2017.\r\n        for (var _a = 0, _b = Object.keys(customData); _a < _b.length; _a++) {\r\n            var key = _b[_a];\r\n            if (key.slice(-1) !== '_') {\r\n                if (key in error) {\r\n                    console.warn(\"Overwriting FirebaseError base field \\\"\" + key + \"\\\" can cause unexpected behavior.\");\r\n                }\r\n                error[key] = customData[key];\r\n            }\r\n        }\r\n        return error;\r\n    };\r\n    return ErrorFactory;\r\n}());\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, function (_, key) {\r\n        var value = data[key];\r\n        return value != null ? String(value) : \"<\" + key + \"?>\";\r\n    });\r\n}\r\nvar PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims;\r\n    var now = Math.floor(new Date().getTime() / 1000);\r\n    var validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    var params = [];\r\n    var _loop_1 = function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    };\r\n    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {\r\n        var _b = _a[_i], key = _b[0], value = _b[1];\r\n        _loop_1(key, value);\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function () {\r\n    function Sha1() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (var i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}());\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argumentNumber The index of the argument\r\n * @param optional Whether or not the argument is optional\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [];\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\nexports.CONSTANTS = CONSTANTS;\nexports.Deferred = Deferred;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.Sha1 = Sha1;\nexports.areCookiesEnabled = areCookiesEnabled;\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.async = async;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.contains = contains;\nexports.createSubscribe = createSubscribe;\nexports.decode = decode;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.errorPrefix = errorPrefix;\nexports.getUA = getUA;\nexports.isAdmin = isAdmin;\nexports.isBrowser = isBrowser;\nexports.isBrowserExtension = isBrowserExtension;\nexports.isElectron = isElectron;\nexports.isEmpty = isEmpty;\nexports.isIE = isIE;\nexports.isIndexedDBAvailable = isIndexedDBAvailable;\nexports.isMobileCordova = isMobileCordova;\nexports.isNode = isNode;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.isSafari = isSafari;\nexports.isUWP = isUWP;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.issuedAtTime = issuedAtTime;\nexports.jsonEval = jsonEval;\nexports.map = map;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.safeGet = safeGet;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\nexports.stringify = stringify;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateIndexedDBOpenable = validateIndexedDBOpenable;\nexports.validateNamespace = validateNamespace;\n//# sourceMappingURL=index.cjs.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar Component = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    function Component(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* LAZY */;\r\n    }\r\n    Component.prototype.setInstantiationMode = function (mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    };\r\n    Component.prototype.setMultipleInstances = function (multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    };\r\n    Component.prototype.setServiceProps = function (props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    };\r\n    return Component;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nvar Provider = /** @class */ (function () {\r\n    function Provider(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    Provider.prototype.get = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            var deferred = new util.Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            // If the service instance is available, resolve the promise with it immediately\r\n            try {\r\n                var instance = this.getOrInitializeService(normalizedIdentifier);\r\n                if (instance) {\r\n                    deferred.resolve(instance);\r\n                }\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception during get(), it should not cause\r\n                // a fatal error. We just return the unresolved promise in this case.\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    };\r\n    Provider.prototype.getImmediate = function (options) {\r\n        var _a = tslib.__assign({ identifier: DEFAULT_ENTRY_NAME, optional: false }, options), identifier = _a.identifier, optional = _a.optional;\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        try {\r\n            var instance = this.getOrInitializeService(normalizedIdentifier);\r\n            if (!instance) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                throw Error(\"Service \" + this.name + \" is not available\");\r\n            }\r\n            return instance;\r\n        }\r\n        catch (e) {\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n    };\r\n    Provider.prototype.getComponent = function () {\r\n        return this.component;\r\n    };\r\n    Provider.prototype.setComponent = function (component) {\r\n        var e_1, _a;\r\n        if (component.name !== this.name) {\r\n            throw Error(\"Mismatching Component \" + component.name + \" for Provider \" + this.name + \".\");\r\n        }\r\n        if (this.component) {\r\n            throw Error(\"Component for \" + this.name + \" has already been provided\");\r\n        }\r\n        this.component = component;\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService(DEFAULT_ENTRY_NAME);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        try {\r\n            // Create service instances for the pending promises and resolve them\r\n            // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n            // and all promises with resolve with it regardless of the identifier.\r\n            for (var _b = tslib.__values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = tslib.__read(_c.value, 2), instanceIdentifier = _d[0], instanceDeferred = _d[1];\r\n                var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n                try {\r\n                    // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                    var instance = this.getOrInitializeService(normalizedIdentifier);\r\n                    instanceDeferred.resolve(instance);\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception, it should not cause\r\n                    // a fatal error. We just leave the promise unresolved.\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    Provider.prototype.clearInstance = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    };\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    Provider.prototype.delete = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var services;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        services = Array.from(this.instances.values());\r\n                        return [4 /*yield*/, Promise.all(services\r\n                                .filter(function (service) { return 'INTERNAL' in service; })\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                .map(function (service) { return service.INTERNAL.delete(); }))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Provider.prototype.isComponentSet = function () {\r\n        return this.component != null;\r\n    };\r\n    Provider.prototype.getOrInitializeService = function (identifier) {\r\n        var instance = this.instances.get(identifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, normalizeIdentifierForFactory(identifier));\r\n            this.instances.set(identifier, instance);\r\n        }\r\n        return instance || null;\r\n    };\r\n    Provider.prototype.normalizeInstanceIdentifier = function (identifier) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    };\r\n    return Provider;\r\n}());\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar ComponentContainer = /** @class */ (function () {\r\n    function ComponentContainer(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    ComponentContainer.prototype.addComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(\"Component \" + component.name + \" has already been registered with \" + this.name);\r\n        }\r\n        provider.setComponent(component);\r\n    };\r\n    ComponentContainer.prototype.addOrOverwriteComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    };\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    ComponentContainer.prototype.getProvider = function (name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        var provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    };\r\n    ComponentContainer.prototype.getProviders = function () {\r\n        return Array.from(this.providers.values());\r\n    };\r\n    return ComponentContainer;\r\n}());\n\nexports.Component = Component;\nexports.ComponentContainer = ComponentContainer;\nexports.Provider = Provider;\n//# sourceMappingURL=index.cjs.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nvar levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nvar ConsoleMethod = (_a = {},\r\n    _a[LogLevel.DEBUG] = 'log',\r\n    _a[LogLevel.VERBOSE] = 'log',\r\n    _a[LogLevel.INFO] = 'info',\r\n    _a[LogLevel.WARN] = 'warn',\r\n    _a[LogLevel.ERROR] = 'error',\r\n    _a);\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    var now = new Date().toISOString();\r\n    var method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method].apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n    }\r\n    else {\r\n        throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError(\"Invalid value \\\"\" + val + \"\\\" assigned to `logLevel`\");\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Workaround for setter/getter having to be the same type.\r\n    Logger.prototype.setLogLevel = function (val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    };\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"userLogHandler\", {\r\n        get: function () {\r\n            return this._userLogHandler;\r\n        },\r\n        set: function (val) {\r\n            this._userLogHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n    };\r\n    return Logger;\r\n}());\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    var _loop_1 = function (instance) {\r\n        var customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = function (instance, level) {\r\n                var args = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    args[_i - 2] = arguments[_i];\r\n                }\r\n                var message = args\r\n                    .map(function (arg) {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(function (arg) { return arg; })\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message: message,\r\n                        args: args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {\r\n        var instance = instances_1[_i];\r\n        _loop_1(instance);\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm.js.map\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\nvar name = \"firebase\";\nvar version = \"7.17.1\";\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfirebase.registerVersion(name, version, 'app');\n\nmodule.exports = firebase;\n//# sourceMappingURL=index.cjs.js.map\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\nvar component = require('@firebase/component');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger$1.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += util.stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger$1.LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n */\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return util.stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length) {\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        }\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0) {\r\n                    pieces.push(childPieces[i]);\r\n                }\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0) {\r\n                return cmp;\r\n            }\r\n        }\r\n        if (leftKeys.length === rightKeys.length) {\r\n            return 0;\r\n        }\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length === 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return (this.host !== this.internalHost ||\r\n            this.isCustomHost() ||\r\n            this.includeNamespaceInQueryParams);\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        each(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = tslib.__values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = tslib.__assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = tslib.__assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (util.contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this.node_.isEmpty();\r\n        }\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ change.childName);\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherKeys = Object.keys(other.callbacks_);\r\n                var thisKeys = Object.keys(this.callbacks_);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks_[eventType] === _this.callbacks_[eventType];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName !== MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName !== MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param failureCallbackOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel) {\r\n                ret.cancel.bind(ret.context)(err);\r\n            }\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = this.path_.child(childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return this.syncTree_.calcCompleteEventCache(this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        util.assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            util.assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        util.assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        util.assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    util.assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        this.value = null;\r\n        this.children = new Map();\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value != null) {\r\n            return this.value.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children.size > 0) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children.has(childKey)) {\r\n                var childTree = this.children.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @param data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value = data;\r\n            this.children.clear();\r\n        }\r\n        else if (this.value !== null) {\r\n            this.value = this.value.updateChild(path, data);\r\n        }\r\n        else {\r\n            var childKey = path.getFront();\r\n            if (!this.children.has(childKey)) {\r\n                this.children.set(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value = null;\r\n            this.children.clear();\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value !== null) {\r\n                if (this.value.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value;\r\n                    this.value = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children.size > 0) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children.has(childKey)) {\r\n                    var safeToRemove = this.children.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children.delete(childKey);\r\n                    }\r\n                }\r\n                return this.children.size === 0;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param prefixPath Path to look up node for.\r\n     * @param func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value !== null) {\r\n            func(prefixPath, this.value);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        this.children.forEach(function (tree, key) {\r\n            func(key, tree);\r\n        });\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        util.assert(type === Change.CHILD_ADDED ||\r\n            type === Change.CHILD_CHANGED ||\r\n            type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\n// eslint-disable-next-line @typescript-eslint/class-name-casing\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap.getNode().equals(/** @type {!Node} */ oldCompleteSnap)) ||\r\n                !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey === '.priority') {\r\n                    util.assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey === '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache.getServerCache().getNode().isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return this.views.size === 0;\r\n    };\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var e_1, _a;\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = this.views.get(queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events = [];\r\n            try {\r\n                for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var view = _c.value;\r\n                    events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = this.views.get(queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ eventCache, eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ serverCache, serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views.set(queryId, view);\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var e_2, _a;\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            try {\r\n                // When you do ref.off(...), we search all views for the registration to remove.\r\n                for (var _b = tslib.__values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var _d = tslib.__read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                    cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                    if (view.isEmpty()) {\r\n                        this.views.delete(viewQueryId);\r\n                        // We'll deal with complete views later.\r\n                        if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                            removed.push(view.getQuery());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = this.views.get(queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    this.views.delete(queryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var e_3, _a;\r\n        var result = [];\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                    result.push(view);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param path The path to the desired complete snapshot\r\n     * @return A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var e_4, _a;\r\n        var serverCache = null;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                serverCache = serverCache || view.getCompleteServerCache(path);\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n        return serverCache;\r\n    };\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return this.views.get(queryId);\r\n        }\r\n    };\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (view.getQuery().getQueryParams().loadsAllData()) {\r\n                    return view;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        each(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param path The path to check for\r\n     * @return Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param path The path to get a complete write\r\n     * @return The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param node The node to apply this CompoundWrite to\r\n     * @return The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return applySubtreeWrite(Path.Empty, this.writeTree_, node);\r\n    };\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    return CompoundWrite;\r\n}());\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                each(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            for (var childName in writeRecord.children) {\r\n                if (writeRecord.children.hasOwnProperty(childName) &&\r\n                    writeRecord.path.child(childName).contains(path)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param revert True if the given write failed and needs to be reverted\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                each(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap.set(queryKey, tag);\r\n            this.tagToQueryMap.set(tag, queryKey);\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param eventRegistration If null, all callbacks are removed.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n     * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n     * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n     *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     *\r\n     * @param path The path to the data we want\r\n     * @param writeIdsToExclude A specific set to be excluded\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                each(childMap, function (_key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\r\n                this.queryToTagMap.delete(removedQueryKey);\r\n                this.tagToQueryMap.delete(removedQueryTag);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     *\r\n     * @return The normalized query\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @return This method can return events to support synchronous data sources\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    each(childMap, function (_key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap.get(tag);\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return this.queryToTagMap.get(queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n     *\r\n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n     *\r\n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = tslib.__assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} varArgs\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = tslib.__spread(this.listeners_[eventType]);\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (util.isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = tslib.__values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param applicationId_ The Firebase App ID for this project\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        /** Map<path, Map<queryId, ListenSpec>> */\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = tslib.__values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient, app, authTokenProvider) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactionsInit_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    // TODO: This should be @private but it's used by test_access.js and internal.js\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (key, value) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var existing = this.serverSyncTree_.calcCompleteEventCache(path);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        each(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            changedChildren[changedKey] = resolveDeferredValueTree(path.child(changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            each(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = new SparseSnapshotTree();\r\n        this.onDisconnect_.forEachTree(Path.Empty, function (path, node) {\r\n            var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\r\n            resolvedOnDisconnectTree.remember(path, resolved);\r\n        });\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                each(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined') {\r\n            return;\r\n        }\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_) {\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            }\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        each(stats, function (stat, value) {\r\n            var paddedStat = stat;\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++) {\r\n                paddedStat += ' ';\r\n            }\r\n            console.log(paddedStat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    Repo.prototype.log_ = function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status === 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason) {\r\n                        message += ': ' + errorReason;\r\n                    }\r\n                    var error = new Error(message);\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty()) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.path.getBack();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null) {\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            }\r\n            else {\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n            }\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        if (applyLocally === undefined) {\r\n            applyLocally = true;\r\n        }\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next = path.getFront();\r\n        while (next !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n            next = path.getFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        each(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst) {\r\n            action(this);\r\n        }\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst) {\r\n            action(this);\r\n        }\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null) {\r\n                action(child);\r\n            }\r\n            else {\r\n                child.forEachImmediateDescendantWithValue(action);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null) {\r\n            this.parent_.updateChild_(this.name_, this);\r\n        }\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.transactionsInit_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    }\r\n                    else {\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    front = path.getFront();\r\n    while (front !== null && transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n        front = path.getFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(app_, authProvider_) {\r\n        var _this = this;\r\n        this.app_ = app_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\r\nvar EmulatorAdminTokenProvider = /** @class */ (function () {\r\n    function EmulatorAdminTokenProvider() {\r\n    }\r\n    EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\r\n        });\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\r\n    return EmulatorAdminTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        var e_1, _a, e_2, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].interrupt();\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        var e_3, _a, e_4, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_4 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].resume();\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, authProvider, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        var isEmulator;\r\n        var dbEmulatorHost = undefined;\r\n        if (typeof process !== 'undefined') {\r\n            dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n        }\r\n        if (dbEmulatorHost) {\r\n            isEmulator = true;\r\n            dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n            parsedUrl = parseRepoInfo(dbUrl);\r\n            repoInfo = parsedUrl.repoInfo;\r\n        }\r\n        else {\r\n            isEmulator = !parsedUrl.repoInfo.secure;\r\n        }\r\n        var authTokenProvider = util.CONSTANTS.NODE_ADMIN && isEmulator\r\n            ? new EmulatorAdminTokenProvider()\r\n            : new FirebaseAuthTokenProvider(app, authProvider);\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app, authTokenProvider);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        },\r\n        increment: function (delta) {\r\n            return {\r\n                '.sv': {\r\n                    'increment': delta\r\n                }\r\n            };\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            return tslib.__generator(this, function (_a) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.checkDeleted_('delete');\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.repo_ = null;\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\nvar name = \"@firebase/database\";\nvar version = \"0.6.9\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new component.Component('database', function (container, url) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.DataSnapshot = DataSnapshot;\nexports.Database = Database;\nexports.OnDisconnect = OnDisconnect;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.ServerValue = ServerValue;\nexports.enableLogging = enableLogging;\nexports.registerDatabase = registerDatabase;\n//# sourceMappingURL=index.cjs.js.map\n","import image1 from 'url:../../images/spirit-image-1.jpg'\nimport image2 from 'url:../../images/spirit-image-2.jpg'\nimport image3 from 'url:../../images/spirit-image-3.jpg'\nimport image4 from 'url:../../images/spirit-image-4.jpg'\nimport image5 from 'url:../../images/spirit-image-5.jpg'\nimport image6 from 'url:../../images/spirit-image-6.jpg'\n\nconst FLASH_CLASS = 'screen--flash'\nconst ACTIVE_CLASS = 'screen--visible'\nconst BACKGROUND_ID = 'background'\n\nconst animalImages = {\n  image1,\n  image2,\n  image3,\n  image4,\n  image5,\n  image6,\n}\n\nexport default class Visuals {\n  constructor(elem, color) {\n    this.elem = elem\n    this.backgroundElem = document.getElementById(BACKGROUND_ID)\n    this.timeout = null\n  }\n\n  setToColor(color) {\n    this.elem.style.backgroundColor = 'rgb(' + color.join(',') + ')'\n  }\n\n  resetColor() {\n    this.elem.style.backgroundColor = null\n  }\n\n  setAnimal(animalName) {\n    this.elem.classList.add(ACTIVE_CLASS)\n    this.backgroundElem.style.backgroundImage = `url(${animalImages[animalName]})`\n  }\n\n  flash(duration = 200) {\n    if (this.timeout) {\n      clearTimeout(this.timeout)\n    }\n\n    this.elem.classList.add(FLASH_CLASS)\n\n    this.timeout = setTimeout(() => {\n      this.elem.classList.remove(FLASH_CLASS)\n    }, duration)\n  }\n}\n","const UPDATE_RATE = 10\nconst HP_FREQUENCY = 300\nconst LP_FREQUENCY = 4000\n\nexport default class Audio {\n  setup(useMic) {\n    const Tone = require('tone')\n\n    this.agents = []\n\n    // Start our runtime\n    this.startTime = Date.now()\n\n    // this.analyser = new Tone.Waveform(256)\n    this.gain = new Tone.Volume()\n\n    // Create audio nodes\n    if (useMic) {\n      console.log(\"Getting mic\");\n      this.mic = new Tone.UserMedia()\n      console.log(\"Got mic\");\n      // Make the frequency band a little bit more narrow\n      const highpass = new Tone.Filter({\n        frequency: HP_FREQUENCY,\n        type: 'highpass',\n        rolloff: -12,\n        Q: 0.5,\n      })\n\n      const lowpass = new Tone.Filter({\n        frequency: LP_FREQUENCY,\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 0.5,\n      })\n\n      // Use gain to control volume of microphone\n      this.mic.connect(highpass)\n      highpass.connect(lowpass)\n      lowpass.connect(this.gain)\n      // this.gain.connect(this.analyser)\n\n      // Listen ...\n      this.mic.open()\n      console.log(\"Opened mic!\",this.gain)\n    }\n\n    // Start a frequent check by calling the agents update function\n    this.update()\n\n    return true\n  }\n\n  close() {\n    this.mic.close()\n  }\n\n  addAgents(addedAgents) {\n    addedAgents.forEach(newAgent => {\n      this.agents.push(newAgent)\n      newAgent.start()\n    })\n  }\n\n  removeAgents(removedAgents) {\n    const agentNames = removedAgents.map(agent => agent.name)\n\n    this.agents = this.agents.reduce((acc, existingAgent) => {\n      if (agentNames.includes(existingAgent.name)) {\n        existingAgent.stop()\n      } else {\n        acc.push(existingAgent)\n      }\n\n      return acc\n    }, [])\n  }\n\n  update() {\n    setTimeout(() => {\n      // console.log(\"Update\");\n      if (!this.agents) {\n        this.update()\n        return\n      }\n\n      // const values = this.analyser.getValue()\n\n      this.agents.forEach(agent => {\n        agent.update()\n      })\n\n      this.update()\n    }, UPDATE_RATE)\n  }\n}\n","export const version = \"14.7.39\";\n//# sourceMappingURL=version.js.map","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n}(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    _slicedToArray = _slicedToArray && Object.prototype.hasOwnProperty.call(_slicedToArray, 'default') ? _slicedToArray['default'] : _slicedToArray;\n    _classCallCheck = _classCallCheck && Object.prototype.hasOwnProperty.call(_classCallCheck, 'default') ? _classCallCheck['default'] : _classCallCheck;\n    _createClass = _createClass && Object.prototype.hasOwnProperty.call(_createClass, 'default') ? _createClass['default'] : _createClass;\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n          target = _ref.target,\n          timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n\n      if (valueAtStartTime === value) {\n        return value;\n      }\n\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n          startTime = _ref.startTime,\n          values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function () {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck(this, AutomationEventList);\n\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n\n      _createClass(AutomationEventList, [{\n        key: Symbol.iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n\n            var removedAutomationEvent = this._automationEvents[index];\n\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n\n                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n\n          var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n          var index = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n\n          var nextAutomationEvent = this._automationEvents[index];\n          var currentAutomationEvent = getEventTime(lastAutomationEvent) <= time ? lastAutomationEvent : this._automationEvents[index - 1];\n\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf2 = _slicedToArray(_getEndTimeAndValueOf, 2),\n                startTime = _getEndTimeAndValueOf2[0],\n                value = _getEndTimeAndValueOf2[1];\n\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf4 = _slicedToArray(_getEndTimeAndValueOf3, 2),\n                _startTime = _getEndTimeAndValueOf4[0],\n                _value = _getEndTimeAndValueOf4[1];\n\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n\n          return this._defaultValue;\n        }\n      }]);\n\n      return AutomationEventList;\n    }();\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","export const createAbortError = () => {\n    try {\n        return new DOMException('', 'AbortError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 20;\n        err.name = 'AbortError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/abort-error.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-audio-node-connections.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-audio-param-connections.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const BACKUP_NATIVE_CONTEXT_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=/build/es2019/globals.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=/build/es2019/helpers/is-constructible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=/build/es2019/helpers/split-import-statements.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getBackupNativeContext, getNativeContext, ongoingRequests, resolvedRequests, window) => {\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const nativeContext = getNativeContext(context);\n        const absoluteUrl = new URL(moduleURL, window.location.href).toString();\n        // Bug #59: Only Chrome & Opera do implement the audioWorklet property.\n        if (nativeContext.audioWorklet !== undefined) {\n            return fetchSource(moduleURL).then((source) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #170: Chrome and Opera do call process() with an array with empty channelData for each input if no input is\n                 * connected.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })((name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *     process (inputs, outputs, parameters) {\n                 *         return super.process(\n                 *             (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *             outputs,\n                 *             parameters\n                 *         );\n                 *     }\n                 *\n                 * }))`\n                 * ```\n                 */\n                const wrappedSource = `${importStatements};(registerProcessor=>{${sourceWithoutImportStatements}\n})((n,p)=>registerProcessor(n,class extends p{process(i,o,p){return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}))`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                const backupNativeContext = getBackupNativeContext(nativeContext);\n                const nativeContextOrBackupNativeContext = backupNativeContext !== null ? backupNativeContext : nativeContext;\n                return (nativeContextOrBackupNativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => URL.revokeObjectURL(url))\n                    // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n                    .catch((err) => {\n                    URL.revokeObjectURL(url);\n                    if (err.code === undefined || err.name === 'SyntaxError') {\n                        err.code = 12;\n                    }\n                    throw err;\n                }));\n            });\n        }\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const promise = fetchSource(moduleURL)\n            .then((source) => {\n            const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n            /*\n             * This is the unminified version of the code used below:\n             *\n             * ```js\n             * ${ importStatements };\n             * ((a, b) => {\n             *     (a[b] = a[b] || [ ]).push(\n             *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n             *             ${ sourceWithoutImportStatements }\n             *         }\n             *     );\n             * })(window, '_AWGS');\n             * ```\n             */\n            // tslint:disable-next-line:max-line-length\n            const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n            // @todo Evaluating the given source code is a possible security problem.\n            return evaluateSource(wrappedSource);\n        })\n            .then(() => {\n            const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n            if (evaluateAudioWorkletGlobalScope === undefined) {\n                throw new SyntaxError();\n            }\n            exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n            }, undefined, (name, processorCtor) => {\n                if (name.trim() === '') {\n                    throw createNotSupportedError();\n                }\n                const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                if (nodeNameToProcessorConstructorMap !== undefined) {\n                    if (nodeNameToProcessorConstructorMap.has(name)) {\n                        throw createNotSupportedError();\n                    }\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                }\n                else {\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                }\n            }, nativeContext.sampleRate, undefined, undefined));\n        })\n            .catch((err) => {\n            if (err.code === undefined || err.name === 'SyntaxError') {\n                err.code = 12;\n            }\n            throw err;\n        });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const rslvdRqstsFCntxt = resolvedRequests.get(context);\n            if (rslvdRqstsFCntxt === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                rslvdRqstsFCntxt.add(moduleURL);\n            }\n        })\n            .catch(() => { }) // tslint:disable-line:no-empty\n            // @todo Use finally when it becomes available in all supported browsers.\n            .then(() => {\n            const ngngRqstsFCntxt = ongoingRequests.get(context);\n            if (ngngRqstsFCntxt !== undefined) {\n                ngngRqstsFCntxt.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-audio-worklet-module.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        nativeAudioScheduledSourceNode\n            .connect(nativeGainNode)\n            /*\n             * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n             * used here to make sure to connect the right destination.\n             */\n            .connect(nativeGainNode.context.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-silent-connection.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-unrendered-audio-worklet-node.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class AnalyserNode extends audionNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null));\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/analyser-node-constructor.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=/build/es2019/helpers/is-owned-by-context.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAnalyserNodes = new WeakMap();\n        const createAnalyserNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAnalyserNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode, trace);\n            return nativeAnalyserNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n                return createAnalyserNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/analyser-node-renderer-factory.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const createIndexSizeError = () => {\n    try {\n        return new DOMException('', 'IndexSizeError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 1;\n        err.name = 'IndexSizeError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/index-size-error.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-buffer-constructor.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=/build/es2019/constants.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=/build/es2019/helpers/get-value-for-key.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-event-listeners-of-audio-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=/build/es2019/helpers/set-internal-state-to-active.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=/build/es2019/helpers/set-internal-state-to-passive.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = options.buffer !== null && options.buffer !== undefined;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            // Bug #71: Edge does not allow to set the buffer to null.\n            try {\n                this._nativeAudioBufferSourceNode.buffer = value;\n            }\n            catch (err) {\n                if (value !== null || err.code !== 17) {\n                    throw err;\n                }\n                // This will modify the buffer in place. Luckily that works in Edge and has the same effect as setting the buffer to null.\n                if (this._nativeAudioBufferSourceNode.buffer !== null) {\n                    const buffer = this._nativeAudioBufferSourceNode.buffer;\n                    const numberOfChannels = buffer.numberOfChannels;\n                    for (let i = 0; i < numberOfChannels; i += 1) {\n                        buffer.getChannelData(i).fill(0);\n                    }\n                    this._isBufferNullified = true;\n                }\n            }\n            // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n            else {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => setInternalStateToPassive(this), 1000);\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-buffer-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode, trace);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-buffer-source-node-renderer-factory.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return (latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));\n};\n//# sourceMappingURL=/build/es2019/helpers/is-valid-latency-hint.js.map","import { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n    return class AudioContext extends baseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Opera throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Only Chrome, Firefox and Opera support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Opera pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close();\n            /*\n             * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n             * ...then(() => deleteAudioGraph(this, this._nativeAudioContext));\n             */\n        }\n        createMediaElementSource(mediaElement) {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n        createMediaStreamDestination() {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n        createMediaStreamSource(mediaStream) {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n        createMediaStreamTrackSource(mediaStreamTrack) {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-context-constructor.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Edge and Safari do not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    let nativeAudioDestinationNodePromise = null;\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext, trace) {\n            if (nativeAudioDestinationNodePromise === null) {\n                nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n            }\n            return nativeAudioDestinationNodePromise;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-destination-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome & Opera support the new interface already.\n        const createFakeAudioParams = () => {\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n            const createFakeAudioParam = (input, value) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: value\n                });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return value;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                return createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            };\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            // tslint:disable-next-line:deprecation\n            scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                const orientation = [\n                    inputBuffer.getChannelData(0)[0],\n                    inputBuffer.getChannelData(1)[0],\n                    inputBuffer.getChannelData(2)[0],\n                    inputBuffer.getChannelData(3)[0],\n                    inputBuffer.getChannelData(4)[0],\n                    inputBuffer.getChannelData(5)[0]\n                ];\n                if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                    nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                    lastOrientation = orientation;\n                }\n                const positon = [\n                    inputBuffer.getChannelData(6)[0],\n                    inputBuffer.getChannelData(7)[0],\n                    inputBuffer.getChannelData(8)[0]\n                ];\n                if (positon.some((value, index) => value !== lastPosition[index])) {\n                    nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                    lastPosition = positon;\n                }\n            };\n            channelMergerNode.connect(scriptProcessorNode);\n            return {\n                forwardX: createFakeAudioParam(0, 0),\n                forwardY: createFakeAudioParam(1, 0),\n                forwardZ: createFakeAudioParam(2, -1),\n                positionX: createFakeAudioParam(6, 0),\n                positionY: createFakeAudioParam(7, 0),\n                positionZ: createFakeAudioParam(8, 0),\n                upX: createFakeAudioParam(3, 0),\n                upY: createFakeAudioParam(4, 1),\n                upZ: createFakeAudioParam(5, 0)\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-listener-factory.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=/build/es2019/guards/audio-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=/build/es2019/guards/audio-node-output-connection.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=/build/es2019/guards/audio-worklet-node.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=/build/es2019/guards/native-audio-node-faker.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/delete-event-listeners-of-audio-node.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-audio-param-connections.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-native-audio-param.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=/build/es2019/helpers/insert-element-in-set.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=/build/es2019/helpers/is-active-audio-node.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/is-passive-audio-node.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=/build/es2019/helpers/pick-element-from-set.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext) => {\n    return new Promise((resolve) => {\n        const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);\n        const dummy = nativeAudioContext.createGain();\n        // Bug #95: Safari does not play one sample buffers.\n        const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n        const channelData = ones.getChannelData(0);\n        channelData[0] = 1;\n        channelData[1] = 1;\n        const source = nativeAudioContext.createBufferSource();\n        source.buffer = ones;\n        source.loop = true;\n        source.connect(analyzer).connect(nativeAudioContext.destination);\n        source.connect(dummy);\n        source.disconnect(dummy);\n        // tslint:disable-next-line:deprecation\n        analyzer.onaudioprocess = (event) => {\n            const chnnlDt = event.inputBuffer.getChannelData(0);\n            if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                resolve(true);\n            }\n            else {\n                resolve(false);\n            }\n            source.stop();\n            analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n            source.disconnect(analyzer);\n            analyzer.disconnect(nativeAudioContext.destination);\n        };\n        source.start();\n    });\n};\n//# sourceMappingURL=/build/es2019/helpers/test-audio-node-disconnect-method-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=/build/es2019/helpers/visit-each-audio-node-once.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=/build/es2019/guards/native-audio-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        // tslint:disable-next-line:invalid-void\n        return (destination, output = 0, input = 0) => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-node-disconnect-method.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { getValueForKey } from '../helpers/get-value-for-key';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { pickElementFromSet } from '../helpers/pick-element-from-set';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addActiveInputConnectionToAudioNode = (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\nconst addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\nconst deleteActiveInputConnectionToAudioNode = (activeInputs, source, output, input) => {\n    return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\nconst deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\nconst addPassiveInputConnectionToAudioNode = (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, input, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n    }\n};\nconst addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n    }\n};\nconst deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\nconst deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\nconst addConnectionToAudioNodeOfAudioContext = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = ((isActive) => {\n        const nativeDestinationAudioNode = getNativeAudioNode(destination);\n        const nativeSourceAudioNode = getNativeAudioNode(source);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n            addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n            if (!isPartOfACycle(source)) {\n                connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n            }\n            if (isPassiveAudioNode(destination)) {\n                setInternalStateToActive(destination);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n            addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n            if (!isPartOfACycle(source)) {\n                disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n            }\n            if (isActiveAudioNode(destination)) {\n                setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n            }\n        }\n    });\n    if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst addConnectionToAudioNodeOfOfflineAudioContext = (source, destination, output, input) => {\n    const { outputs } = getAudioNodeConnections(source);\n    if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, null], true);\n        return true;\n    }\n    return false;\n};\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = ((isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    });\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst addConnectionToAudioParamOfOfflineAudioContext = (source, destination, output) => {\n    const { outputs } = getAudioNodeConnections(source);\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        const { activeInputs } = getAudioParamConnections(destination);\n        addActiveInputConnectionToAudioParam(activeInputs, source, [output, null], true);\n        return true;\n    }\n    return false;\n};\nconst deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => outputConnection[0] === destination &&\n        (output === undefined || outputConnection[1] === output) &&\n        (input === undefined || outputConnection[2] === input))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, auxiliaryGainNodeStore, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext);\n                    })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        // tslint:disable-next-line:invalid-void\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    if (isOffline || isPassiveAudioNode(this)) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    else if (isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                    // An AudioWorklet needs a connection because it otherwise may truncate the input array.\n                    // @todo Count the number of connections which depend on this auxiliary GainNode to know when it can be removed again.\n                    if (isAudioWorkletNode(destination)) {\n                        const auxiliaryGainNodes = auxiliaryGainNodeStore.get(nativeDestinationAudioNode);\n                        if (auxiliaryGainNodes === undefined) {\n                            const nativeGainNode = nativeContext.createGain();\n                            nativeGainNode.connect(connection[0], 0, connection[2]);\n                            auxiliaryGainNodeStore.set(nativeDestinationAudioNode, new Map([[input, nativeGainNode]]));\n                        }\n                        else if (auxiliaryGainNodes.get(input) === undefined) {\n                            const nativeGainNode = nativeContext.createGain();\n                            nativeGainNode.connect(connection[0], 0, connection[2]);\n                            auxiliaryGainNodes.set(input, nativeGainNode);\n                        }\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Only Chrome, Firefox and Opera throw the correct exception by now.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = isOffline\n                    ? addConnectionToAudioNodeOfOfflineAudioContext(this, destination, output, input)\n                    : addConnectionToAudioNodeOfAudioContext(this, destination, output, input);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari.\n             */\n            if (nativeAudioParam.name === 'playbackRate') {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Only Firefox does throw an InvalidStateError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = isOffline\n                ? addConnectionToAudioParamOfOfflineAudioContext(this, destination, output)\n                : addConnectionToAudioParamOfAudioContext(this, destination, output);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-node-constructor.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue() {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Edge, Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Edge, Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array.from(automationEventList).pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((values.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? values[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        audioParam.setValueAtTime(interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    audioParam.setValueAtTime(values[values.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(values, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-param-factory.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-param-renderer.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=/build/es2019/read-only-map.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    outputChannelCount: undefined,\n    parameterData: {},\n    processorOptions: {}\n};\nconst createChannelCount = (length) => {\n    const channelCount = [];\n    for (let i = 0; i < length; i += 1) {\n        channelCount.push(1);\n    }\n    return channelCount;\n};\nconst sanitizedOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: options.outputChannelCount !== undefined\n            ? options.outputChannelCount\n            : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                    [options.channelCount]\n                : createChannelCount(options.numberOfOutputs)\n    };\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizedOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap === undefined ? undefined : nodeNameToProcessorConstructorMap.get(name);\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-worklet-node-constructor.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=/build/es2019/helpers/copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/copy-to-channel.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = typeof y === 'number' ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=/build/es2019/helpers/create-nested-arrays.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-audio-worklet-processor.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = numberOfOutputChannels === 0\n        ? null\n        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, options.outputChannelCount);\n    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += options.outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', { error }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: options.outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset, trace);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode, trace)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm), trace);\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm), trace);\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode, trace);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-worklet-node-renderer-factory.js.map","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                        addModule: (moduleURL, options) => {\n                            return addAudioWorkletModule(this, moduleURL, options);\n                        }\n                    };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData)\n                .then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            })\n                .catch((err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/base-audio-context-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class BiquadFilterNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = (isOffline ? createBiquadFilterNodeRenderer() : null);\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n            /*\n             * Bug #77: Edge does not export the correct values for maxValue and minValue. Firefox & Safari do not export the correct value\n             * for minValue.\n             */\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            // Bug #68: Only Chrome, Firefox & Opera do throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/biquad-filter-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeBiquadFilterNodes = new WeakMap();\n        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode, trace);\n            return nativeBiquadFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/biquad-filter-node-renderer-factory.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/cache-test-result.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null));\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/channel-merger-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/channel-merger-node-renderer-factory.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nconst sanitizedOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelSplitterNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizedOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null));\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/channel-splitter-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/channel-splitter-node-renderer-factory.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/connect-audio-param.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/connect-multiple-outputs.js.map","export const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, nativeContext.sampleRate);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline ? createConstantSourceNodeRendererFactory() : null));\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and\n             * minValue for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            else {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => setInternalStateToPassive(this), 1000);\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/constant-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode, trace);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/constant-source-node-renderer-factory.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/convert-number-to-unsigned-long.js.map","const DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ConvolverNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = (isOffline ? createConvolverNodeRenderer() : null);\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n                this._isBufferNullified = true;\n            }\n            else {\n                this._isBufferNullified = false;\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/convolver-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeConvolverNode = getNativeAudioNode(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode, trace);\n            }\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/convolver-node-renderer-factory.js.map","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        }\n        catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            // Bug #143: Edge throws a SyntaxError when numberOfChannels or length are invalid.\n            // Bug #145: Edge throws an IndexSizeError when sampleRate is zero.\n            if (err.name === 'IndexSizeError' || err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n            throw err;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/create-native-offline-audio-context.js.map","export const createDataCloneError = () => {\n    try {\n        return new DOMException('', 'DataCloneError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 25;\n        err.name = 'DataCloneError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/data-clone-error.js.map","export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1 } = new MessageChannel();\n    port1.postMessage(arrayBuffer, [arrayBuffer]);\n};\n//# sourceMappingURL=/build/es2019/helpers/detach-array-buffer.js.map","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, isNativeOfflineAudioContext, nativeOfflineAudioContextConstructor, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n        // Bug #43: Only Chrome and Opera do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        }\n        catch {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            // Bug #101: Edge does not decode something on a closed OfflineAudioContext.\n            const nativeContextOrBackupNativeContext = nativeContext.state === 'closed' &&\n                nativeOfflineAudioContextConstructor !== null &&\n                isNativeOfflineAudioContext(nativeContext)\n                ? new nativeOfflineAudioContextConstructor(1, 1, nativeContext.sampleRate)\n                : nativeContext;\n            const promise = nativeContextOrBackupNativeContext.decodeAudioData(audioData).catch((err) => {\n                // Bug #27: Edge is rejecting invalid arrayBuffers with a DOMException.\n                if (err instanceof DOMException && err.name === 'NotSupportedError') {\n                    throw new TypeError();\n                }\n                throw err;\n            });\n            return promise.then((audioBuffer) => {\n                // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    detachArrayBuffer(audioData);\n                }\n                catch {\n                    // Ignore errors.\n                }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete();\n                    resolve(audioBuffer);\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/decode-audio-data.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/decrement-cycle-counter.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class DelayNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = (isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n            // Bug #161: Edge does not export the correct values for maxValue and minValue.\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime, mergedOptions.maxDelayTime, 0);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/delay-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return (maxDelayTime) => {\n        const renderedNativeDelayNodes = new WeakMap();\n        const createDelayNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeDelayNode = getNativeAudioNode(proxy);\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode, trace);\n            return nativeDelayNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n                return createDelayNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/delay-node-renderer-factory.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/delete-unrendered-audio-worklet-node.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=/build/es2019/guards/delay-node.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/detect-cycles.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/disconnect-multiple-outputs.js.map","const DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext) => {\n    return class DynamicsCompressorNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = (isOffline ? createDynamicsCompressorNodeRenderer() : null);\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n            // Bug #110: Edge does not export the correct values for maxValue and minValue.\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack, 1, 0);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee, 40, 0);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio, 20, 1);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release, 1, 0);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold, 0, -100);\n        }\n        get attack() {\n            return this._attack;\n        }\n        /*\n         * Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet which is why the getter and setter needs\n         * to be overwritten here.\n         */\n        get channelCount() {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n            this._nativeDynamicsCompressorNode.channelCount = value;\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        /*\n         * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode() {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        get knee() {\n            return this._knee;\n        }\n        get ratio() {\n            return this._ratio;\n        }\n        get reduction() {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n                return this._nativeDynamicsCompressorNode.reduction.value;\n            }\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n        get release() {\n            return this._release;\n        }\n        get threshold() {\n            return this._threshold;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/dynamics-compressor-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap();\n        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode, trace);\n            return nativeDynamicsCompressorNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/dynamics-compressor-node-renderer-factory.js.map","export const createEncodingError = () => {\n    try {\n        return new DOMException('', 'EncodingError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 0;\n        err.name = 'EncodingError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/encoding-error.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=/build/es2019/factories/evaluate-source.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/event-target-constructor.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/expose-current-frame-and-current-time.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return response.text();\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/fetch-source.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class GainNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = (isOffline ? createGainNodeRenderer() : null);\n            super(context, false, nativeGainNode, gainNodeRenderer);\n            // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/gain-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeGainNodes = new WeakMap();\n        const createGainNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeGainNode = getNativeAudioNode(proxy);\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode, trace);\n            return nativeGainNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n                return createGainNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/gain-node-renderer-factory.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-audio-node-renderer.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-audio-param-renderer.js.map","import { BACKUP_NATIVE_CONTEXT_STORE } from '../globals';\nexport const createGetBackupNativeContext = (isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        /*\n         * Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet which is why there needs to be no\n         * backupNativeContext in that case.\n         */\n        if (nativeContext.state === 'closed' &&\n            nativeAudioContextConstructor !== null &&\n            nativeAudioContextConstructor.name !== 'webkitAudioContext') {\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n                if (backupNativeContext !== undefined) {\n                    return backupNativeContext;\n                }\n                if (nativeOfflineAudioContextConstructor !== null) {\n                    // @todo Copy the attached AudioWorkletProcessors and other settings.\n                    const bckpNtveCntxt = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n                    BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n                    return bckpNtveCntxt;\n                }\n            }\n            else {\n                const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n                if (backupNativeContext !== undefined) {\n                    return backupNativeContext;\n                }\n                // @todo Copy the attached AudioWorkletProcessors and other settings.\n                const bckpNtveCntxt = new nativeAudioContextConstructor();\n                BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n                return bckpNtveCntxt;\n            }\n        }\n        return null;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-backup-native-context.js.map","export const createInvalidStateError = () => {\n    try {\n        return new DOMException('', 'InvalidStateError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 11;\n        err.name = 'InvalidStateError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/invalid-state-error.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-native-context.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-unrendered-audio-worklet-nodes.js.map","export const createInvalidAccessError = () => {\n    try {\n        return new DOMException('', 'InvalidAccessError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 15;\n        err.name = 'InvalidAccessError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/invalid-access-error.js.map","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz, magResponse, phaseResponse) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js.map","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class IIRFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null));\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/iir-filter-node-constructor.js.map","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n    const inputLength = input.length;\n    let i = bufferIndex;\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n        output[j] = y;\n    }\n    return i;\n};\n//# sourceMappingURL=/build/es2019/helpers/filter-buffer.js.map","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n    const feedbackLength = feedback.length;\n    const feedforwardLength = feedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (feedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            feedforward[i] /= feedback[0];\n        }\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            feedback[i] /= feedback[0];\n        }\n    }\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n        filterBuffer(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n    }\n    return filteredBuffer;\n};\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, createNativeAudioNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (feedback, feedforward) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let filteredBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode(proxy);\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            }\n            else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                nativeIIRFilterNode = createNativeAudioNode(nativeOfflineAudioContext, (ntvCntxt) => {\n                    return ntvCntxt.createIIRFilter(feedforward, feedback);\n                });\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                    // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.\n                    proxy.context.destination.channelCount, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination, trace);\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n                const filteredBuffer = await filteredBufferPromise;\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n                return nativeAudioBufferSourceNode;\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode, trace);\n            return nativeIIRFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/iir-filter-node-renderer-factory.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/increment-cycle-counter-factory.js.map","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-any-audio-context.js.map","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};\n//# sourceMappingURL=/build/es2019/factories/is-any-audio-node.js.map","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};\n//# sourceMappingURL=/build/es2019/factories/is-any-audio-param.js.map","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-any-offline-audio-context.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-audio-param.js.map","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-context.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-offline-audio-context.js.map","export const createIsSecureContext = (window) => window !== null && window.isSecureContext;\n//# sourceMappingURL=/build/es2019/factories/is-secure-context.js.map","export const createIsSupportedPromise = async (cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) => {\n    if (cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) &&\n        cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) &&\n        cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) &&\n        cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) &&\n        cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) &&\n        cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) &&\n        cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) &&\n        cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) &&\n        cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)) {\n        const results = await Promise.all([\n            cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport),\n            cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport),\n            cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport),\n            cacheTestResult(testTransferablesSupport, testTransferablesSupport)\n        ]);\n        return results.every((result) => result);\n    }\n    return false;\n};\n//# sourceMappingURL=/build/es2019/factories/is-supported-promise.js.map","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            // Bug #63: Edge does not expose the mediaElement yet.\n            this._mediaElement = options.mediaElement;\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return this._nativeMediaElementAudioSourceNode.mediaElement === undefined\n                ? this._mediaElement\n                : this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-element-audio-source-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-stream-audio-destination-node-constructor.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-stream-audio-source-node-constructor.js.map","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-stream-track-audio-source-node-constructor.js.map","import { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Opera throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Only Chrome, Firefox and Opera support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Opera pretend to be running right away, but fire an onstatechange event when the state actually\n             * changes to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close();\n            /*\n             * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n             * ...then(() => deleteAudioGraph(this, this._nativeAudioContext));\n             */\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/minimal-audio-context-constructor.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            // Bug #93: Edge will set the sampleRate of an AudioContext to zero when it is closed.\n            const sampleRate = _nativeContext.sampleRate;\n            Object.defineProperty(_nativeContext, 'sampleRate', {\n                get: () => sampleRate\n            });\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange =\n                nativeOnStateChange !== null && nativeOnStateChange === wrappedListener\n                    ? value\n                    : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/minimal-base-audio-context-constructor.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=/build/es2019/helpers/test-promise-support.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering) => {\n    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options) {\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return (startRendering(this.destination, this._nativeOfflineAudioContext)\n                .then((audioBuffer) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                return audioBuffer;\n            })\n                // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n                .catch((err) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                throw err;\n            }));\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/minimal-offline-audio-context-constructor.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            // tslint:disable-next-line:invalid-void\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/monitor-connections.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=/build/es2019/helpers/assign-native-audio-node-options.js.map","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n//# sourceMappingURL=/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js.map","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n        return array;\n    };\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError, createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createAnalyser());\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-analyser-node-factory.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-buffer-constructor.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/assign-native-audio-node-audio-param-value.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const wrapAudioBufferSourceNodeStartMethodDurationParameter = (nativeAudioScheduledSourceNode, nativeContext) => {\n    let endTime = Number.POSITIVE_INFINITY;\n    let stopTime = Number.POSITIVE_INFINITY;\n    nativeAudioScheduledSourceNode.start = ((start, stop) => {\n        return (when = 0, offset = 0, duration = Number.POSITIVE_INFINITY) => {\n            start.call(nativeAudioScheduledSourceNode, when, offset);\n            if (duration >= 0 && duration < Number.POSITIVE_INFINITY) {\n                const actualStartTime = Math.max(when, nativeContext.currentTime);\n                // @todo The playbackRate could of course also have been automated and is not always fixed.\n                const durationInBufferTime = duration / nativeAudioScheduledSourceNode.playbackRate.value;\n                endTime = actualStartTime + durationInBufferTime;\n                stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));\n            }\n        };\n    })(nativeAudioScheduledSourceNode.start, nativeAudioScheduledSourceNode.stop);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            stopTime = Math.max(when, nativeContext.currentTime);\n            stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioBufferSourceNodeStartMethodDurationParameter } from '../helpers/wrap-audio-buffer-source-node-start-method-duration-parameter';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        // Bug #71: Edge does not allow to set the buffer to null.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #92: Chrome & Edge do not respect the duration parameter yet.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport)) {\n            wrapAudioBufferSourceNodeStartMethodDurationParameter(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-buffer-source-node-factory.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-context-constructor.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Edge & Safari do not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Edge & Safari do not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Edge and Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-destination-node.js.map","export const createNativeAudioNodeFactory = (getBackupNativeContext) => {\n    return (nativeContext, factoryFunction) => {\n        // Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet.\n        const backupNativeContext = getBackupNativeContext(nativeContext);\n        if (backupNativeContext !== null) {\n            return factoryFunction(backupNativeContext);\n        }\n        return factoryFunction(nativeContext);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-node-factory.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-worklet-node-constructor.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioNode, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n                    return new nativeAudioWorkletNodeConstructor(ntvCntxt, name, options);\n                });\n                const patchedEventListeners = new Map();\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome & Opera do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = typeof value === 'function' ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = typeof args[1] === 'function'\n                                ? args[1]\n                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        unpatchedEventListener(new ErrorEvent(args[0], { ...event, error: new Error( /* @todo */) }));\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        return addEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome & Opera do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but has\n                 * an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n                    nativeAudioWorkletNode\n                        .connect(nativeGainNode)\n                        /*\n                         * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n                         * used here to make sure to connect the right destination.\n                         */\n                        .connect(nativeGainNode.context.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    /*\n                     * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n                     * used here to make sure to connect the right destination.\n                     */\n                    const whenDisconnected = () => nativeGainNode.connect(nativeGainNode.context.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome & Opera throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-worklet-node-factory.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=/build/es2019/helpers/compute-buffer-size.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=/build/es2019/helpers/clone-audio-worklet-node-options.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=/build/es2019/helpers/create-audio-worklet-processor-promise.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=/build/es2019/helpers/create-audio-worklet-processor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (auxiliaryGainNodeStore, connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        if (options.outputChannelCount !== undefined) {\n            // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n            if (options.outputChannelCount.some((channelCount) => channelCount < 1)) {\n                throw createNotSupportedError();\n            }\n            if (options.outputChannelCount.length !== options.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: options.parameterData[name] !== undefined\n                        ? options.parameterData[name]\n                        : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: options.outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = typeof value === 'function' ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map();\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = typeof args[1] === 'function'\n                        ? args[1]\n                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = typeof value === 'function' ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, options.outputChannelCount);\n        const parameters = processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n            }\n        };\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const auxiliaryGainNodes = auxiliaryGainNodeStore.get(nativeAudioWorkletNodeFaker);\n                            if (auxiliaryGainNodes === undefined || auxiliaryGainNodes.get(index) === undefined) {\n                                return [];\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += options.outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', { error }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        const connectFakeGraph = () => scriptProcessorNode\n            .connect(nativeGainNode)\n            /*\n             * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is used here\n             * to make sure to connect the right destination.\n             */\n            .connect(nativeGainNode.context.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-worklet-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeBiquadFilterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBiquadFilter());\n        assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n        assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n        return nativeBiquadFilterNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-biquad-filter-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (createNativeAudioNode, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createChannelMerger(options.numberOfInputs);\n        });\n        // Bug #15: Safari does not return the default properties.\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        if (nativeChannelMergerNode.channelCount !== 1 && nativeChannelMergerNode.channelCountMode !== 'explicit') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-channel-merger-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    /*\n     * Bug #30: Only Chrome, Firefox & Opera throw an error when attempting to change the channelCountMode to something other than\n     * explicit.\n     */\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    /*\n     * Bug #32: Only Chrome, Firefox & Opera throws an error when attempting to change the channelInterpretation to something other than\n     * discrete.\n     */\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-channel-splitter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelSplitterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createChannelSplitter(options.numberOfOutputs);\n        });\n        // Bug #96: Safari does not have the correct channelCount.\n        // Bug #29: Edge & Safari do not have the correct channelCountMode.\n        // Bug #31: Edge & Safari do not have the correct channelInterpretation.\n        assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n        // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Firefox & Opera partially support the spec yet.\n        wrapChannelSplitterNode(nativeChannelSplitterNode);\n        return nativeChannelSplitterNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-channel-splitter-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createConstantSource();\n        });\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-constant-source-node-factory.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=/build/es2019/helpers/intercept-connections.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, nativeContext.sampleRate);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNativeAudioNode, createNativeConvolverNodeFaker, createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createConvolver());\n        try {\n            // Bug #166: Opera does not allow yet to set the channelCount to 1.\n            nativeConvolverNode.channelCount = 1;\n        }\n        catch (err) {\n            return createNativeConvolverNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n        // Bug #113: Edge & Safari allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCount', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value > 2) {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        // Bug #114: Edge & Safari allow to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCountMode', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value === 'max') {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        return nativeConvolverNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-convolver-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConvolverNodeFakerFactory = (createNativeAudioNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { buffer, channelCount, channelCountMode, channelInterpretation, disableNormalization }) => {\n        const convolverNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createConvolver());\n        assignNativeAudioNodeOptions(convolverNode, {\n            // Bug #166: Opera does not allow yet to set the channelCount to 1.\n            channelCount: Math.max(channelCount, 2),\n            // Bug #167: Opera does not allow yet to set the channelCountMode to 'explicit'.\n            channelCountMode: channelCountMode === 'max' ? channelCountMode : 'clamped-max',\n            channelInterpretation\n        });\n        const gainNode = createNativeGainNode(nativeContext, { channelCount, channelCountMode, channelInterpretation, gain: 1 });\n        const nativeConvolverNodeFaker = {\n            get buffer() {\n                return convolverNode.buffer;\n            },\n            set buffer(value) {\n                convolverNode.buffer = value;\n            },\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #166: Opera does not allow yet to set the channelCount to 1.\n                if (value > 2) {\n                    convolverNode.channelCount = value;\n                }\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #167: Opera does not allow yet to set the channelCountMode to 'explicit'.\n                if (value === 'max') {\n                    convolverNode.channelCountMode = value;\n                }\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return convolverNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                convolverNode.channelInterpretation = value;\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return convolverNode.context;\n            },\n            get inputs() {\n                return [convolverNode];\n            },\n            get numberOfInputs() {\n                return convolverNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return convolverNode.numberOfOutputs;\n            },\n            get normalize() {\n                return convolverNode.normalize;\n            },\n            set normalize(value) {\n                convolverNode.normalize = value;\n            },\n            addEventListener(...args) {\n                return convolverNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return convolverNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return convolverNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        // The normalize property needs to be set before setting the buffer.\n        if (disableNormalization === nativeConvolverNodeFaker.normalize) {\n            nativeConvolverNodeFaker.normalize = !disableNormalization;\n        }\n        if (buffer !== nativeConvolverNodeFaker.buffer) {\n            nativeConvolverNodeFaker.buffer = buffer;\n        }\n        const whenConnected = () => convolverNode.connect(gainNode);\n        const whenDisconnected = () => convolverNode.disconnect(gainNode);\n        return monitorConnections(interceptConnections(nativeConvolverNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-convolver-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeDelayNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createDelay(options.maxDelayTime));\n        assignNativeAudioNodeOptions(nativeDelayNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n        return nativeDelayNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-delay-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createDynamicsCompressor());\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-dynamics-compressor-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeGainNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createGain());\n        assignNativeAudioNodeOptions(nativeGainNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n        return nativeGainNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-gain-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeAudioNode, createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        const nativeIIRFilterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createIIRFilter(options.feedforward, options.feedback);\n        });\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-iir-filter-node-factory.js.map","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nfunction divide(a, b) {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\nfunction multiply(a, b) {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\nfunction evaluatePolynomial(coefficient, z) {\n    let result = [0, 0];\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n        result[0] += coefficient[i];\n    }\n    return result;\n}\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const feedbackLength = feedback.length;\n        const feedforwardLength = feedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n        if (feedback.length === 0 || feedback.length > 20) {\n            throw createNotSupportedError();\n        }\n        if (feedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedforward.length === 0 || feedforward.length > 20) {\n            throw createNotSupportedError();\n        }\n        if (feedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                feedforward[i] /= feedback[0];\n            }\n            for (let i = 1; i < feedbackLength; i += 1) {\n                feedback[i] /= feedback[0];\n            }\n        }\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n        const bufferLength = 32;\n        const bufferIndexes = [];\n        const xBuffers = [];\n        const yBuffers = [];\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n            const numberOfChannels = inputBuffer.numberOfChannels;\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n                bufferIndexes[i] = filterBuffer(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n            }\n        };\n        const nyquist = nativeContext.sampleRate / 2;\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs() {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args) {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n                const length = frequencyHz.length;\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(feedforward, z);\n                    const denominator = evaluatePolynomial(feedback, z);\n                    const response = divide(numerator, denominator);\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-iir-filter-node-faker-factory.js.map","export const createNativeMediaElementAudioSourceNodeFactory = (createNativeAudioNode) => {\n    return (nativeAudioContext, options) => createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n        return ntvDCntxt.createMediaElementSource(options.mediaElement);\n    });\n};\n//# sourceMappingURL=/build/es2019/factories/native-media-element-audio-source-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n    return (nativeAudioContext, options) => {\n        // Bug #64: Edge does not support MediaStreamAudioDestinationNodes.\n        if (nativeAudioContext.createMediaStreamDestination === undefined) {\n            throw createNotSupportedError();\n        }\n        const nativeMediaStreamAudioDestinationNode = createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n            return ntvDCntxt.createMediaStreamDestination();\n        });\n        assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n        // Bug #174: Safari does expose a wrong numberOfOutputs.\n        if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n            Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n        }\n        return nativeMediaStreamAudioDestinationNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-media-stream-audio-destination-node-factory.js.map","export const createNativeMediaStreamAudioSourceNodeFactory = (createNativeAudioNode) => {\n    return (nativeAudioContext, { mediaStream }) => {\n        const audioStreamTracks = mediaStream.getAudioTracks();\n        const nativeMediaStreamAudioSourceNode = createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n            /*\n             * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n             * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n             */\n            const filteredAudioStreamTracks = audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0)).slice(0, 1);\n            return ntvDCntxt.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n        });\n        // Bug #63: Edge does not expose the mediaStream yet.\n        Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-media-stream-audio-source-node-factory.js.map","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, createNativeAudioNode, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => ntvDCntxt.createMediaStreamTrackSource(mediaStreamTrack));\n        }\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        return createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n            const mediaStream = new MediaStream([mediaStreamTrack]);\n            const nativeMediaStreamAudioSourceNode = ntvDCntxt.createMediaStreamSource(mediaStream);\n            // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n            if (mediaStreamTrack.kind !== 'audio') {\n                throw createInvalidStateError();\n            }\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(ntvDCntxt)) {\n                throw new TypeError();\n            }\n            return nativeMediaStreamAudioSourceNode;\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=/build/es2019/factories/native-offline-audio-context-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createOscillator());\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        }\n        else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n        // Bug #44: Only Chrome & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n        return nativeOscillatorNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-oscillator-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativeAudioNode, createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createPanner());\n        // Bug #124: Edge & Safari do not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-panner-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections) => {\n    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n        const pannerNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createPanner());\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        };\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n        let lastOrientation = [orientationX, orientationY, orientationZ];\n        let lastPosition = [positionX, positionY, positionZ];\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation = [\n                inputBuffer.getChannelData(0)[0],\n                inputBuffer.getChannelData(1)[0],\n                inputBuffer.getChannelData(2)[0]\n            ];\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n                lastOrientation = orientation;\n            }\n            const positon = [\n                inputBuffer.getChannelData(3)[0],\n                inputBuffer.getChannelData(4)[0],\n                inputBuffer.getChannelData(5)[0]\n            ];\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n                lastPosition = positon;\n            }\n        };\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativePannerNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle() {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle() {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain() {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Edge & Safari do not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n                pannerNode.coneOuterGain = value;\n            },\n            get context() {\n                return pannerNode.context;\n            },\n            get distanceModel() {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get maxDistance() {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Edge & Safari do not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs() {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX() {\n                return orientationXGainNode.gain;\n            },\n            get orientationY() {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ() {\n                return orientationZGainNode.gain;\n            },\n            get panningModel() {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n                // Bug #123: Edge does not support HRTF as panningModel.\n                if (pannerNode.panningModel !== value && value === 'HRTF') {\n                    throw createNotSupportedError();\n                }\n            },\n            get positionX() {\n                return positionXGainNode.gain;\n            },\n            get positionY() {\n                return positionYGainNode.gain;\n            },\n            get positionZ() {\n                return positionZGainNode.gain;\n            },\n            get refDistance() {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Edge & Safari do not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor() {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Edge & Safari do not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-panner-node-faker-factory.js.map","export const createNativePeriodicWaveFactory = (getBackupNativeContext) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #50: Only Edge does currently not allow to create AudioNodes (and other objects) on a closed context yet.\n        const backupNativeContext = getBackupNativeContext(nativeContext);\n        // @todo Edge, Firefox & Safari do only accept Float32Arrays.\n        const wrappedImag = new Float32Array(imag);\n        const wrappedReal = new Float32Array(real);\n        if (backupNativeContext !== null) {\n            return backupNativeContext.createPeriodicWave(wrappedReal, wrappedImag, { disableNormalization });\n        }\n        return nativeContext.createPeriodicWave(wrappedReal, wrappedImag, { disableNormalization });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-periodic-wave-factory.js.map","export const createNativeScriptProcessorNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n        return createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-script-processor-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeAudioNode, createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n    return (nativeContext, options) => createNativeAudioNode(nativeContext, (ntvCntxt) => {\n        const channelCountMode = options.channelCountMode;\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n        const nativeStereoPannerNode = ntvCntxt.createStereoPanner();\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeStereoPannerNode;\n    });\n};\n//# sourceMappingURL=/build/es2019/factories/native-stereo-panner-node-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };\n    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve }));\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve }));\n        return {\n            connectGraph() {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            }\n            else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n        return {\n            connectGraph() {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs[0]);\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs[0]);\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        throw createNotSupportedError();\n    };\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return inputGainNode.context;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan() {\n                return panGainNode.gain;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        let isConnected = false;\n        const whenConnected = () => {\n            connectGraph();\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n            isConnected = false;\n        };\n        return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-stereo-panner-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createWaveShaper());\n        try {\n            // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n            // Bug #119: Safari does not correctly map the values. Bug #102 is only used to detect Safari in this case.\n            nativeWaveShaperNode.curve = new Float32Array([1]);\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n        catch {\n            // Ignore errors.\n        }\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n        const curve = options.curve;\n        // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        overwriteAccessors(nativeWaveShaperNode, 'curve', (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {\n            set.call(nativeWaveShaperNode, value);\n            if (isConnected) {\n                if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                    disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n                }\n                else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                    disconnectNativeAudioBufferSourceNode();\n                    disconnectNativeAudioBufferSourceNode = null;\n                }\n            }\n            return value;\n        });\n        const whenConnected = () => {\n            isConnected = true;\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-wave-shaper-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeGainNode, isDCCurve, monitorConnections) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createWaveShaper());\n        const positiveWaveShaperNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createWaveShaper());\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        let unmodifiedCurve = null;\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return negativeWaveShaperNode.context;\n            },\n            get curve() {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (curve !== null && curve.length < 2) {\n                    throw createInvalidStateError();\n                }\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                }\n                else {\n                    const curveLength = value.length;\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                    (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n                unmodifiedCurve = value;\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    }\n                    else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample() {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (curve !== nativeWaveShaperNodeFaker.curve) {\n            nativeWaveShaperNodeFaker.curve = curve;\n        }\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n            isConnected = true;\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-wave-shaper-node-faker-factory.js.map","export const createNotSupportedError = () => {\n    try {\n        return new DOMException('', 'NotSupportedError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 9;\n        err.name = 'NotSupportedError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/not-supported-error.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor {\n        constructor(a, b, c) {\n            let options;\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            }\n            else if (typeof a === 'object') {\n                options = a;\n            }\n            else {\n                throw new Error('The given parameters are not valid.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return (startRendering(this.destination, this._nativeOfflineAudioContext)\n                .then((audioBuffer) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                return audioBuffer;\n            })\n                // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n                .catch((err) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                throw err;\n            }));\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/offline-audio-context-constructor.js.map","import { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 440,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = (isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Edge, Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            // Bug #57: Edge will not throw an error when assigning the type to 'custom'. But it still will change the value.\n            if (value === 'custom') {\n                throw createInvalidStateError();\n            }\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            else {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => setInternalStateToPassive(this), 1000);\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/oscillator-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeOscillatorNodes = new WeakMap();\n        let periodicWave = null;\n        let start = null;\n        let stop = null;\n        const createOscillatorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeOscillatorNode = getNativeAudioNode(proxy);\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode, trace);\n            return nativeOscillatorNode;\n        };\n        return {\n            set periodicWave(value) {\n                periodicWave = value;\n            },\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n                return createOscillatorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/oscillator-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = (isOffline ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue for GainNodes.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/panner-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let renderedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode(proxy);\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n            // Bug #124: Edge & Safari do not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            }\n            else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all([\n                            proxy.orientationX,\n                            proxy.orientationY,\n                            proxy.orientationZ,\n                            proxy.positionX,\n                            proxy.positionY,\n                            proxy.positionZ\n                        ].map(async (audioParam, index) => {\n                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: index === 0 ? 1 : 0\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset, trace);\n                            return nativeConstantSourceNode;\n                        }));\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode, trace);\n                const channelDatas = [];\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n                inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n                    if (orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n                        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n                return nativeGainNode;\n            }\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            }\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode, trace);\n            }\n            return nativePannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/panner-node-renderer-factory.js.map","const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/periodic-wave-constructor.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/render-automation.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode, trace) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        const nextTrace = [...trace, audioNode];\n        await Promise.all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array.from(connections)\n            .filter(([source]) => !nextTrace.includes(source))\n            .map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, nextTrace);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/render-inputs-of-audio-node.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam, trace) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/render-inputs-of-audio-param.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Edge does not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/render-native-offline-audio-context.js.map","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    const trace = [];\n    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)\n        .render(destination, nativeOfflineAudioContext, trace)\n        /*\n         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n         * destination.\n         */\n        .then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext, trace))))\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n            // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=/build/es2019/factories/start-rendering.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = (isOffline ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            // Bug #106: Edge does not export a maxValue and minValue property.\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan, 1, -1);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/stereo-panner-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeStereoPannerNodes = new WeakMap();\n        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeStereoPannerNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            }\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode, trace);\n            }\n            return nativeStereoPannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/stereo-panner-node-renderer-factory.js.map","// Bug #33: Edge & Safari expose an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-constructor-support.js.map","/*\n * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods\n * is enough to know if the other one is supported as well.\n */\nexport const createTestAudioBufferCopyChannelMethodsSubarraySupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100);\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        if (nativeAudioBuffer.copyToChannel === undefined) {\n            return true;\n        }\n        const source = new Float32Array(2);\n        try {\n            nativeAudioBuffer.copyFromChannel(source, 0, 0);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js.map","export const createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        nativeAudioBufferSourceNode.start();\n        try {\n            nativeAudioBufferSourceNode.start();\n        }\n        catch {\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","// Bug #92: Edge does not respect the duration parameter yet.\nexport const createTestAudioBufferSourceNodeStartMethodDurationParameterSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const audioBuffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        const audioBufferSourceNode = offlineAudioContext.createBufferSource();\n        audioBuffer.getChannelData(0)[0] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.start(0, 0, 0);\n        audioBufferSourceNode.connect(offlineAudioContext.destination);\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            offlineAudioContext.oncomplete = ({ renderedBuffer }) => {\n                // Bug #5: Safari does not support copyFromChannel().\n                resolve(renderedBuffer.getChannelData(0)[0] === 0);\n            };\n            offlineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js.map","export const createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        try {\n            nativeAudioBufferSourceNode.start(0, 1);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        nativeAudioBufferSourceNode.start();\n        try {\n            nativeAudioBufferSourceNode.stop();\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const createTestAudioContextCloseMethodSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        // Try to check the prototype before constructing the AudioContext.\n        if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {\n            return true;\n        }\n        const audioContext = new nativeAudioContextConstructor();\n        const isAudioContextClosable = audioContext.close !== undefined;\n        try {\n            audioContext.close();\n        }\n        catch {\n            // Ignore errors.\n        }\n        return isAudioContextClosable;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-context-close-method-support.js.map","/**\n * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers\n * did not refuse to decode invalid parameters with a TypeError.\n */\nexport const createTestAudioContextDecodeAudioDataMethodTypeErrorSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            let isPending = true;\n            const resolvePromise = (err) => {\n                if (isPending) {\n                    isPending = false;\n                    offlineAudioContext.startRendering();\n                    resolve(err instanceof TypeError);\n                }\n            };\n            let promise;\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                promise = offlineAudioContext\n                    // Bug #1: Safari requires a successCallback.\n                    .decodeAudioData(null, () => {\n                    // Ignore the success callback.\n                }, resolvePromise);\n            }\n            catch (err) {\n                resolvePromise(err);\n            }\n            // Bug #21: Safari does not support promises yet.\n            if (promise !== undefined) {\n                // Bug #6 Chrome does not call the errorCallback\n                promise.catch(resolvePromise);\n            }\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js.map","export const createTestAudioContextOptionsSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        let audioContext;\n        try {\n            audioContext = new nativeAudioContextConstructor({ latencyHint: 'balanced' });\n        }\n        catch {\n            return false;\n        }\n        audioContext.close();\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-context-options-support.js.map","// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.\nexport const createTestAudioNodeConnectMethodSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeGainNode = nativeOfflineAudioContext.createGain();\n        const isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;\n        nativeGainNode.disconnect(nativeGainNode);\n        return isSupported;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-node-connect-method-support.js.map","export const createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createOscillator());\n        try {\n            nativeAudioBufferSourceNode.start(-1);\n        }\n        catch (err) {\n            return err instanceof RangeError;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.start();\n        nativeAudioBufferSourceNode.stop();\n        try {\n            nativeAudioBufferSourceNode.stop();\n            return true;\n        }\n        catch {\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createOscillator());\n        try {\n            nativeAudioBufferSourceNode.stop(-1);\n        }\n        catch (err) {\n            return err instanceof RangeError;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nexport const createTestAudioWorkletProcessorNoOutputsSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 3200);\n        const url = URL.createObjectURL(blob);\n        let isCallingProcess = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const gainNode = offlineAudioContext.createGain();\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            audioWorkletNode.port.onmessage = () => (isCallingProcess = true);\n            gainNode.connect(audioWorkletNode);\n            await offlineAudioContext.startRendering();\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isCallingProcess;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js.map","/**\n * Firefox up to version 69 did not throw an error when setting a different channelCount or channelCountMode.\n */\nexport const createTestChannelMergerNodeChannelCountSupport = (createNativeAudioNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeChannelMergerNode = createNativeAudioNode(offlineAudioContext, (ntvCntxt) => ntvCntxt.createChannelMerger());\n        /**\n         * Bug #15: Safari does not return the default properties. It still needs to be patched. This test is supposed to test the support\n         * in other browsers.\n         */\n        if (nativeChannelMergerNode.channelCountMode === 'max') {\n            return true;\n        }\n        try {\n            nativeChannelMergerNode.channelCount = 2;\n        }\n        catch {\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-channel-merger-node-channel-count-support.js.map","export const createTestConstantSourceNodeAccurateSchedulingSupport = (createNativeAudioNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return true;\n        }\n        const nativeConstantSourceNode = createNativeAudioNode(nativeOfflineAudioContext, (ntvCntxt) => ntvCntxt.createConstantSource());\n        /*\n         * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to\n         * the implementation of Firefox right now, but it could probably be done in a better way.\n         */\n        return nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js.map","// Opera up to version 57 did not allow to reassign the buffer of a ConvolverNode.\nexport const createTestConvolverNodeBufferReassignabilitySupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeConvolverNode = offlineAudioContext.createConvolver();\n        nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        try {\n            nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js.map","export const createTestIsSecureContextSupport = (window) => {\n    return () => window !== null && window.hasOwnProperty('isSecureContext');\n};\n//# sourceMappingURL=/build/es2019/factories/test-is-secure-context-support.js.map","// Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.\nexport const createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        const audioContext = new nativeAudioContextConstructor();\n        try {\n            audioContext.createMediaStreamSource(new MediaStream());\n            return false;\n        }\n        catch (err) {\n            return true;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-offline-audio-context-current-time-support.js.map","/**\n * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.\n */\nexport const createTestStereoPannerNodeDefaultValueSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        /*\n         * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does\n         * support the tested behaviour.\n         */\n        if (nativeOfflineAudioContext.createStereoPanner === undefined) {\n            return Promise.resolve(true);\n        }\n        // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return Promise.resolve(true);\n        }\n        const constantSourceNode = nativeOfflineAudioContext.createConstantSource();\n        const stereoPanner = nativeOfflineAudioContext.createStereoPanner();\n        constantSourceNode.channelCount = 1;\n        constantSourceNode.offset.value = 1;\n        stereoPanner.channelCount = 1;\n        constantSourceNode.start();\n        constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);\n        return nativeOfflineAudioContext.startRendering().then((buffer) => buffer.getChannelData(0)[0] !== 1);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-stereo-panner-node-default-value-support.js.map","export const createUnknownError = () => {\n    try {\n        return new DOMException('', 'UnknownError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.name = 'UnknownError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/unknown-error.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class WaveShaperNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = (isOffline ? createWaveShaperNodeRenderer() : null);\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n        }\n        get curve() {\n            if (this._isCurveNullified) {\n                return null;\n            }\n            return this._nativeWaveShaperNode.curve;\n        }\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            }\n            else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n        get oversample() {\n            return this._nativeWaveShaperNode.oversample;\n        }\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wave-shaper-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeWaveShaperNodes = new WeakMap();\n        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeWaveShaperNode = getNativeAudioNode(proxy);\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode, trace);\n            }\n            return nativeWaveShaperNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wave-shaper-node-renderer-factory.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=/build/es2019/factories/window.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return value === nullifiedBuffer ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (createNativeAudioNode) => {\n    return (nativeAudioScheduledSourceNode, nativeContext) => {\n        const nativeGainNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createGain());\n        nativeAudioScheduledSourceNode.connect(nativeGainNode);\n        const disconnectGainNode = ((disconnect) => {\n            return () => {\n                // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n                nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n            };\n        })(nativeAudioScheduledSourceNode.disconnect);\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n        interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n        nativeAudioScheduledSourceNode.stop = ((stop) => {\n            let isStopped = false;\n            return (when = 0) => {\n                if (isStopped) {\n                    try {\n                        stop.call(nativeAudioScheduledSourceNode, when);\n                    }\n                    catch {\n                        nativeGainNode.gain.setValueAtTime(0, when);\n                    }\n                }\n                else {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                    isStopped = true;\n                }\n            };\n        })(nativeAudioScheduledSourceNode.stop);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, createNativeAudioNode, monitorConnectionsFunction) => {\n    return (nativeContext, channelMergerNode) => {\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnectionsFunction(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-channel-merger-node.js.map","export const isDCCurve = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n    const length = curve.length;\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n//# sourceMappingURL=/build/es2019/helpers/is-dc-curve.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = Object.getPrototypeOf(object);\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=/build/es2019/helpers/overwrite-accessors.js.map","// Safari at version 11 did not support transferables.\nexport const testTransferablesSupport = () => new Promise((resolve) => {\n    const arrayBuffer = new ArrayBuffer(0);\n    const { port1, port2 } = new MessageChannel();\n    port1.onmessage = ({ data }) => resolve(data !== null);\n    port2.postMessage(arrayBuffer, [arrayBuffer]);\n});\n//# sourceMappingURL=/build/es2019/helpers/test-transferables-support.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-event-listener.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupNativeContext } from './factories/get-backup-native-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioNodeFactory } from './factories/native-audio-node-factory';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNodeFactory } from './factories/native-biquad-filter-node-factory';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNodeFactory } from './factories/native-channel-splitter-node-factory';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeConvolverNodeFakerFactory } from './factories/native-convolver-node-faker-factory';\nimport { createNativeDelayNodeFactory } from './factories/native-delay-node-factory';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNodeFactory } from './factories/native-gain-node-factory';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNodeFactory } from './factories/native-media-element-audio-source-node-factory';\nimport { createNativeMediaStreamAudioDestinationNodeFactory } from './factories/native-media-stream-audio-destination-node-factory';\nimport { createNativeMediaStreamAudioSourceNodeFactory } from './factories/native-media-stream-audio-source-node-factory';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNodeFactory } from './factories/native-script-processor-node-factory';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './factories/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { createTestAudioBufferSourceNodeStartMethodDurationParameterSupport } from './factories/test-audio-buffer-source-node-start-method-duration-parameter-support';\nimport { createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './factories/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './factories/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst getBackupNativeContext = createGetBackupNativeContext(isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor);\nconst createNativeAudioNode = createNativeAudioNodeFactory(getBackupNativeContext);\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError, createNativeAudioNode);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst auxiliaryGainNodeStore = new WeakMap();\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), auxiliaryGainNodeStore, cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst createNativeGainNode = createNativeGainNodeFactory(createNativeAudioNode);\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport(createNativeAudioNode);\nconst testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(createNativeAudioNode);\nconst testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport(createNativeAudioNode);\nconst wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(createNativeAudioNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(createNativeAudioNode), createTestAudioBufferSourceNodeStartMethodDurationParameterSupport(nativeOfflineAudioContextConstructor), createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport(createNativeAudioNode), createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport(createNativeAudioNode), testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createNativeBiquadFilterNode = createNativeBiquadFilterNodeFactory(createNativeAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, createNativeAudioNode, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(createNativeAudioNode, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeChannelSplitterNode = createNativeChannelSplitterNodeFactory(createNativeAudioNode);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNodeFaker = createNativeConvolverNodeFakerFactory(createNativeAudioNode, createNativeGainNode, monitorConnections);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNativeAudioNode, createNativeConvolverNodeFaker, createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeDelayNode = createNativeDelayNodeFactory(createNativeAudioNode);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNativeAudioNode, createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeScriptProcessorNode = createNativeScriptProcessorNodeFactory(createNativeAudioNode);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, createNativeAudioNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeAudioNode, createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativeAudioNode, createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(getBackupNativeContext);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet());\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(createNativeAudioNode, nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = isSecureContext\n    ? createAddAudioWorkletModule(createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getBackupNativeContext, getNativeContext, new WeakMap(), new WeakMap(), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window)\n    : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, isNativeOfflineAudioContext, nativeOfflineAudioContextConstructor, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst createNativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNodeFactory(createNativeAudioNode);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNodeFactory(createNativeAudioNode, createNotSupportedError);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNodeFactory(createNativeAudioNode);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, createNativeAudioNode, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(auxiliaryGainNodeStore, connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioNode, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, wrapEventListener)\n    : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(createNativeAudioNode, nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(createNativeAudioNode, nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=/build/es2019/module.js.map","/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\nexport function assert(statement, error) {\n    if (!statement) {\n        throw new Error(error);\n    }\n}\n/**\n * Make sure that the given value is within the range\n */\nexport function assertRange(value, gte, lte = Infinity) {\n    if (!(gte <= value && value <= lte)) {\n        throw new RangeError(`Value must be within [${gte}, ${lte}], got: ${value}`);\n    }\n}\n/**\n * Make sure that the given value is within the range\n */\nexport function assertContextRunning(context) {\n    // add a warning if the context is not started\n    if (!context.isOffline && context.state !== \"running\") {\n        warn(\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\");\n    }\n}\n/**\n * The default logger is the console\n */\nlet defaultLogger = console;\n/**\n * Set the logging interface\n */\nexport function setLogger(logger) {\n    defaultLogger = logger;\n}\n/**\n * Log anything\n */\nexport function log(...args) {\n    defaultLogger.log(...args);\n}\n/**\n * Warn anything\n */\nexport function warn(...args) {\n    defaultLogger.warn(...args);\n}\n//# sourceMappingURL=Debug.js.map","/**\n * Test if the arg is undefined\n */\nexport function isUndef(arg) {\n    return typeof arg === \"undefined\";\n}\n/**\n * Test if the arg is not undefined\n */\nexport function isDefined(arg) {\n    return !isUndef(arg);\n}\n/**\n * Test if the arg is a function\n */\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\n/**\n * Test if the argument is a number.\n */\nexport function isNumber(arg) {\n    return (typeof arg === \"number\");\n}\n/**\n * Test if the given argument is an object literal (i.e. `{}`);\n */\nexport function isObject(arg) {\n    return (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n}\n/**\n * Test if the argument is a boolean.\n */\nexport function isBoolean(arg) {\n    return (typeof arg === \"boolean\");\n}\n/**\n * Test if the argument is an Array\n */\nexport function isArray(arg) {\n    return (Array.isArray(arg));\n}\n/**\n * Test if the argument is a string.\n */\nexport function isString(arg) {\n    return (typeof arg === \"string\");\n}\n/**\n * Test if the argument is in the form of a note in scientific pitch notation.\n * e.g. \"C4\"\n */\nexport function isNote(arg) {\n    return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}\n//# sourceMappingURL=TypeCheck.js.map","import { AudioContext as stdAudioContext, AudioWorkletNode as stdAudioWorkletNode, OfflineAudioContext as stdOfflineAudioContext } from \"standardized-audio-context\";\nimport { assert } from \"../util/Debug\";\nimport { isDefined } from \"../util/TypeCheck\";\n/**\n * Create a new AudioContext\n */\nexport function createAudioContext(options) {\n    return new stdAudioContext(options);\n}\n/**\n * Create a new OfflineAudioContext\n */\nexport function createOfflineAudioContext(channels, length, sampleRate) {\n    return new stdOfflineAudioContext(channels, length, sampleRate);\n}\n/**\n * A reference to the window object\n * @hidden\n */\nexport const theWindow = typeof self === \"object\" ? self : null;\n/**\n * If the browser has a window object which has an AudioContext\n * @hidden\n */\nexport const hasAudioContext = theWindow &&\n    (theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\nexport function createAudioWorkletNode(context, name, options) {\n    assert(isDefined(stdAudioWorkletNode), \"This node only works in a secure context (https or localhost)\");\n    // @ts-ignore\n    return new stdAudioWorkletNode(context, name, options);\n}\n/**\n * This promise resolves to a boolean which indicates if the\n * functionality is supported within the currently used browse.\n * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)\n */\nexport { isSupported as supported } from \"standardized-audio-context\";\n//# sourceMappingURL=AudioContext.js.map","/**\n * A class which provides a reliable callback using either\n * a Web Worker, or if that isn't supported, falls back to setTimeout.\n */\nexport class Ticker {\n    constructor(callback, type, updateInterval) {\n        this._callback = callback;\n        this._type = type;\n        this._updateInterval = updateInterval;\n        // create the clock source for the first time\n        this._createClock();\n    }\n    /**\n     * Generate a web worker\n     */\n    _createWorker() {\n        const blob = new Blob([\n            /* javascript */ `\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(this._updateInterval * 1000).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`\n        ], { type: \"text/javascript\" });\n        const blobUrl = URL.createObjectURL(blob);\n        const worker = new Worker(blobUrl);\n        worker.onmessage = this._callback.bind(this);\n        this._worker = worker;\n    }\n    /**\n     * Create a timeout loop\n     */\n    _createTimeout() {\n        this._timeout = setTimeout(() => {\n            this._createTimeout();\n            this._callback();\n        }, this._updateInterval * 1000);\n    }\n    /**\n     * Create the clock source.\n     */\n    _createClock() {\n        if (this._type === \"worker\") {\n            try {\n                this._createWorker();\n            }\n            catch (e) {\n                // workers not supported, fallback to timeout\n                this._type = \"timeout\";\n                this._createClock();\n            }\n        }\n        else if (this._type === \"timeout\") {\n            this._createTimeout();\n        }\n    }\n    /**\n     * Clean up the current clock source\n     */\n    _disposeClock() {\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n            this._timeout = 0;\n        }\n        if (this._worker) {\n            this._worker.terminate();\n            this._worker.onmessage = null;\n        }\n    }\n    /**\n     * The rate in seconds the ticker will update\n     */\n    get updateInterval() {\n        return this._updateInterval;\n    }\n    set updateInterval(interval) {\n        this._updateInterval = Math.max(interval, 128 / 44100);\n        if (this._type === \"worker\") {\n            this._worker.postMessage(Math.max(interval * 1000, 1));\n        }\n    }\n    /**\n     * The type of the ticker, either a worker or a timeout\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._disposeClock();\n        this._type = type;\n        this._createClock();\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        this._disposeClock();\n    }\n}\n//# sourceMappingURL=Ticker.js.map","import { isAnyAudioContext, isAnyAudioNode, isAnyAudioParam, isAnyOfflineAudioContext, } from \"standardized-audio-context\";\n/**\n * Test if the given value is an instanceof AudioParam\n */\nexport function isAudioParam(arg) {\n    return isAnyAudioParam(arg);\n}\n/**\n * Test if the given value is an instanceof AudioNode\n */\nexport function isAudioNode(arg) {\n    return isAnyAudioNode(arg);\n}\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\nexport function isOfflineAudioContext(arg) {\n    return isAnyOfflineAudioContext(arg);\n}\n/**\n * Test if the arg is an instanceof AudioContext\n */\nexport function isAudioContext(arg) {\n    return isAnyAudioContext(arg);\n}\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\nexport function isAudioBuffer(arg) {\n    return arg instanceof AudioBuffer;\n}\n//# sourceMappingURL=AdvancedTypeCheck.js.map","import { isAudioBuffer, isAudioNode, isAudioParam } from \"./AdvancedTypeCheck\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n/**\n * Some objects should not be merged\n */\nfunction noCopy(key, arg) {\n    return key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\nexport function deepMerge(target, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n    const source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (noCopy(key, source[key])) {\n                target[key] = source[key];\n            }\n            else if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, { [key]: {} });\n                }\n                deepMerge(target[key], source[key]);\n            }\n            else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n    // @ts-ignore\n    return deepMerge(target, ...sources);\n}\n/**\n * Returns true if the two arrays have the same value for each of the elements\n */\nexport function deepEquals(arrayA, arrayB) {\n    return arrayA.length === arrayB.length && arrayA.every((element, index) => arrayB[index] === element);\n}\n/**\n * Convert an args array into an object.\n */\nexport function optionsFromArguments(defaults, argsArray, keys = [], objKey) {\n    const opts = {};\n    const args = Array.from(argsArray);\n    // if the first argument is an object and has an object key\n    if (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n        // if it's not part of the defaults\n        const partOfDefaults = Object.keys(args[0]).some(key => Reflect.has(defaults, key));\n        if (!partOfDefaults) {\n            // merge that key\n            deepMerge(opts, { [objKey]: args[0] });\n            // remove the obj key from the keys\n            keys.splice(keys.indexOf(objKey), 1);\n            // shift the first argument off\n            args.shift();\n        }\n    }\n    if (args.length === 1 && isObject(args[0])) {\n        deepMerge(opts, args[0]);\n    }\n    else {\n        for (let i = 0; i < keys.length; i++) {\n            if (isDefined(args[i])) {\n                opts[keys[i]] = args[i];\n            }\n        }\n    }\n    return deepMerge(defaults, opts);\n}\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\nexport function getDefaultsFromInstance(instance) {\n    return instance.constructor.getDefaults();\n}\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\nexport function defaultArg(given, fallback) {\n    if (isUndef(given)) {\n        return fallback;\n    }\n    else {\n        return given;\n    }\n}\n/**\n * Remove all of the properties belonging to omit from obj.\n */\nexport function omitFromObject(obj, omit) {\n    omit.forEach(prop => {\n        if (Reflect.has(obj, prop)) {\n            delete obj[prop];\n        }\n    });\n    return obj;\n}\n//# sourceMappingURL=Defaults.js.map","/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\nimport { version } from \"../version\";\nimport { theWindow } from \"./context/AudioContext\";\nimport { log } from \"./util/Debug\";\n/**\n * @class  Tone is the base class of all other classes.\n * @constructor\n */\nexport class Tone {\n    constructor() {\n        //-------------------------------------\n        // \tDEBUGGING\n        //-------------------------------------\n        /**\n         * Set this debug flag to log all events that happen in this class.\n         */\n        this.debug = false;\n        //-------------------------------------\n        // \tDISPOSING\n        //-------------------------------------\n        /**\n         * Indicates if the instance was disposed\n         */\n        this._wasDisposed = false;\n    }\n    /**\n     * Returns all of the default options belonging to the class.\n     */\n    static getDefaults() {\n        return {};\n    }\n    /**\n     * Prints the outputs to the console log for debugging purposes.\n     * Prints the contents only if either the object has a property\n     * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n     * is set to the name of the class.\n     * @example\n     * const osc = new Tone.Oscillator();\n     * // prints all logs originating from this oscillator\n     * osc.debug = true;\n     * // calls to start/stop will print in the console\n     * osc.start();\n     */\n    log(...args) {\n        // if the object is either set to debug = true\n        // or if there is a string on the Tone.global.with the class name\n        if (this.debug || (theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS)) {\n            log(this, ...args);\n        }\n    }\n    /**\n     * disconnect and dispose.\n     */\n    dispose() {\n        this._wasDisposed = true;\n        return this;\n    }\n    /**\n     * Indicates if the instance was disposed. 'Disposing' an\n     * instance means that all of the Web Audio nodes that were\n     * created for the instance are disconnected and freed for garbage collection.\n     */\n    get disposed() {\n        return this._wasDisposed;\n    }\n    /**\n     * Convert the class to a string\n     * @example\n     * const osc = new Tone.Oscillator();\n     * console.log(osc.toString());\n     */\n    toString() {\n        return this.name;\n    }\n}\n/**\n * The version number semver\n */\nTone.version = version;\n//# sourceMappingURL=Tone.js.map","/**\n * The threshold for correctness for operators. Less than one sample even\n * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).\n */\nconst EPSILON = 1e-6;\n/**\n * Test if A is greater than B\n */\nexport function GT(a, b) {\n    return a > b + EPSILON;\n}\n/**\n * Test if A is greater than or equal to B\n */\nexport function GTE(a, b) {\n    return GT(a, b) || EQ(a, b);\n}\n/**\n * Test if A is less than B\n */\nexport function LT(a, b) {\n    return a + EPSILON < b;\n}\n/**\n * Test if A is less than B\n */\nexport function EQ(a, b) {\n    return Math.abs(a - b) < EPSILON;\n}\n/**\n * Clamp the value within the given range\n */\nexport function clamp(value, min, max) {\n    return Math.max(Math.min(value, max), min);\n}\n//# sourceMappingURL=Math.js.map","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"./Defaults\";\nimport { assert } from \"./Debug\";\nimport { EQ, GT, GTE, LT } from \"./Math\";\n/**\n * A Timeline class for scheduling and maintaining state\n * along a timeline. All events must have a \"time\" property.\n * Internally, events are stored in time order for fast\n * retrieval.\n */\nexport class Timeline extends Tone {\n    constructor() {\n        super();\n        this.name = \"Timeline\";\n        /**\n         * The array of scheduled timeline events\n         */\n        this._timeline = [];\n        const options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n        this.memory = options.memory;\n        this.increasing = options.increasing;\n    }\n    static getDefaults() {\n        return {\n            memory: Infinity,\n            increasing: false,\n        };\n    }\n    /**\n     * The number of items in the timeline.\n     */\n    get length() {\n        return this._timeline.length;\n    }\n    /**\n     * Insert an event object onto the timeline. Events must have a \"time\" attribute.\n     * @param event  The event object to insert into the timeline.\n     */\n    add(event) {\n        // the event needs to have a time attribute\n        assert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n        event.time = event.time.valueOf();\n        if (this.increasing && this.length) {\n            const lastValue = this._timeline[this.length - 1];\n            assert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n            this._timeline.push(event);\n        }\n        else {\n            const index = this._search(event.time);\n            this._timeline.splice(index + 1, 0, event);\n        }\n        // if the length is more than the memory, remove the previous ones\n        if (this.length > this.memory) {\n            const diff = this.length - this.memory;\n            this._timeline.splice(0, diff);\n        }\n        return this;\n    }\n    /**\n     * Remove an event from the timeline.\n     * @param  {Object}  event  The event object to remove from the list.\n     * @returns {Timeline} this\n     */\n    remove(event) {\n        const index = this._timeline.indexOf(event);\n        if (index !== -1) {\n            this._timeline.splice(index, 1);\n        }\n        return this;\n    }\n    /**\n     * Get the nearest event whose time is less than or equal to the given time.\n     * @param  time  The time to query.\n     */\n    get(time, param = \"time\") {\n        const index = this._search(time, param);\n        if (index !== -1) {\n            return this._timeline[index];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Return the first event in the timeline without removing it\n     * @returns {Object} The first event object\n     */\n    peek() {\n        return this._timeline[0];\n    }\n    /**\n     * Return the first event in the timeline and remove it\n     */\n    shift() {\n        return this._timeline.shift();\n    }\n    /**\n     * Get the event which is scheduled after the given time.\n     * @param  time  The time to query.\n     */\n    getAfter(time, param = \"time\") {\n        const index = this._search(time, param);\n        if (index + 1 < this._timeline.length) {\n            return this._timeline[index + 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Get the event before the event at the given time.\n     * @param  time  The time to query.\n     */\n    getBefore(time) {\n        const len = this._timeline.length;\n        // if it's after the last item, return the last item\n        if (len > 0 && this._timeline[len - 1].time < time) {\n            return this._timeline[len - 1];\n        }\n        const index = this._search(time);\n        if (index - 1 >= 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Cancel events at and after the given time\n     * @param  after  The time to query.\n     */\n    cancel(after) {\n        if (this._timeline.length > 1) {\n            let index = this._search(after);\n            if (index >= 0) {\n                if (EQ(this._timeline[index].time, after)) {\n                    // get the first item with that time\n                    for (let i = index; i >= 0; i--) {\n                        if (EQ(this._timeline[i].time, after)) {\n                            index = i;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    this._timeline = this._timeline.slice(0, index);\n                }\n                else {\n                    this._timeline = this._timeline.slice(0, index + 1);\n                }\n            }\n            else {\n                this._timeline = [];\n            }\n        }\n        else if (this._timeline.length === 1) {\n            // the first item's time\n            if (GTE(this._timeline[0].time, after)) {\n                this._timeline = [];\n            }\n        }\n        return this;\n    }\n    /**\n     * Cancel events before or equal to the given time.\n     * @param  time  The time to cancel before.\n     */\n    cancelBefore(time) {\n        const index = this._search(time);\n        if (index >= 0) {\n            this._timeline = this._timeline.slice(index + 1);\n        }\n        return this;\n    }\n    /**\n     * Returns the previous event if there is one. null otherwise\n     * @param  event The event to find the previous one of\n     * @return The event right before the given event\n     */\n    previousEvent(event) {\n        const index = this._timeline.indexOf(event);\n        if (index > 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Does a binary search on the timeline array and returns the\n     * nearest event index whose time is after or equal to the given time.\n     * If a time is searched before the first index in the timeline, -1 is returned.\n     * If the time is after the end, the index of the last item is returned.\n     */\n    _search(time, param = \"time\") {\n        if (this._timeline.length === 0) {\n            return -1;\n        }\n        let beginning = 0;\n        const len = this._timeline.length;\n        let end = len;\n        if (len > 0 && this._timeline[len - 1][param] <= time) {\n            return len - 1;\n        }\n        while (beginning < end) {\n            // calculate the midpoint for roughly equal partition\n            let midPoint = Math.floor(beginning + (end - beginning) / 2);\n            const event = this._timeline[midPoint];\n            const nextEvent = this._timeline[midPoint + 1];\n            if (EQ(event[param], time)) {\n                // choose the last one that has the same time\n                for (let i = midPoint; i < this._timeline.length; i++) {\n                    const testEvent = this._timeline[i];\n                    if (EQ(testEvent[param], time)) {\n                        midPoint = i;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                return midPoint;\n            }\n            else if (LT(event[param], time) && GT(nextEvent[param], time)) {\n                return midPoint;\n            }\n            else if (GT(event[param], time)) {\n                // search lower\n                end = midPoint;\n            }\n            else {\n                // search upper\n                beginning = midPoint + 1;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Internal iterator. Applies extra safety checks for\n     * removing items from the array.\n     */\n    _iterate(callback, lowerBound = 0, upperBound = this._timeline.length - 1) {\n        this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n    }\n    /**\n     * Iterate over everything in the array\n     * @param  callback The callback to invoke with every item\n     */\n    forEach(callback) {\n        this._iterate(callback);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at or before the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachBefore(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const upperBound = this._search(time);\n        if (upperBound !== -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array after the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAfter(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const lowerBound = this._search(time);\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array between the startTime and endTime.\n     * The timerange is inclusive of the startTime, but exclusive of the endTime.\n     * range = [startTime, endTime).\n     * @param  startTime The time to check if items are before\n     * @param  endTime The end of the test interval.\n     * @param  callback The callback to invoke with every item\n     */\n    forEachBetween(startTime, endTime, callback) {\n        let lowerBound = this._search(startTime);\n        let upperBound = this._search(endTime);\n        if (lowerBound !== -1 && upperBound !== -1) {\n            if (this._timeline[lowerBound].time !== startTime) {\n                lowerBound += 1;\n            }\n            // exclusive of the end time\n            if (this._timeline[upperBound].time === endTime) {\n                upperBound -= 1;\n            }\n            this._iterate(callback, lowerBound, upperBound);\n        }\n        else if (lowerBound === -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at or after the given time. Similar to\n     * forEachAfter, but includes the item(s) at the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachFrom(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        let lowerBound = this._search(time);\n        // work backwards until the event time is less than time\n        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n            lowerBound--;\n        }\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at the given time\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAtTime(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const upperBound = this._search(time);\n        if (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n            let lowerBound = upperBound;\n            for (let i = upperBound; i >= 0; i--) {\n                if (EQ(this._timeline[i].time, time)) {\n                    lowerBound = i;\n                }\n                else {\n                    break;\n                }\n            }\n            this._iterate(event => {\n                callback(event);\n            }, lowerBound, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._timeline = [];\n        return this;\n    }\n}\n//# sourceMappingURL=Timeline.js.map","//-------------------------------------\n// INITIALIZING NEW CONTEXT\n//-------------------------------------\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyNewContext = [];\n/**\n * Used internally to setup a new Context\n */\nexport function onContextInit(cb) {\n    notifyNewContext.push(cb);\n}\n/**\n * Invoke any classes which need to also be initialized when a new context is created.\n */\nexport function initializeContext(ctx) {\n    // add any additional modules\n    notifyNewContext.forEach(cb => cb(ctx));\n}\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyCloseContext = [];\n/**\n * Used internally to tear down a Context\n */\nexport function onContextClose(cb) {\n    notifyCloseContext.push(cb);\n}\nexport function closeContext(ctx) {\n    // add any additional modules\n    notifyCloseContext.forEach(cb => cb(ctx));\n}\n//# sourceMappingURL=ContextInitialization.js.map","import { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n */\nexport class Emitter extends Tone {\n    constructor() {\n        super(...arguments);\n        this.name = \"Emitter\";\n    }\n    /**\n     * Bind a callback to a specific event.\n     * @param  event     The name of the event to listen for.\n     * @param  callback  The callback to invoke when the event is emitted\n     */\n    on(event, callback) {\n        // split the event\n        const events = event.split(/\\W+/);\n        events.forEach(eventName => {\n            if (isUndef(this._events)) {\n                this._events = {};\n            }\n            if (!this._events.hasOwnProperty(eventName)) {\n                this._events[eventName] = [];\n            }\n            this._events[eventName].push(callback);\n        });\n        return this;\n    }\n    /**\n     * Bind a callback which is only invoked once\n     * @param  event     The name of the event to listen for.\n     * @param  callback  The callback to invoke when the event is emitted\n     */\n    once(event, callback) {\n        const boundCallback = (...args) => {\n            // invoke the callback\n            callback(...args);\n            // remove the event\n            this.off(event, boundCallback);\n        };\n        this.on(event, boundCallback);\n        return this;\n    }\n    /**\n     * Remove the event listener.\n     * @param  event     The event to stop listening to.\n     * @param  callback  The callback which was bound to the event with Emitter.on.\n     *                   If no callback is given, all callbacks events are removed.\n     */\n    off(event, callback) {\n        const events = event.split(/\\W+/);\n        events.forEach(eventName => {\n            if (isUndef(this._events)) {\n                this._events = {};\n            }\n            if (this._events.hasOwnProperty(event)) {\n                if (isUndef(callback)) {\n                    this._events[event] = [];\n                }\n                else {\n                    const eventList = this._events[event];\n                    for (let i = 0; i < eventList.length; i++) {\n                        if (eventList[i] === callback) {\n                            eventList.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        });\n        return this;\n    }\n    /**\n     * Invoke all of the callbacks bound to the event\n     * with any arguments passed in.\n     * @param  event  The name of the event.\n     * @param args The arguments to pass to the functions listening.\n     */\n    emit(event, ...args) {\n        if (this._events) {\n            if (this._events.hasOwnProperty(event)) {\n                const eventList = this._events[event].slice(0);\n                for (let i = 0, len = eventList.length; i < len; i++) {\n                    eventList[i].apply(this, args);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Add Emitter functions (on/off/emit) to the object\n     */\n    static mixin(constr) {\n        // instance._events = {};\n        [\"on\", \"once\", \"off\", \"emit\"].forEach(name => {\n            const property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);\n            Object.defineProperty(constr.prototype, name, property);\n        });\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._events = undefined;\n        return this;\n    }\n}\n//# sourceMappingURL=Emitter.js.map","import { Emitter } from \"../util/Emitter\";\nexport class BaseContext extends Emitter {\n    constructor() {\n        super(...arguments);\n        this.isOffline = false;\n    }\n}\n//# sourceMappingURL=BaseContext.js.map","import { __awaiter } from \"tslib\";\nimport { Ticker } from \"../clock/Ticker\";\nimport { isAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined, isString } from \"../util/TypeCheck\";\nimport { createAudioContext, createAudioWorkletNode } from \"./AudioContext\";\nimport { closeContext, initializeContext } from \"./ContextInitialization\";\nimport { BaseContext } from \"./BaseContext\";\nimport { assert } from \"../util/Debug\";\n/**\n * Wrapper around the native AudioContext.\n * @category Core\n */\nexport class Context extends BaseContext {\n    constructor() {\n        super();\n        this.name = \"Context\";\n        /**\n         * An object containing all of the constants AudioBufferSourceNodes\n         */\n        this._constants = new Map();\n        /**\n         * All of the setTimeout events.\n         */\n        this._timeouts = new Timeline();\n        /**\n         * The timeout id counter\n         */\n        this._timeoutIds = 0;\n        /**\n         * Private indicator if the context has been initialized\n         */\n        this._initialized = false;\n        /**\n         * Indicates if the context is an OfflineAudioContext or an AudioContext\n         */\n        this.isOffline = false;\n        //--------------------------------------------\n        // AUDIO WORKLET\n        //--------------------------------------------\n        /**\n         * Maps a module name to promise of the addModule method\n         */\n        this._workletModules = new Map();\n        const options = optionsFromArguments(Context.getDefaults(), arguments, [\"context\"]);\n        if (options.context) {\n            this._context = options.context;\n        }\n        else {\n            this._context = createAudioContext({\n                latencyHint: options.latencyHint,\n            });\n        }\n        this._ticker = new Ticker(this.emit.bind(this, \"tick\"), options.clockSource, options.updateInterval);\n        this.on(\"tick\", this._timeoutLoop.bind(this));\n        // fwd events from the context\n        this._context.onstatechange = () => {\n            this.emit(\"statechange\", this.state);\n        };\n        this._setLatencyHint(options.latencyHint);\n        this.lookAhead = options.lookAhead;\n    }\n    static getDefaults() {\n        return {\n            clockSource: \"worker\",\n            latencyHint: \"interactive\",\n            lookAhead: 0.1,\n            updateInterval: 0.05,\n        };\n    }\n    /**\n     * Finish setting up the context. **You usually do not need to do this manually.**\n     */\n    initialize() {\n        if (!this._initialized) {\n            // add any additional modules\n            initializeContext(this);\n            this._initialized = true;\n        }\n        return this;\n    }\n    //---------------------------\n    // BASE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAnalyser() {\n        return this._context.createAnalyser();\n    }\n    createOscillator() {\n        return this._context.createOscillator();\n    }\n    createBufferSource() {\n        return this._context.createBufferSource();\n    }\n    createBiquadFilter() {\n        return this._context.createBiquadFilter();\n    }\n    createBuffer(numberOfChannels, length, sampleRate) {\n        return this._context.createBuffer(numberOfChannels, length, sampleRate);\n    }\n    createChannelMerger(numberOfInputs) {\n        return this._context.createChannelMerger(numberOfInputs);\n    }\n    createChannelSplitter(numberOfOutputs) {\n        return this._context.createChannelSplitter(numberOfOutputs);\n    }\n    createConstantSource() {\n        return this._context.createConstantSource();\n    }\n    createConvolver() {\n        return this._context.createConvolver();\n    }\n    createDelay(maxDelayTime) {\n        return this._context.createDelay(maxDelayTime);\n    }\n    createDynamicsCompressor() {\n        return this._context.createDynamicsCompressor();\n    }\n    createGain() {\n        return this._context.createGain();\n    }\n    createIIRFilter(feedForward, feedback) {\n        // @ts-ignore\n        return this._context.createIIRFilter(feedForward, feedback);\n    }\n    createPanner() {\n        return this._context.createPanner();\n    }\n    createPeriodicWave(real, imag, constraints) {\n        return this._context.createPeriodicWave(real, imag, constraints);\n    }\n    createStereoPanner() {\n        return this._context.createStereoPanner();\n    }\n    createWaveShaper() {\n        return this._context.createWaveShaper();\n    }\n    createMediaStreamSource(stream) {\n        assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n        const context = this._context;\n        return context.createMediaStreamSource(stream);\n    }\n    createMediaStreamDestination() {\n        assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n        const context = this._context;\n        return context.createMediaStreamDestination();\n    }\n    decodeAudioData(audioData) {\n        return this._context.decodeAudioData(audioData);\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get currentTime() {\n        return this._context.currentTime;\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get state() {\n        return this._context.state;\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get sampleRate() {\n        return this._context.sampleRate;\n    }\n    /**\n     * The listener\n     */\n    get listener() {\n        this.initialize();\n        return this._listener;\n    }\n    set listener(l) {\n        assert(!this._initialized, \"The listener cannot be set after initialization.\");\n        this._listener = l;\n    }\n    /**\n     * There is only one Transport per Context. It is created on initialization.\n     */\n    get transport() {\n        this.initialize();\n        return this._transport;\n    }\n    set transport(t) {\n        assert(!this._initialized, \"The transport cannot be set after initialization.\");\n        this._transport = t;\n    }\n    /**\n     * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.\n     */\n    get draw() {\n        this.initialize();\n        return this._draw;\n    }\n    set draw(d) {\n        assert(!this._initialized, \"Draw cannot be set after initialization.\");\n        this._draw = d;\n    }\n    /**\n     * A reference to the Context's destination node.\n     */\n    get destination() {\n        this.initialize();\n        return this._destination;\n    }\n    set destination(d) {\n        assert(!this._initialized, \"The destination cannot be set after initialization.\");\n        this._destination = d;\n    }\n    /**\n     * Create an audio worklet node from a name and options. The module\n     * must first be loaded using [[addAudioWorkletModule]].\n     */\n    createAudioWorkletNode(name, options) {\n        return createAudioWorkletNode(this.rawContext, name, options);\n    }\n    /**\n     * Add an AudioWorkletProcessor module\n     * @param url The url of the module\n     * @param name The name of the module\n     */\n    addAudioWorkletModule(url, name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            assert(isDefined(this.rawContext.audioWorklet), \"AudioWorkletNode is only available in a secure context (https or localhost)\");\n            if (!this._workletModules.has(name)) {\n                this._workletModules.set(name, this.rawContext.audioWorklet.addModule(url));\n            }\n            yield this._workletModules.get(name);\n        });\n    }\n    /**\n     * Returns a promise which resolves when all of the worklets have been loaded on this context\n     */\n    workletsAreReady() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const promises = [];\n            this._workletModules.forEach(promise => promises.push(promise));\n            yield Promise.all(promises);\n        });\n    }\n    //---------------------------\n    // TICKER\n    //---------------------------\n    /**\n     * How often the interval callback is invoked.\n     * This number corresponds to how responsive the scheduling\n     * can be. context.updateInterval + context.lookAhead gives you the\n     * total latency between scheduling an event and hearing it.\n     */\n    get updateInterval() {\n        return this._ticker.updateInterval;\n    }\n    set updateInterval(interval) {\n        this._ticker.updateInterval = interval;\n    }\n    /**\n     * What the source of the clock is, either \"worker\" (default),\n     * \"timeout\", or \"offline\" (none).\n     */\n    get clockSource() {\n        return this._ticker.type;\n    }\n    set clockSource(type) {\n        this._ticker.type = type;\n    }\n    /**\n     * The type of playback, which affects tradeoffs between audio\n     * output latency and responsiveness.\n     * In addition to setting the value in seconds, the latencyHint also\n     * accepts the strings \"interactive\" (prioritizes low latency),\n     * \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n     * latency and performance).\n     * @example\n     * // prioritize sustained playback\n     * const context = new Tone.Context({ latencyHint: \"playback\" });\n     * // set this context as the global Context\n     * Tone.setContext(context);\n     */\n    get latencyHint() {\n        return this._latencyHint;\n    }\n    /**\n     * Update the lookAhead and updateInterval based on the latencyHint\n     */\n    _setLatencyHint(hint) {\n        let lookAheadValue = 0;\n        this._latencyHint = hint;\n        if (isString(hint)) {\n            switch (hint) {\n                case \"interactive\":\n                    lookAheadValue = 0.1;\n                    break;\n                case \"playback\":\n                    lookAheadValue = 0.5;\n                    break;\n                case \"balanced\":\n                    lookAheadValue = 0.25;\n                    break;\n            }\n        }\n        this.lookAhead = lookAheadValue;\n        this.updateInterval = lookAheadValue / 2;\n    }\n    /**\n     * The unwrapped AudioContext or OfflineAudioContext\n     */\n    get rawContext() {\n        return this._context;\n    }\n    /**\n     * The current audio context time plus a short [[lookAhead]].\n     */\n    now() {\n        return this._context.currentTime + this.lookAhead;\n    }\n    /**\n     * The current audio context time without the [[lookAhead]].\n     * In most cases it is better to use [[now]] instead of [[immediate]] since\n     * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,\n     * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]\n     * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.\n     */\n    immediate() {\n        return this._context.currentTime;\n    }\n    /**\n     * Starts the audio context from a suspended state. This is required\n     * to initially start the AudioContext. See [[Tone.start]]\n     */\n    resume() {\n        if (this._context.state === \"suspended\" && isAudioContext(this._context)) {\n            return this._context.resume();\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    /**\n     * Close the context. Once closed, the context can no longer be used and\n     * any AudioNodes created from the context will be silent.\n     */\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isAudioContext(this._context)) {\n                yield this._context.close();\n            }\n            if (this._initialized) {\n                closeContext(this);\n            }\n        });\n    }\n    /**\n     * **Internal** Generate a looped buffer at some constant value.\n     */\n    getConstant(val) {\n        if (this._constants.has(val)) {\n            return this._constants.get(val);\n        }\n        else {\n            const buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n            const arr = buffer.getChannelData(0);\n            for (let i = 0; i < arr.length; i++) {\n                arr[i] = val;\n            }\n            const constant = this._context.createBufferSource();\n            constant.channelCount = 1;\n            constant.channelCountMode = \"explicit\";\n            constant.buffer = buffer;\n            constant.loop = true;\n            constant.start(0);\n            this._constants.set(val, constant);\n            return constant;\n        }\n    }\n    /**\n     * Clean up. Also closes the audio context.\n     */\n    dispose() {\n        super.dispose();\n        this._ticker.dispose();\n        this._timeouts.dispose();\n        Object.keys(this._constants).map(val => this._constants[val].disconnect());\n        return this;\n    }\n    //---------------------------\n    // TIMEOUTS\n    //---------------------------\n    /**\n     * The private loop which keeps track of the context scheduled timeouts\n     * Is invoked from the clock source\n     */\n    _timeoutLoop() {\n        const now = this.now();\n        let firstEvent = this._timeouts.peek();\n        while (this._timeouts.length && firstEvent && firstEvent.time <= now) {\n            // invoke the callback\n            firstEvent.callback();\n            // shift the first event off\n            this._timeouts.shift();\n            // get the next one\n            firstEvent = this._timeouts.peek();\n        }\n    }\n    /**\n     * A setTimeout which is guaranteed by the clock source.\n     * Also runs in the offline context.\n     * @param  fn       The callback to invoke\n     * @param  timeout  The timeout in seconds\n     * @returns ID to use when invoking Context.clearTimeout\n     */\n    setTimeout(fn, timeout) {\n        this._timeoutIds++;\n        const now = this.now();\n        this._timeouts.add({\n            callback: fn,\n            id: this._timeoutIds,\n            time: now + timeout,\n        });\n        return this._timeoutIds;\n    }\n    /**\n     * Clears a previously scheduled timeout with Tone.context.setTimeout\n     * @param  id  The ID returned from setTimeout\n     */\n    clearTimeout(id) {\n        this._timeouts.forEach(event => {\n            if (event.id === id) {\n                this._timeouts.remove(event);\n            }\n        });\n        return this;\n    }\n    /**\n     * Clear the function scheduled by [[setInterval]]\n     */\n    clearInterval(id) {\n        return this.clearTimeout(id);\n    }\n    /**\n     * Adds a repeating event to the context's callback clock\n     */\n    setInterval(fn, interval) {\n        const id = ++this._timeoutIds;\n        const intervalFn = () => {\n            const now = this.now();\n            this._timeouts.add({\n                callback: () => {\n                    // invoke the callback\n                    fn();\n                    // invoke the event to repeat it\n                    intervalFn();\n                },\n                id,\n                time: now + interval,\n            });\n        };\n        // kick it off\n        intervalFn();\n        return id;\n    }\n}\n//# sourceMappingURL=Context.js.map","import { __awaiter } from \"tslib\";\nimport { BaseContext } from \"./BaseContext\";\nexport class DummyContext extends BaseContext {\n    constructor() {\n        super(...arguments);\n        this.lookAhead = 0;\n        this.latencyHint = 0;\n        this.isOffline = false;\n    }\n    //---------------------------\n    // BASE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAnalyser() {\n        return {};\n    }\n    createOscillator() {\n        return {};\n    }\n    createBufferSource() {\n        return {};\n    }\n    createBiquadFilter() {\n        return {};\n    }\n    createBuffer(_numberOfChannels, _length, _sampleRate) {\n        return {};\n    }\n    createChannelMerger(_numberOfInputs) {\n        return {};\n    }\n    createChannelSplitter(_numberOfOutputs) {\n        return {};\n    }\n    createConstantSource() {\n        return {};\n    }\n    createConvolver() {\n        return {};\n    }\n    createDelay(_maxDelayTime) {\n        return {};\n    }\n    createDynamicsCompressor() {\n        return {};\n    }\n    createGain() {\n        return {};\n    }\n    createIIRFilter(_feedForward, _feedback) {\n        return {};\n    }\n    createPanner() {\n        return {};\n    }\n    createPeriodicWave(_real, _imag, _constraints) {\n        return {};\n    }\n    createStereoPanner() {\n        return {};\n    }\n    createWaveShaper() {\n        return {};\n    }\n    createMediaStreamSource(_stream) {\n        return {};\n    }\n    createMediaStreamDestination() {\n        return {};\n    }\n    decodeAudioData(_audioData) {\n        return Promise.resolve({});\n    }\n    //---------------------------\n    // TONE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAudioWorkletNode(_name, _options) {\n        return {};\n    }\n    get rawContext() {\n        return {};\n    }\n    addAudioWorkletModule(_url, _name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.resolve();\n        });\n    }\n    resume() {\n        return Promise.resolve();\n    }\n    setTimeout(_fn, _timeout) {\n        return 0;\n    }\n    clearTimeout(_id) {\n        return this;\n    }\n    setInterval(_fn, _interval) {\n        return 0;\n    }\n    clearInterval(_id) {\n        return this;\n    }\n    getConstant(_val) {\n        return {};\n    }\n    get currentTime() {\n        return 0;\n    }\n    get state() {\n        return {};\n    }\n    get sampleRate() {\n        return 0;\n    }\n    get listener() {\n        return {};\n    }\n    get transport() {\n        return {};\n    }\n    get draw() {\n        return {};\n    }\n    set draw(_d) { }\n    get destination() {\n        return {};\n    }\n    set destination(_d) { }\n    now() {\n        return 0;\n    }\n    immediate() {\n        return 0;\n    }\n}\n//# sourceMappingURL=DummyContext.js.map","import { isArray } from \"./TypeCheck\";\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\nexport function readOnly(target, property) {\n    if (isArray(property)) {\n        property.forEach(str => readOnly(target, str));\n    }\n    else {\n        Object.defineProperty(target, property, {\n            enumerable: true,\n            writable: false,\n        });\n    }\n}\n/**\n * Make an attribute writeable. Internal use only.\n */\nexport function writable(target, property) {\n    if (isArray(property)) {\n        property.forEach(str => writable(target, str));\n    }\n    else {\n        Object.defineProperty(target, property, {\n            writable: true,\n        });\n    }\n}\nexport const noOp = () => {\n    // no operation here!\n};\n//# sourceMappingURL=Interface.js.map","import { __awaiter } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { isAudioBuffer } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isArray, isNumber, isString } from \"../util/TypeCheck\";\nimport { assert } from \"../util/Debug\";\n/**\n * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all\n * classes that make requests for audio files such as Tone.Player,\n * Tone.Sampler and Tone.Convolver.\n * Aside from load callbacks from individual buffers, ToneAudioBuffer\n * provides events which keep track of the loading progress\n * of _all_ of the buffers. These are ToneAudioBuffer.on(\"load\" / \"progress\" / \"error\")\n * @example\n * const buffer = new Tone.ToneAudioBuffer(\"https://tonejs.github.io/audio/casio/A1.mp3\", () => {\n * \tconsole.log(\"loaded\");\n * });\n * @category Core\n */\nexport class ToneAudioBuffer extends Tone {\n    constructor() {\n        super();\n        this.name = \"ToneAudioBuffer\";\n        /**\n         * Callback when the buffer is loaded.\n         */\n        this.onload = noOp;\n        const options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, [\"url\", \"onload\", \"onerror\"]);\n        this.reverse = options.reverse;\n        this.onload = options.onload;\n        if (options.url && isAudioBuffer(options.url) || options.url instanceof ToneAudioBuffer) {\n            this.set(options.url);\n        }\n        else if (isString(options.url)) {\n            // initiate the download\n            this.load(options.url).catch(options.onerror);\n        }\n    }\n    static getDefaults() {\n        return {\n            onerror: noOp,\n            onload: noOp,\n            reverse: false,\n        };\n    }\n    /**\n     * The sample rate of the AudioBuffer\n     */\n    get sampleRate() {\n        if (this._buffer) {\n            return this._buffer.sampleRate;\n        }\n        else {\n            return getContext().sampleRate;\n        }\n    }\n    /**\n     * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.\n     */\n    set(buffer) {\n        if (buffer instanceof ToneAudioBuffer) {\n            // if it's loaded, set it\n            if (buffer.loaded) {\n                this._buffer = buffer.get();\n            }\n            else {\n                // otherwise when it's loaded, invoke it's callback\n                buffer.onload = () => {\n                    this.set(buffer);\n                    this.onload(this);\n                };\n            }\n        }\n        else {\n            this._buffer = buffer;\n        }\n        // reverse it initially\n        if (this._reversed) {\n            this._reverse();\n        }\n        return this;\n    }\n    /**\n     * The audio buffer stored in the object.\n     */\n    get() {\n        return this._buffer;\n    }\n    /**\n     * Makes an fetch request for the selected url then decodes the file as an audio buffer.\n     * Invokes the callback once the audio buffer loads.\n     * @param url The url of the buffer to load. filetype support depends on the browser.\n     * @returns A Promise which resolves with this ToneAudioBuffer\n     */\n    load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doneLoading = ToneAudioBuffer.load(url).then(audioBuffer => {\n                this.set(audioBuffer);\n                // invoke the onload method\n                this.onload(this);\n            });\n            ToneAudioBuffer.downloads.push(doneLoading);\n            try {\n                yield doneLoading;\n            }\n            finally {\n                // remove the downloaded file\n                const index = ToneAudioBuffer.downloads.indexOf(doneLoading);\n                ToneAudioBuffer.downloads.splice(index, 1);\n            }\n            return this;\n        });\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._buffer = undefined;\n        return this;\n    }\n    /**\n     * Set the audio buffer from the array.\n     * To create a multichannel AudioBuffer, pass in a multidimensional array.\n     * @param array The array to fill the audio buffer\n     */\n    fromArray(array) {\n        const isMultidimensional = isArray(array) && array[0].length > 0;\n        const channels = isMultidimensional ? array.length : 1;\n        const len = isMultidimensional ? array[0].length : array.length;\n        const context = getContext();\n        const buffer = context.createBuffer(channels, len, context.sampleRate);\n        const multiChannelArray = !isMultidimensional && channels === 1 ?\n            [array] : array;\n        for (let c = 0; c < channels; c++) {\n            buffer.copyToChannel(multiChannelArray[c], c);\n        }\n        this._buffer = buffer;\n        return this;\n    }\n    /**\n     * Sums multiple channels into 1 channel\n     * @param chanNum Optionally only copy a single channel from the array.\n     */\n    toMono(chanNum) {\n        if (isNumber(chanNum)) {\n            this.fromArray(this.toArray(chanNum));\n        }\n        else {\n            let outputArray = new Float32Array(this.length);\n            const numChannels = this.numberOfChannels;\n            for (let channel = 0; channel < numChannels; channel++) {\n                const channelArray = this.toArray(channel);\n                for (let i = 0; i < channelArray.length; i++) {\n                    outputArray[i] += channelArray[i];\n                }\n            }\n            // divide by the number of channels\n            outputArray = outputArray.map(sample => sample / numChannels);\n            this.fromArray(outputArray);\n        }\n        return this;\n    }\n    /**\n     * Get the buffer as an array. Single channel buffers will return a 1-dimensional\n     * Float32Array, and multichannel buffers will return multidimensional arrays.\n     * @param channel Optionally only copy a single channel from the array.\n     */\n    toArray(channel) {\n        if (isNumber(channel)) {\n            return this.getChannelData(channel);\n        }\n        else if (this.numberOfChannels === 1) {\n            return this.toArray(0);\n        }\n        else {\n            const ret = [];\n            for (let c = 0; c < this.numberOfChannels; c++) {\n                ret[c] = this.getChannelData(c);\n            }\n            return ret;\n        }\n    }\n    /**\n     * Returns the Float32Array representing the PCM audio data for the specific channel.\n     * @param  channel  The channel number to return\n     * @return The audio as a TypedArray\n     */\n    getChannelData(channel) {\n        if (this._buffer) {\n            return this._buffer.getChannelData(channel);\n        }\n        else {\n            return new Float32Array(0);\n        }\n    }\n    /**\n     * Cut a subsection of the array and return a buffer of the\n     * subsection. Does not modify the original buffer\n     * @param start The time to start the slice\n     * @param end The end time to slice. If none is given will default to the end of the buffer\n     */\n    slice(start, end = this.duration) {\n        const startSamples = Math.floor(start * this.sampleRate);\n        const endSamples = Math.floor(end * this.sampleRate);\n        assert(startSamples < endSamples, \"The start time must be less than the end time\");\n        const length = endSamples - startSamples;\n        const retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);\n        for (let channel = 0; channel < this.numberOfChannels; channel++) {\n            retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);\n        }\n        return new ToneAudioBuffer(retBuffer);\n    }\n    /**\n     * Reverse the buffer.\n     */\n    _reverse() {\n        if (this.loaded) {\n            for (let i = 0; i < this.numberOfChannels; i++) {\n                this.getChannelData(i).reverse();\n            }\n        }\n        return this;\n    }\n    /**\n     * If the buffer is loaded or not\n     */\n    get loaded() {\n        return this.length > 0;\n    }\n    /**\n     * The duration of the buffer in seconds.\n     */\n    get duration() {\n        if (this._buffer) {\n            return this._buffer.duration;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The length of the buffer in samples\n     */\n    get length() {\n        if (this._buffer) {\n            return this._buffer.length;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The number of discrete audio channels. Returns 0 if no buffer is loaded.\n     */\n    get numberOfChannels() {\n        if (this._buffer) {\n            return this._buffer.numberOfChannels;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Reverse the buffer.\n     */\n    get reverse() {\n        return this._reversed;\n    }\n    set reverse(rev) {\n        if (this._reversed !== rev) {\n            this._reversed = rev;\n            this._reverse();\n        }\n    }\n    /**\n     * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,\n     * pass in a multidimensional array.\n     * @param array The array to fill the audio buffer\n     * @return A ToneAudioBuffer created from the array\n     */\n    static fromArray(array) {\n        return (new ToneAudioBuffer()).fromArray(array);\n    }\n    /**\n     * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer\n     * @param  url The url to load.\n     * @return A promise which resolves to a ToneAudioBuffer\n     */\n    static fromUrl(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const buffer = new ToneAudioBuffer();\n            return yield buffer.load(url);\n        });\n    }\n    /**\n     * Loads a url using fetch and returns the AudioBuffer.\n     */\n    static load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // test if the url contains multiple extensions\n            const matches = url.match(/\\[(.+\\|?)+\\]$/);\n            if (matches) {\n                const extensions = matches[1].split(\"|\");\n                let extension = extensions[0];\n                for (const ext of extensions) {\n                    if (ToneAudioBuffer.supportsType(ext)) {\n                        extension = ext;\n                        break;\n                    }\n                }\n                url = url.replace(matches[0], extension);\n            }\n            // make sure there is a slash between the baseUrl and the url\n            const baseUrl = ToneAudioBuffer.baseUrl === \"\" || ToneAudioBuffer.baseUrl.endsWith(\"/\") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + \"/\";\n            const response = yield fetch(baseUrl + url);\n            if (!response.ok) {\n                throw new Error(`could not load url: ${url}`);\n            }\n            const arrayBuffer = yield response.arrayBuffer();\n            const audioBuffer = yield getContext().decodeAudioData(arrayBuffer);\n            return audioBuffer;\n        });\n    }\n    /**\n     * Checks a url's extension to see if the current browser can play that file type.\n     * @param url The url/extension to test\n     * @return If the file extension can be played\n     * @static\n     * @example\n     * Tone.ToneAudioBuffer.supportsType(\"wav\"); // returns true\n     * Tone.ToneAudioBuffer.supportsType(\"path/to/file.wav\"); // returns true\n     */\n    static supportsType(url) {\n        const extensions = url.split(\".\");\n        const extension = extensions[extensions.length - 1];\n        const response = document.createElement(\"audio\").canPlayType(\"audio/\" + extension);\n        return response !== \"\";\n    }\n    /**\n     * Returns a Promise which resolves when all of the buffers have loaded\n     */\n    static loaded() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // this makes sure that the function is always async\n            yield Promise.resolve();\n            while (ToneAudioBuffer.downloads.length) {\n                yield ToneAudioBuffer.downloads[0];\n            }\n        });\n    }\n}\n//-------------------------------------\n// STATIC METHODS\n//-------------------------------------\n/**\n * A path which is prefixed before every url.\n */\nToneAudioBuffer.baseUrl = \"\";\n/**\n * All of the downloads\n */\nToneAudioBuffer.downloads = [];\n//# sourceMappingURL=ToneAudioBuffer.js.map","import { __awaiter } from \"tslib\";\nimport { createOfflineAudioContext } from \"../context/AudioContext\";\nimport { Context } from \"../context/Context\";\nimport { isOfflineAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n/**\n * Wrapper around the OfflineAudioContext\n * @category Core\n * @example\n * // generate a single channel, 0.5 second buffer\n * const context = new Tone.OfflineContext(1, 0.5, 44100);\n * const osc = new Tone.Oscillator({ context });\n * context.render().then(buffer => {\n * \tconsole.log(buffer.numberOfChannels, buffer.duration);\n * });\n */\nexport class OfflineContext extends Context {\n    constructor() {\n        super({\n            clockSource: \"offline\",\n            context: isOfflineAudioContext(arguments[0]) ?\n                arguments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),\n            lookAhead: 0,\n            updateInterval: isOfflineAudioContext(arguments[0]) ?\n                128 / arguments[0].sampleRate : 128 / arguments[2],\n        });\n        this.name = \"OfflineContext\";\n        /**\n         * An artificial clock source\n         */\n        this._currentTime = 0;\n        this.isOffline = true;\n        this._duration = isOfflineAudioContext(arguments[0]) ?\n            arguments[0].length / arguments[0].sampleRate : arguments[1];\n    }\n    /**\n     * Override the now method to point to the internal clock time\n     */\n    now() {\n        return this._currentTime;\n    }\n    /**\n     * Same as this.now()\n     */\n    get currentTime() {\n        return this._currentTime;\n    }\n    /**\n     * Render just the clock portion of the audio context.\n     */\n    _renderClock(asynchronous) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let index = 0;\n            while (this._duration - this._currentTime >= 0) {\n                // invoke all the callbacks on that time\n                this.emit(\"tick\");\n                // increment the clock in block-sized chunks\n                this._currentTime += 128 / this.sampleRate;\n                // yield once a second of audio\n                index++;\n                const yieldEvery = Math.floor(this.sampleRate / 128);\n                if (asynchronous && index % yieldEvery === 0) {\n                    yield new Promise(done => setTimeout(done, 1));\n                }\n            }\n        });\n    }\n    /**\n     * Render the output of the OfflineContext\n     * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.\n     */\n    render(asynchronous = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.workletsAreReady();\n            yield this._renderClock(asynchronous);\n            const buffer = yield this._context.startRendering();\n            return new ToneAudioBuffer(buffer);\n        });\n    }\n    /**\n     * Close the context\n     */\n    close() {\n        return Promise.resolve();\n    }\n}\n//# sourceMappingURL=OfflineContext.js.map","import { version } from \"../version\";\nimport { hasAudioContext, theWindow } from \"./context/AudioContext\";\nimport { Context } from \"./context/Context\";\nimport { DummyContext } from \"./context/DummyContext\";\nimport { OfflineContext } from \"./context/OfflineContext\";\nimport { isAudioContext, isOfflineAudioContext } from \"./util/AdvancedTypeCheck\";\n/**\n * This dummy context is used to avoid throwing immediate errors when importing in Node.js\n */\nconst dummyContext = new DummyContext();\n/**\n * The global audio context which is getable and assignable through\n * getContext and setContext\n */\nlet globalContext = dummyContext;\n/**\n * Returns the default system-wide [[Context]]\n * @category Core\n */\nexport function getContext() {\n    if (globalContext === dummyContext && hasAudioContext) {\n        setContext(new Context());\n    }\n    return globalContext;\n}\n/**\n * Set the default audio context\n * @category Core\n */\nexport function setContext(context) {\n    if (isAudioContext(context)) {\n        globalContext = new Context(context);\n    }\n    else if (isOfflineAudioContext(context)) {\n        globalContext = new OfflineContext(context);\n    }\n    else {\n        globalContext = context;\n    }\n}\n/**\n * Most browsers will not play _any_ audio until a user\n * clicks something (like a play button). Invoke this method\n * on a click or keypress event handler to start the audio context.\n * More about the Autoplay policy\n * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n * @example\n * document.querySelector(\"button\").addEventListener(\"click\", async () => {\n * \tawait Tone.start();\n * \tconsole.log(\"context started\");\n * });\n * @category Core\n */\nexport function start() {\n    return globalContext.resume();\n}\n/**\n * Log Tone.js + version in the console.\n */\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n    let prefix = \"v\";\n    if (version === \"dev\") {\n        prefix = \"\";\n    }\n    const printString = ` * Tone.js ${prefix}${version} * `;\n    // eslint-disable-next-line no-console\n    console.log(`%c${printString}`, \"background: #000; color: #fff\");\n}\n//# sourceMappingURL=Global.js.map","/**\n * Equal power gain scale. Good for cross-fading.\n * @param  percent (0-1)\n */\nexport function equalPowerScale(percent) {\n    const piFactor = 0.5 * Math.PI;\n    return Math.sin(percent * piFactor);\n}\n/**\n * Convert decibels into gain.\n */\nexport function dbToGain(db) {\n    return Math.pow(10, db / 20);\n}\n/**\n * Convert gain to decibels.\n */\nexport function gainToDb(gain) {\n    return 20 * (Math.log(gain) / Math.LN10);\n}\n/**\n * Convert an interval (in semitones) to a frequency ratio.\n * @param interval the number of semitones above the base note\n * @example\n * Tone.intervalToFrequencyRatio(0); // 1\n * Tone.intervalToFrequencyRatio(12); // 2\n * Tone.intervalToFrequencyRatio(-12); // 0.5\n */\nexport function intervalToFrequencyRatio(interval) {\n    return Math.pow(2, (interval / 12));\n}\n/**\n * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n * to generate all the other pitch values from notes. A4's values in Hertz.\n */\nlet A4 = 440;\nexport function getA4() {\n    return A4;\n}\nexport function setA4(freq) {\n    A4 = freq;\n}\n/**\n * Convert a frequency value to a MIDI note.\n * @param frequency The value to frequency value to convert.\n * @example\n * Tone.ftom(440); // returns 69\n */\nexport function ftom(frequency) {\n    return Math.round(ftomf(frequency));\n}\n/**\n * Convert a frequency to a floating point midi value\n */\nexport function ftomf(frequency) {\n    return 69 + 12 * Math.log2(frequency / A4);\n}\n/**\n * Convert a MIDI note to frequency value.\n * @param  midi The midi number to convert.\n * @return The corresponding frequency value\n * @example\n * Tone.mtof(69); // 440\n */\nexport function mtof(midi) {\n    return A4 * Math.pow(2, (midi - 69) / 12);\n}\n//# sourceMappingURL=Conversions.js.map","import { Tone } from \"../Tone\";\nimport { isDefined, isObject, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * TimeBase is a flexible encoding of time which can be evaluated to and from a string.\n */\nexport class TimeBaseClass extends Tone {\n    /**\n     * @param context The context associated with the time value. Used to compute\n     * Transport and context-relative timing.\n     * @param  value  The time value as a number, string or object\n     * @param  units  Unit values\n     */\n    constructor(context, value, units) {\n        super();\n        /**\n         * The default units\n         */\n        this.defaultUnits = \"s\";\n        this._val = value;\n        this._units = units;\n        this.context = context;\n        this._expressions = this._getExpressions();\n    }\n    /**\n     * All of the time encoding expressions\n     */\n    _getExpressions() {\n        return {\n            hz: {\n                method: (value) => {\n                    return this._frequencyToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)hz$/i,\n            },\n            i: {\n                method: (value) => {\n                    return this._ticksToUnits(parseInt(value, 10));\n                },\n                regexp: /^(\\d+)i$/i,\n            },\n            m: {\n                method: (value) => {\n                    return this._beatsToUnits(parseInt(value, 10) * this._getTimeSignature());\n                },\n                regexp: /^(\\d+)m$/i,\n            },\n            n: {\n                method: (value, dot) => {\n                    const numericValue = parseInt(value, 10);\n                    const scalar = dot === \".\" ? 1.5 : 1;\n                    if (numericValue === 1) {\n                        return this._beatsToUnits(this._getTimeSignature()) * scalar;\n                    }\n                    else {\n                        return this._beatsToUnits(4 / numericValue) * scalar;\n                    }\n                },\n                regexp: /^(\\d+)n(\\.?)$/i,\n            },\n            number: {\n                method: (value) => {\n                    return this._expressions[this.defaultUnits].method.call(this, value);\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)$/,\n            },\n            s: {\n                method: (value) => {\n                    return this._secondsToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)s$/,\n            },\n            samples: {\n                method: (value) => {\n                    return parseInt(value, 10) / this.context.sampleRate;\n                },\n                regexp: /^(\\d+)samples$/,\n            },\n            t: {\n                method: (value) => {\n                    const numericValue = parseInt(value, 10);\n                    return this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n                },\n                regexp: /^(\\d+)t$/i,\n            },\n            tr: {\n                method: (m, q, s) => {\n                    let total = 0;\n                    if (m && m !== \"0\") {\n                        total += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total += this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total += this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n            },\n        };\n    }\n    //-------------------------------------\n    // \tVALUE OF\n    //-------------------------------------\n    /**\n     * Evaluate the time value. Returns the time in seconds.\n     */\n    valueOf() {\n        if (this._val instanceof TimeBaseClass) {\n            this.fromType(this._val);\n        }\n        if (isUndef(this._val)) {\n            return this._noArg();\n        }\n        else if (isString(this._val) && isUndef(this._units)) {\n            for (const units in this._expressions) {\n                if (this._expressions[units].regexp.test(this._val.trim())) {\n                    this._units = units;\n                    break;\n                }\n            }\n        }\n        else if (isObject(this._val)) {\n            let total = 0;\n            for (const typeName in this._val) {\n                if (isDefined(this._val[typeName])) {\n                    const quantity = this._val[typeName];\n                    // @ts-ignore\n                    const time = (new this.constructor(this.context, typeName)).valueOf() * quantity;\n                    total += time;\n                }\n            }\n            return total;\n        }\n        if (isDefined(this._units)) {\n            const expr = this._expressions[this._units];\n            const matching = this._val.toString().trim().match(expr.regexp);\n            if (matching) {\n                return expr.method.apply(this, matching.slice(1));\n            }\n            else {\n                return expr.method.call(this, this._val);\n            }\n        }\n        else if (isString(this._val)) {\n            return parseFloat(this._val);\n        }\n        else {\n            return this._val;\n        }\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS\n    //-------------------------------------\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return 1 / freq;\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return (60 / this._getBpm()) * beats;\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return seconds;\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return (ticks * (this._beatsToUnits(1)) / this._getPPQ());\n    }\n    /**\n     * With no arguments, return 'now'\n     */\n    _noArg() {\n        return this._now();\n    }\n    //-------------------------------------\n    // \tTEMPO CONVERSIONS\n    //-------------------------------------\n    /**\n     * Return the bpm\n     */\n    _getBpm() {\n        return this.context.transport.bpm.value;\n    }\n    /**\n     * Return the timeSignature\n     */\n    _getTimeSignature() {\n        return this.context.transport.timeSignature;\n    }\n    /**\n     * Return the PPQ or 192 if Transport is not available\n     */\n    _getPPQ() {\n        return this.context.transport.PPQ;\n    }\n    //-------------------------------------\n    // \tCONVERSION INTERFACE\n    //-------------------------------------\n    /**\n     * Coerce a time type into this units type.\n     * @param type Any time type units\n     */\n    fromType(type) {\n        this._units = undefined;\n        switch (this.defaultUnits) {\n            case \"s\":\n                this._val = type.toSeconds();\n                break;\n            case \"i\":\n                this._val = type.toTicks();\n                break;\n            case \"hz\":\n                this._val = type.toFrequency();\n                break;\n            case \"midi\":\n                this._val = type.toMidi();\n                break;\n        }\n        return this;\n    }\n    /**\n     * Return the value in hertz\n     */\n    toFrequency() {\n        return 1 / this.toSeconds();\n    }\n    /**\n     * Return the time in samples\n     */\n    toSamples() {\n        return this.toSeconds() * this.context.sampleRate;\n    }\n    /**\n     * Return the time in milliseconds.\n     */\n    toMilliseconds() {\n        return this.toSeconds() * 1000;\n    }\n}\n//# sourceMappingURL=TimeBase.js.map","import { getContext } from \"../Global\";\nimport { ftom } from \"./Conversions\";\nimport { TimeBaseClass } from \"./TimeBase\";\n/**\n * TimeClass is a primitive type for encoding and decoding Time values.\n * TimeClass can be passed into the parameter of any method which takes time as an argument.\n * @param  val    The time value.\n * @param  units  The units of the value.\n * @example\n * const time = Tone.Time(\"4n\"); // a quarter note\n * @category Unit\n */\nexport class TimeClass extends TimeBaseClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"TimeClass\";\n    }\n    _getExpressions() {\n        return Object.assign(super._getExpressions(), {\n            now: {\n                method: (capture) => {\n                    return this._now() + new this.constructor(this.context, capture).valueOf();\n                },\n                regexp: /^\\+(.+)/,\n            },\n            quantize: {\n                method: (capture) => {\n                    const quantTo = new TimeClass(this.context, capture).valueOf();\n                    return this._secondsToUnits(this.context.transport.nextSubdivision(quantTo));\n                },\n                regexp: /^@(.+)/,\n            },\n        });\n    }\n    /**\n     * Quantize the time by the given subdivision. Optionally add a\n     * percentage which will move the time value towards the ideal\n     * quantized value by that percentage.\n     * @param  subdiv    The subdivision to quantize to\n     * @param  percent  Move the time value towards the quantized value by a percentage.\n     * @example\n     * Tone.Time(21).quantize(2); // returns 22\n     * Tone.Time(0.6).quantize(\"4n\", 0.5); // returns 0.55\n     */\n    quantize(subdiv, percent = 1) {\n        const subdivision = new this.constructor(this.context, subdiv).valueOf();\n        const value = this.valueOf();\n        const multiple = Math.round(value / subdivision);\n        const ideal = multiple * subdivision;\n        const diff = ideal - value;\n        return value + diff * percent;\n    }\n    //-------------------------------------\n    // CONVERSIONS\n    //-------------------------------------\n    /**\n     * Convert a Time to Notation. The notation values are will be the\n     * closest representation between 1m to 128th note.\n     * @return {Notation}\n     * @example\n     * // if the Transport is at 120bpm:\n     * Tone.Time(2).toNotation(); // returns \"1m\"\n     */\n    toNotation() {\n        const time = this.toSeconds();\n        const testNotations = [\"1m\"];\n        for (let power = 1; power < 9; power++) {\n            const subdiv = Math.pow(2, power);\n            testNotations.push(subdiv + \"n.\");\n            testNotations.push(subdiv + \"n\");\n            testNotations.push(subdiv + \"t\");\n        }\n        testNotations.push(\"0\");\n        // find the closets notation representation\n        let closest = testNotations[0];\n        let closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n        testNotations.forEach(notation => {\n            const notationSeconds = new TimeClass(this.context, notation).toSeconds();\n            if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n                closest = notation;\n                closestSeconds = notationSeconds;\n            }\n        });\n        return closest;\n    }\n    /**\n     * Return the time encoded as Bars:Beats:Sixteenths.\n     */\n    toBarsBeatsSixteenths() {\n        const quarterTime = this._beatsToUnits(1);\n        let quarters = this.valueOf() / quarterTime;\n        quarters = parseFloat(quarters.toFixed(4));\n        const measures = Math.floor(quarters / this._getTimeSignature());\n        let sixteenths = (quarters % 1) * 4;\n        quarters = Math.floor(quarters) % this._getTimeSignature();\n        const sixteenthString = sixteenths.toString();\n        if (sixteenthString.length > 3) {\n            // the additional parseFloat removes insignificant trailing zeroes\n            sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n        }\n        const progress = [measures, quarters, sixteenths];\n        return progress.join(\":\");\n    }\n    /**\n     * Return the time in ticks.\n     */\n    toTicks() {\n        const quarterTime = this._beatsToUnits(1);\n        const quarters = this.valueOf() / quarterTime;\n        return Math.round(quarters * this._getPPQ());\n    }\n    /**\n     * Return the time in seconds.\n     */\n    toSeconds() {\n        return this.valueOf();\n    }\n    /**\n     * Return the value as a midi note.\n     */\n    toMidi() {\n        return ftom(this.toFrequency());\n    }\n    _now() {\n        return this.context.now();\n    }\n}\n/**\n * Create a TimeClass from a time string or number. The time is computed against the\n * global Tone.Context. To use a specific context, use [[TimeClass]]\n * @param value A value which represents time\n * @param units The value's units if they can't be inferred by the value.\n * @category Unit\n * @example\n * const time = Tone.Time(\"4n\").toSeconds();\n * console.log(time);\n * @example\n * const note = Tone.Time(1).toNotation();\n * console.log(note);\n * @example\n * const freq = Tone.Time(0.5).toFrequency();\n * console.log(freq);\n */\nexport function Time(value, units) {\n    return new TimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=Time.js.map","import { getContext } from \"../Global\";\nimport { intervalToFrequencyRatio, mtof } from \"./Conversions\";\nimport { ftom, getA4, setA4 } from \"./Conversions\";\nimport { TimeClass } from \"./Time\";\n/**\n * Frequency is a primitive type for encoding Frequency values.\n * Eventually all time values are evaluated to hertz using the `valueOf` method.\n * @example\n * Tone.Frequency(\"C3\"); // 261\n * Tone.Frequency(38, \"midi\");\n * Tone.Frequency(\"C3\").transpose(4);\n * @category Unit\n */\nexport class FrequencyClass extends TimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"Frequency\";\n        this.defaultUnits = \"hz\";\n    }\n    /**\n     * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n     * to generate all the other pitch values from notes. A4's values in Hertz.\n     */\n    static get A4() {\n        return getA4();\n    }\n    static set A4(freq) {\n        setA4(freq);\n    }\n    //-------------------------------------\n    // \tAUGMENT BASE EXPRESSIONS\n    //-------------------------------------\n    _getExpressions() {\n        return Object.assign({}, super._getExpressions(), {\n            midi: {\n                regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n                method(value) {\n                    if (this.defaultUnits === \"midi\") {\n                        return value;\n                    }\n                    else {\n                        return FrequencyClass.mtof(value);\n                    }\n                },\n            },\n            note: {\n                regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n                method(pitch, octave) {\n                    const index = noteToScaleIndex[pitch.toLowerCase()];\n                    const noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n                    if (this.defaultUnits === \"midi\") {\n                        return noteNumber;\n                    }\n                    else {\n                        return FrequencyClass.mtof(noteNumber);\n                    }\n                },\n            },\n            tr: {\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n                method(m, q, s) {\n                    let total = 1;\n                    if (m && m !== \"0\") {\n                        total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n            },\n        });\n    }\n    //-------------------------------------\n    // \tEXPRESSIONS\n    //-------------------------------------\n    /**\n     * Transposes the frequency by the given number of semitones.\n     * @return  A new transposed frequency\n     * @example\n     * Tone.Frequency(\"A4\").transpose(3); // \"C5\"\n     */\n    transpose(interval) {\n        return new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n    }\n    /**\n     * Takes an array of semitone intervals and returns\n     * an array of frequencies transposed by those intervals.\n     * @return  Returns an array of Frequencies\n     * @example\n     * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); // [\"A4\", \"C5\", \"E5\"]\n     */\n    harmonize(intervals) {\n        return intervals.map(interval => {\n            return this.transpose(interval);\n        });\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS\n    //-------------------------------------\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * Tone.Frequency(\"C4\").toMidi(); // 60\n     */\n    toMidi() {\n        return ftom(this.valueOf());\n    }\n    /**\n     * Return the value of the frequency in Scientific Pitch Notation\n     * @example\n     * Tone.Frequency(69, \"midi\").toNote(); // \"A4\"\n     */\n    toNote() {\n        const freq = this.toFrequency();\n        const log = Math.log2(freq / FrequencyClass.A4);\n        let noteNumber = Math.round(12 * log) + 57;\n        const octave = Math.floor(noteNumber / 12);\n        if (octave < 0) {\n            noteNumber += -12 * octave;\n        }\n        const noteName = scaleIndexToNote[noteNumber % 12];\n        return noteName + octave.toString();\n    }\n    /**\n     * Return the duration of one cycle in seconds.\n     */\n    toSeconds() {\n        return 1 / super.toSeconds();\n    }\n    /**\n     * Return the duration of one cycle in ticks\n     */\n    toTicks() {\n        const quarterTime = this._beatsToUnits(1);\n        const quarters = this.valueOf() / quarterTime;\n        return Math.floor(quarters * this._getPPQ());\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS HELPERS\n    //-------------------------------------\n    /**\n     * With no arguments, return 0\n     */\n    _noArg() {\n        return 0;\n    }\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return freq;\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return 1 / ((ticks * 60) / (this._getBpm() * this._getPPQ()));\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return 1 / super._beatsToUnits(beats);\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return 1 / seconds;\n    }\n    /**\n     * Convert a MIDI note to frequency value.\n     * @param  midi The midi number to convert.\n     * @return The corresponding frequency value\n     */\n    static mtof(midi) {\n        return mtof(midi);\n    }\n    /**\n     * Convert a frequency value to a MIDI note.\n     * @param frequency The value to frequency value to convert.\n     */\n    static ftom(frequency) {\n        return ftom(frequency);\n    }\n}\n//-------------------------------------\n// \tFREQUENCY CONVERSIONS\n//-------------------------------------\n/**\n * Note to scale index.\n * @hidden\n */\nconst noteToScaleIndex = {\n    cbb: -2, cb: -1, c: 0, \"c#\": 1, cx: 2,\n    dbb: 0, db: 1, d: 2, \"d#\": 3, dx: 4,\n    ebb: 2, eb: 3, e: 4, \"e#\": 5, ex: 6,\n    fbb: 3, fb: 4, f: 5, \"f#\": 6, fx: 7,\n    gbb: 5, gb: 6, g: 7, \"g#\": 8, gx: 9,\n    abb: 7, ab: 8, a: 9, \"a#\": 10, ax: 11,\n    bbb: 9, bb: 10, b: 11, \"b#\": 12, bx: 13,\n};\n/**\n * scale index to note (sharps)\n * @hidden\n */\nconst scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n * @example\n * const midi = Tone.Frequency(\"C3\").toMidi();\n * console.log(midi);\n * @example\n * const hertz = Tone.Frequency(38, \"midi\").toFrequency();\n * console.log(hertz);\n */\nexport function Frequency(value, units) {\n    return new FrequencyClass(getContext(), value, units);\n}\n//# sourceMappingURL=Frequency.js.map","import { getContext } from \"../Global\";\nimport { TimeClass } from \"./Time\";\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport class TransportTimeClass extends TimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"TransportTime\";\n    }\n    /**\n     * Return the current time in whichever context is relevant\n     */\n    _now() {\n        return this.context.transport.seconds;\n    }\n}\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to [[Time]], but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport function TransportTime(value, units) {\n    return new TransportTimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=TransportTime.js.map","import { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { FrequencyClass } from \"../type/Frequency\";\nimport { TimeClass } from \"../type/Time\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { getDefaultsFromInstance, optionsFromArguments } from \"../util/Defaults\";\nimport { isArray, isBoolean, isDefined, isNumber, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * The Base class for all nodes that have an AudioContext.\n */\nexport class ToneWithContext extends Tone {\n    constructor() {\n        super();\n        const options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n        if (this.defaultContext) {\n            this.context = this.defaultContext;\n        }\n        else {\n            this.context = options.context;\n        }\n    }\n    static getDefaults() {\n        return {\n            context: getContext(),\n        };\n    }\n    /**\n     * Return the current time of the Context clock plus the lookAhead.\n     * @example\n     * setInterval(() => {\n     * \tconsole.log(Tone.now());\n     * }, 100);\n     */\n    now() {\n        return this.context.currentTime + this.context.lookAhead;\n    }\n    /**\n     * Return the current time of the Context clock without any lookAhead.\n     * @example\n     * setInterval(() => {\n     * \tconsole.log(Tone.immediate());\n     * }, 100);\n     */\n    immediate() {\n        return this.context.currentTime;\n    }\n    /**\n     * The duration in seconds of one sample.\n     * @example\n     * console.log(Tone.Transport.sampleTime);\n     */\n    get sampleTime() {\n        return 1 / this.context.sampleRate;\n    }\n    /**\n     * The number of seconds of 1 processing block (128 samples)\n     * @example\n     * console.log(Tone.Destination.blockTime);\n     */\n    get blockTime() {\n        return 128 / this.context.sampleRate;\n    }\n    /**\n     * Convert the incoming time to seconds\n     * @example\n     * const gain = new Tone.Gain();\n     * console.log(gain.toSeconds(\"4n\"));\n     */\n    toSeconds(time) {\n        return new TimeClass(this.context, time).toSeconds();\n    }\n    /**\n     * Convert the input to a frequency number\n     * @example\n     * const gain = new Tone.Gain();\n     * console.log(gain.toFrequency(\"4n\"));\n     */\n    toFrequency(freq) {\n        return new FrequencyClass(this.context, freq).toFrequency();\n    }\n    /**\n     * Convert the input time into ticks\n     * @example\n     * const gain = new Tone.Gain();\n     * console.log(gain.toTicks(\"4n\"));\n     */\n    toTicks(time) {\n        return new TransportTimeClass(this.context, time).toTicks();\n    }\n    //-------------------------------------\n    // \tGET/SET\n    //-------------------------------------\n    /**\n     * Get a subset of the properties which are in the partial props\n     */\n    _getPartialProperties(props) {\n        const options = this.get();\n        // remove attributes from the prop that are not in the partial\n        Object.keys(options).forEach(name => {\n            if (isUndef(props[name])) {\n                delete options[name];\n            }\n        });\n        return options;\n    }\n    /**\n     * Get the object's attributes.\n     * @example\n     * const osc = new Tone.Oscillator();\n     * console.log(osc.get());\n     */\n    get() {\n        const defaults = getDefaultsFromInstance(this);\n        Object.keys(defaults).forEach(attribute => {\n            if (Reflect.has(this, attribute)) {\n                const member = this[attribute];\n                if (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n                    defaults[attribute] = member.value;\n                }\n                else if (member instanceof ToneWithContext) {\n                    defaults[attribute] = member._getPartialProperties(defaults[attribute]);\n                    // otherwise make sure it's a serializable type\n                }\n                else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n                    defaults[attribute] = member;\n                }\n                else {\n                    // remove all undefined and unserializable attributes\n                    delete defaults[attribute];\n                }\n            }\n        });\n        return defaults;\n    }\n    /**\n     * Set multiple properties at once with an object.\n     * @example\n     * const filter = new Tone.Filter();\n     * // set values using an object\n     * filter.set({\n     * \tfrequency: 300,\n     * \ttype: \"highpass\"\n     * });\n     */\n    set(props) {\n        Object.keys(props).forEach(attribute => {\n            if (Reflect.has(this, attribute) && isDefined(this[attribute])) {\n                if (this[attribute] && isDefined(this[attribute].value) && isDefined(this[attribute].setValueAtTime)) {\n                    // small optimization\n                    if (this[attribute].value !== props[attribute]) {\n                        this[attribute].value = props[attribute];\n                    }\n                }\n                else if (this[attribute] instanceof ToneWithContext) {\n                    this[attribute].set(props[attribute]);\n                }\n                else {\n                    this[attribute] = props[attribute];\n                }\n            }\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=ToneWithContext.js.map","import { Timeline } from \"./Timeline\";\nimport { assertRange } from \"./Debug\";\n/**\n * A Timeline State. Provides the methods: `setStateAtTime(\"state\", time)` and `getValueAtTime(time)`\n * @param initial The initial state of the StateTimeline.  Defaults to `undefined`\n */\nexport class StateTimeline extends Timeline {\n    constructor(initial = \"stopped\") {\n        super();\n        this.name = \"StateTimeline\";\n        this._initial = initial;\n        this.setStateAtTime(this._initial, 0);\n    }\n    /**\n     * Returns the scheduled state scheduled before or at\n     * the given time.\n     * @param  time  The time to query.\n     * @return  The name of the state input in setStateAtTime.\n     */\n    getValueAtTime(time) {\n        const event = this.get(time);\n        if (event !== null) {\n            return event.state;\n        }\n        else {\n            return this._initial;\n        }\n    }\n    /**\n     * Add a state to the timeline.\n     * @param  state The name of the state to set.\n     * @param  time  The time to query.\n     * @param options Any additional options that are needed in the timeline.\n     */\n    setStateAtTime(state, time, options) {\n        assertRange(time, 0);\n        this.add(Object.assign({}, options, {\n            state,\n            time,\n        }));\n        return this;\n    }\n    /**\n     * Return the event before the time with the given state\n     * @param  state The state to look for\n     * @param  time  When to check before\n     * @return  The event with the given state before the time\n     */\n    getLastState(state, time) {\n        // time = this.toSeconds(time);\n        const index = this._search(time);\n        for (let i = index; i >= 0; i--) {\n            const event = this._timeline[i];\n            if (event.state === state) {\n                return event;\n            }\n        }\n    }\n    /**\n     * Return the event after the time with the given state\n     * @param  state The state to look for\n     * @param  time  When to check from\n     * @return  The event with the given state after the time\n     */\n    getNextState(state, time) {\n        // time = this.toSeconds(time);\n        const index = this._search(time);\n        if (index !== -1) {\n            for (let i = index; i < this._timeline.length; i++) {\n                const event = this._timeline[i];\n                if (event.state === state) {\n                    return event;\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=StateTimeline.js.map","import { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { EQ } from \"../util/Math\";\nimport { assert, assertRange } from \"../util/Debug\";\n/**\n * Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n */\nexport class Param extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]));\n        this.name = \"Param\";\n        this.overridden = false;\n        /**\n         * The minimum output value\n         */\n        this._minOutput = 1e-7;\n        const options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n        assert(isDefined(options.param) &&\n            (isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n        while (!isAudioParam(options.param)) {\n            options.param = options.param._param;\n        }\n        this._swappable = isDefined(options.swappable) ? options.swappable : false;\n        if (this._swappable) {\n            this.input = this.context.createGain();\n            // initialize\n            this._param = options.param;\n            this.input.connect(this._param);\n        }\n        else {\n            this._param = this.input = options.param;\n        }\n        this._events = new Timeline(1000);\n        this._initialValue = this._param.defaultValue;\n        this.units = options.units;\n        this.convert = options.convert;\n        this._minValue = options.minValue;\n        this._maxValue = options.maxValue;\n        // if the value is defined, set it immediately\n        if (isDefined(options.value) && options.value !== this._toType(this._initialValue)) {\n            this.setValueAtTime(options.value, 0);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            convert: true,\n            units: \"number\",\n        });\n    }\n    get value() {\n        const now = this.now();\n        return this.getValueAtTime(now);\n    }\n    set value(value) {\n        this.cancelScheduledValues(this.now());\n        this.setValueAtTime(value, this.now());\n    }\n    get minValue() {\n        // if it's not the default minValue, return it\n        if (isDefined(this._minValue)) {\n            return this._minValue;\n        }\n        else if (this.units === \"time\" || this.units === \"frequency\" ||\n            this.units === \"normalRange\" || this.units === \"positive\" ||\n            this.units === \"transportTime\" || this.units === \"ticks\" ||\n            this.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n            return 0;\n        }\n        else if (this.units === \"audioRange\") {\n            return -1;\n        }\n        else if (this.units === \"decibels\") {\n            return -Infinity;\n        }\n        else {\n            return this._param.minValue;\n        }\n    }\n    get maxValue() {\n        if (isDefined(this._maxValue)) {\n            return this._maxValue;\n        }\n        else if (this.units === \"normalRange\" ||\n            this.units === \"audioRange\") {\n            return 1;\n        }\n        else {\n            return this._param.maxValue;\n        }\n    }\n    /**\n     * Type guard based on the unit name\n     */\n    _is(arg, type) {\n        return this.units === type;\n    }\n    /**\n     * Make sure the value is always in the defined range\n     */\n    _assertRange(value) {\n        if (isDefined(this.maxValue) && isDefined(this.minValue)) {\n            assertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n        }\n        return value;\n    }\n    /**\n     * Convert the given value from the type specified by Param.units\n     * into the destination value (such as Gain or Frequency).\n     */\n    _fromType(val) {\n        if (this.convert && !this.overridden) {\n            if (this._is(val, \"time\")) {\n                return this.toSeconds(val);\n            }\n            else if (this._is(val, \"decibels\")) {\n                return dbToGain(val);\n            }\n            else if (this._is(val, \"frequency\")) {\n                return this.toFrequency(val);\n            }\n            else {\n                return val;\n            }\n        }\n        else if (this.overridden) {\n            // if it's overridden, should only schedule 0s\n            return 0;\n        }\n        else {\n            return val;\n        }\n    }\n    /**\n     * Convert the parameters value into the units specified by Param.units.\n     */\n    _toType(val) {\n        if (this.convert && this.units === \"decibels\") {\n            return gainToDb(val);\n        }\n        else {\n            return val;\n        }\n    }\n    //-------------------------------------\n    // ABSTRACT PARAM INTERFACE\n    // all docs are generated from ParamInterface.ts\n    //-------------------------------------\n    setValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        const numericValue = this._fromType(value);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(time)}`);\n        this._assertRange(numericValue);\n        this.log(this.units, \"setValueAtTime\", value, computedTime);\n        this._events.add({\n            time: computedTime,\n            type: \"setValueAtTime\",\n            value: numericValue,\n        });\n        this._param.setValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    getValueAtTime(time) {\n        const computedTime = Math.max(this.toSeconds(time), 0);\n        const after = this._events.getAfter(computedTime);\n        const before = this._events.get(computedTime);\n        let value = this._initialValue;\n        // if it was set by\n        if (before === null) {\n            value = this._initialValue;\n        }\n        else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n            const previous = this._events.getBefore(before.time);\n            let previousVal;\n            if (previous === null) {\n                previousVal = this._initialValue;\n            }\n            else {\n                previousVal = previous.value;\n            }\n            if (before.type === \"setTargetAtTime\") {\n                value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n            }\n        }\n        else if (after === null) {\n            value = before.value;\n        }\n        else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n            let beforeValue = before.value;\n            if (before.type === \"setTargetAtTime\") {\n                const previous = this._events.getBefore(before.time);\n                if (previous === null) {\n                    beforeValue = this._initialValue;\n                }\n                else {\n                    beforeValue = previous.value;\n                }\n            }\n            if (after.type === \"linearRampToValueAtTime\") {\n                value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n            else {\n                value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n        }\n        else {\n            value = before.value;\n        }\n        return this._toType(value);\n    }\n    setRampPoint(time) {\n        time = this.toSeconds(time);\n        let currentVal = this.getValueAtTime(time);\n        this.cancelAndHoldAtTime(time);\n        if (this._fromType(currentVal) === 0) {\n            currentVal = this._toType(this._minOutput);\n        }\n        this.setValueAtTime(currentVal, time);\n        return this;\n    }\n    linearRampToValueAtTime(value, endTime) {\n        const numericValue = this._fromType(value);\n        const computedTime = this.toSeconds(endTime);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n        this._assertRange(numericValue);\n        this._events.add({\n            time: computedTime,\n            type: \"linearRampToValueAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n        this._param.linearRampToValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, endTime) {\n        let numericValue = this._fromType(value);\n        numericValue = Math.max(this._minOutput, numericValue);\n        this._assertRange(numericValue);\n        const computedTime = this.toSeconds(endTime);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n        // store the event\n        this._events.add({\n            time: computedTime,\n            type: \"exponentialRampToValueAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n        this._param.exponentialRampToValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    exponentialRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    }\n    linearRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    }\n    targetRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialApproachValueAtTime(value, startTime, rampTime);\n        return this;\n    }\n    exponentialApproachValueAtTime(value, time, rampTime) {\n        time = this.toSeconds(time);\n        rampTime = this.toSeconds(rampTime);\n        const timeConstant = Math.log(rampTime + 1) / Math.log(200);\n        this.setTargetAtTime(value, time, timeConstant);\n        // at 90% start a linear ramp to the final value\n        this.cancelAndHoldAtTime(time + rampTime * 0.9);\n        this.linearRampToValueAtTime(value, time + rampTime);\n        return this;\n    }\n    setTargetAtTime(value, startTime, timeConstant) {\n        const numericValue = this._fromType(value);\n        // The value will never be able to approach without timeConstant > 0.\n        assert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n        const computedTime = this.toSeconds(startTime);\n        this._assertRange(numericValue);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setTargetAtTime: ${JSON.stringify(value)}, ${JSON.stringify(startTime)}`);\n        this._events.add({\n            constant: timeConstant,\n            time: computedTime,\n            type: \"setTargetAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n        this._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n        return this;\n    }\n    setValueCurveAtTime(values, startTime, duration, scaling = 1) {\n        duration = this.toSeconds(duration);\n        startTime = this.toSeconds(startTime);\n        const startingValue = this._fromType(values[0]) * scaling;\n        this.setValueAtTime(this._toType(startingValue), startTime);\n        const segTime = duration / (values.length - 1);\n        for (let i = 1; i < values.length; i++) {\n            const numericValue = this._fromType(values[i]) * scaling;\n            this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n        }\n        return this;\n    }\n    cancelScheduledValues(time) {\n        const computedTime = this.toSeconds(time);\n        assert(isFinite(computedTime), `Invalid argument to cancelScheduledValues: ${JSON.stringify(time)}`);\n        this._events.cancel(computedTime);\n        this._param.cancelScheduledValues(computedTime);\n        this.log(this.units, \"cancelScheduledValues\", computedTime);\n        return this;\n    }\n    cancelAndHoldAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const valueAtTime = this._fromType(this.getValueAtTime(computedTime));\n        // remove the schedule events\n        assert(isFinite(computedTime), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(time)}`);\n        this.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime);\n        // if there is an event at the given computedTime\n        // and that even is not a \"set\"\n        const before = this._events.get(computedTime);\n        const after = this._events.getAfter(computedTime);\n        if (before && EQ(before.time, computedTime)) {\n            // remove everything after\n            if (after) {\n                this._param.cancelScheduledValues(after.time);\n                this._events.cancel(after.time);\n            }\n            else {\n                this._param.cancelAndHoldAtTime(computedTime);\n                this._events.cancel(computedTime + this.sampleTime);\n            }\n        }\n        else if (after) {\n            this._param.cancelScheduledValues(after.time);\n            // cancel the next event(s)\n            this._events.cancel(after.time);\n            if (after.type === \"linearRampToValueAtTime\") {\n                this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n            else if (after.type === \"exponentialRampToValueAtTime\") {\n                this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n        }\n        // set the value at the given time\n        this._events.add({\n            time: computedTime,\n            type: \"setValueAtTime\",\n            value: valueAtTime,\n        });\n        this._param.setValueAtTime(valueAtTime, computedTime);\n        return this;\n    }\n    rampTo(value, rampTime = 0.1, startTime) {\n        if (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n            this.exponentialRampTo(value, rampTime, startTime);\n        }\n        else {\n            this.linearRampTo(value, rampTime, startTime);\n        }\n        return this;\n    }\n    /**\n     * Apply all of the previously scheduled events to the passed in Param or AudioParam.\n     * The applied values will start at the context's current time and schedule\n     * all of the events which are scheduled on this Param onto the passed in param.\n     */\n    apply(param) {\n        const now = this.context.currentTime;\n        // set the param's value at the current time and schedule everything else\n        param.setValueAtTime(this.getValueAtTime(now), now);\n        // if the previous event was a curve, then set the rest of it\n        const previousEvent = this._events.get(now);\n        if (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n            // approx it until the next event with linear ramps\n            const nextEvent = this._events.getAfter(previousEvent.time);\n            // or for 2 seconds if there is no event\n            const endTime = nextEvent ? nextEvent.time : now + 2;\n            const subdivisions = (endTime - now) / 10;\n            for (let i = now; i < endTime; i += subdivisions) {\n                param.linearRampToValueAtTime(this.getValueAtTime(i), i);\n            }\n        }\n        this._events.forEachAfter(this.context.currentTime, event => {\n            if (event.type === \"cancelScheduledValues\") {\n                param.cancelScheduledValues(event.time);\n            }\n            else if (event.type === \"setTargetAtTime\") {\n                param.setTargetAtTime(event.value, event.time, event.constant);\n            }\n            else {\n                param[event.type](event.value, event.time);\n            }\n        });\n        return this;\n    }\n    /**\n     * Replace the Param's internal AudioParam. Will apply scheduled curves\n     * onto the parameter and replace the connections.\n     */\n    setParam(param) {\n        assert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n        const input = this.input;\n        input.disconnect(this._param);\n        this.apply(param);\n        this._param = param;\n        input.connect(this._param);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._events.dispose();\n        return this;\n    }\n    get defaultValue() {\n        return this._toType(this._param.defaultValue);\n    }\n    //-------------------------------------\n    // \tAUTOMATION CURVE CALCULATIONS\n    // \tMIT License, copyright (c) 2014 Jordan Santell\n    //-------------------------------------\n    // Calculates the the value along the curve produced by setTargetAtTime\n    _exponentialApproach(t0, v0, v1, timeConstant, t) {\n        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n    }\n    // Calculates the the value along the curve produced by linearRampToValueAtTime\n    _linearInterpolate(t0, v0, t1, v1, t) {\n        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n    }\n    // Calculates the the value along the curve produced by exponentialRampToValueAtTime\n    _exponentialInterpolate(t0, v0, t1, v1, t) {\n        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n    }\n}\n//# sourceMappingURL=Param.js.map","import { isAudioNode, isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { Param } from \"./Param\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { assert, warn } from \"../util/Debug\";\n/**\n * ToneAudioNode is the base class for classes which process audio.\n */\nexport class ToneAudioNode extends ToneWithContext {\n    constructor() {\n        super(...arguments);\n        /**\n         * The name of the class\n         */\n        this.name = \"ToneAudioNode\";\n        /**\n         * List all of the node that must be set to match the ChannelProperties\n         */\n        this._internalChannels = [];\n    }\n    /**\n     * The number of inputs feeding into the AudioNode.\n     * For source nodes, this will be 0.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfInputs);\n     */\n    get numberOfInputs() {\n        if (isDefined(this.input)) {\n            if (isAudioParam(this.input) || this.input instanceof Param) {\n                return 1;\n            }\n            else {\n                return this.input.numberOfInputs;\n            }\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The number of outputs of the AudioNode.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfOutputs);\n     */\n    get numberOfOutputs() {\n        if (isDefined(this.output)) {\n            return this.output.numberOfOutputs;\n        }\n        else {\n            return 0;\n        }\n    }\n    //-------------------------------------\n    // AUDIO PROPERTIES\n    //-------------------------------------\n    /**\n     * Used to decide which nodes to get/set properties on\n     */\n    _isAudioNode(node) {\n        return isDefined(node) && (node instanceof ToneAudioNode || isAudioNode(node));\n    }\n    /**\n     * Get all of the audio nodes (either internal or input/output) which together\n     * make up how the class node responds to channel input/output\n     */\n    _getInternalNodes() {\n        const nodeList = this._internalChannels.slice(0);\n        if (this._isAudioNode(this.input)) {\n            nodeList.push(this.input);\n        }\n        if (this._isAudioNode(this.output)) {\n            if (this.input !== this.output) {\n                nodeList.push(this.output);\n            }\n        }\n        return nodeList;\n    }\n    /**\n     * Set the audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     * @param options\n     */\n    _setChannelProperties(options) {\n        const nodeList = this._getInternalNodes();\n        nodeList.forEach(node => {\n            node.channelCount = options.channelCount;\n            node.channelCountMode = options.channelCountMode;\n            node.channelInterpretation = options.channelInterpretation;\n        });\n    }\n    /**\n     * Get the current audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     */\n    _getChannelProperties() {\n        const nodeList = this._getInternalNodes();\n        assert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\");\n        // use the first node to get properties\n        // they should all be the same\n        const node = nodeList[0];\n        return {\n            channelCount: node.channelCount,\n            channelCountMode: node.channelCountMode,\n            channelInterpretation: node.channelInterpretation,\n        };\n    }\n    /**\n     * channelCount is the number of channels used when up-mixing and down-mixing\n     * connections to any inputs to the node. The default value is 2 except for\n     * specific nodes where its value is specially determined.\n     */\n    get channelCount() {\n        return this._getChannelProperties().channelCount;\n    }\n    set channelCount(channelCount) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelCount }));\n    }\n    /**\n     * channelCountMode determines how channels will be counted when up-mixing and\n     * down-mixing connections to any inputs to the node.\n     * The default value is \"max\". This attribute has no effect for nodes with no inputs.\n     * * \"max\" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.\n     * * \"clamped-max\" - computedNumberOfChannels is determined as for \"max\" and then clamped to a maximum value of the given channelCount.\n     * * \"explicit\" - computedNumberOfChannels is the exact value as specified by the channelCount.\n     */\n    get channelCountMode() {\n        return this._getChannelProperties().channelCountMode;\n    }\n    set channelCountMode(channelCountMode) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelCountMode }));\n    }\n    /**\n     * channelInterpretation determines how individual channels will be treated\n     * when up-mixing and down-mixing connections to any inputs to the node.\n     * The default value is \"speakers\".\n     */\n    get channelInterpretation() {\n        return this._getChannelProperties().channelInterpretation;\n    }\n    set channelInterpretation(channelInterpretation) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelInterpretation }));\n    }\n    //-------------------------------------\n    // CONNECTIONS\n    //-------------------------------------\n    /**\n     * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode\n     * @param destination The output to connect to\n     * @param outputNum The output to connect from\n     * @param inputNum The input to connect to\n     */\n    connect(destination, outputNum = 0, inputNum = 0) {\n        connect(this, destination, outputNum, inputNum);\n        return this;\n    }\n    /**\n     * Connect the output to the context's destination node.\n     * @example\n     * const osc = new Tone.Oscillator(\"C2\").start();\n     * osc.toDestination();\n     */\n    toDestination() {\n        this.connect(this.context.destination);\n        return this;\n    }\n    /**\n     * Connect the output to the context's destination node.\n     * See [[toDestination]]\n     * @deprecated\n     */\n    toMaster() {\n        warn(\"toMaster() has been renamed toDestination()\");\n        return this.toDestination();\n    }\n    /**\n     * disconnect the output\n     */\n    disconnect(destination, outputNum = 0, inputNum = 0) {\n        disconnect(this, destination, outputNum, inputNum);\n        return this;\n    }\n    /**\n     * Connect the output of this node to the rest of the nodes in series.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/handdrum-loop.mp3\");\n     * player.autostart = true;\n     * const filter = new Tone.AutoFilter(4).start();\n     * const distortion = new Tone.Distortion(0.5);\n     * // connect the player to the filter, distortion and then to the master output\n     * player.chain(filter, distortion, Tone.Destination);\n     */\n    chain(...nodes) {\n        connectSeries(this, ...nodes);\n        return this;\n    }\n    /**\n     * connect the output of this node to the rest of the nodes in parallel.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3\");\n     * player.autostart = true;\n     * const pitchShift = new Tone.PitchShift(4).toDestination();\n     * const filter = new Tone.Filter(\"G5\").toDestination();\n     * // connect a node to the pitch shift and filter in parallel\n     * player.fan(pitchShift, filter);\n     */\n    fan(...nodes) {\n        nodes.forEach(node => this.connect(node));\n        return this;\n    }\n    /**\n     * Dispose and disconnect\n     */\n    dispose() {\n        super.dispose();\n        if (isDefined(this.input)) {\n            if (this.input instanceof ToneAudioNode) {\n                this.input.dispose();\n            }\n            else if (isAudioNode(this.input)) {\n                this.input.disconnect();\n            }\n        }\n        if (isDefined(this.output)) {\n            if (this.output instanceof ToneAudioNode) {\n                this.output.dispose();\n            }\n            else if (isAudioNode(this.output)) {\n                this.output.disconnect();\n            }\n        }\n        this._internalChannels = [];\n        return this;\n    }\n}\n//-------------------------------------\n// CONNECTIONS\n//-------------------------------------\n/**\n * connect together all of the arguments in series\n * @param nodes\n */\nexport function connectSeries(...nodes) {\n    const first = nodes.shift();\n    nodes.reduce((prev, current) => {\n        if (prev instanceof ToneAudioNode) {\n            prev.connect(current);\n        }\n        else if (isAudioNode(prev)) {\n            connect(prev, current);\n        }\n        return current;\n    }, first);\n}\n/**\n * Connect two nodes together so that signal flows from the\n * first node to the second. Optionally specify the input and output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function connect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {\n    assert(isDefined(srcNode), \"Cannot connect from undefined node\");\n    assert(isDefined(dstNode), \"Cannot connect to undefined node\");\n    if (dstNode instanceof ToneAudioNode || isAudioNode(dstNode)) {\n        assert(dstNode.numberOfInputs > 0, \"Cannot connect to node with no inputs\");\n    }\n    assert(srcNode.numberOfOutputs > 0, \"Cannot connect from node with no outputs\");\n    // resolve the input of the dstNode\n    while ((dstNode instanceof ToneAudioNode || dstNode instanceof Param)) {\n        if (isDefined(dstNode.input)) {\n            dstNode = dstNode.input;\n        }\n    }\n    while (srcNode instanceof ToneAudioNode) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    // make the connection\n    if (isAudioParam(dstNode)) {\n        srcNode.connect(dstNode, outputNumber);\n    }\n    else {\n        srcNode.connect(dstNode, outputNumber, inputNumber);\n    }\n}\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function disconnect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {\n    // resolve the destination node\n    if (isDefined(dstNode)) {\n        while (dstNode instanceof ToneAudioNode) {\n            dstNode = dstNode.input;\n        }\n    }\n    // resolve the src node\n    while (!(isAudioNode(srcNode))) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    if (isAudioParam(dstNode)) {\n        srcNode.disconnect(dstNode, outputNumber);\n    }\n    else if (isAudioNode(dstNode)) {\n        srcNode.disconnect(dstNode, outputNumber, inputNumber);\n    }\n    else {\n        srcNode.disconnect();\n    }\n}\n//# sourceMappingURL=ToneAudioNode.js.map","import { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst gainNode = new Tone.Gain(0).toDestination();\n * \tconst osc = new Tone.Oscillator(30).connect(gainNode).start();\n * \tgainNode.gain.rampTo(1, 0.1);\n * \tgainNode.gain.rampTo(0, 0.4, 0.2);\n * }, 0.7, 1);\n */\nexport class Gain extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]));\n        this.name = \"Gain\";\n        /**\n         * The wrapped GainNode.\n         */\n        this._gainNode = this.context.createGain();\n        // input = output\n        this.input = this._gainNode;\n        this.output = this._gainNode;\n        const options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n        this.gain = new Param({\n            context: this.context,\n            convert: options.convert,\n            param: this._gainNode.gain,\n            units: options.units,\n            value: options.gain,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        readOnly(this, \"gain\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            convert: true,\n            gain: 1,\n            units: \"gain\",\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._gainNode.disconnect();\n        this.gain.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Gain.js.map","import { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode, } from \"../core/context/ToneAudioNode\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Base class for fire-and-forget nodes\n */\nexport class OneShotSource extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        /**\n         * The callback to invoke after the\n         * source is done playing.\n         */\n        this.onended = noOp;\n        /**\n         * The start time\n         */\n        this._startTime = -1;\n        /**\n         * The stop time\n         */\n        this._stopTime = -1;\n        /**\n         * The id of the timeout\n         */\n        this._timeout = -1;\n        /**\n         * The public output node\n         */\n        this.output = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * The output gain node.\n         */\n        this._gainNode = this.output;\n        /**\n         * Get the playback state at the given time\n         */\n        this.getStateAtTime = function (time) {\n            const computedTime = this.toSeconds(time);\n            if (this._startTime !== -1 &&\n                computedTime >= this._startTime &&\n                (this._stopTime === -1 || computedTime <= this._stopTime)) {\n                return \"started\";\n            }\n            else {\n                return \"stopped\";\n            }\n        };\n        this._fadeIn = options.fadeIn;\n        this._fadeOut = options.fadeOut;\n        this._curve = options.curve;\n        this.onended = options.onended;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            curve: \"linear\",\n            fadeIn: 0,\n            fadeOut: 0,\n            onended: noOp,\n        });\n    }\n    /**\n     * Start the source at the given time\n     * @param  time When to start the source\n     */\n    _startGain(time, gain = 1) {\n        assert(this._startTime === -1, \"Source cannot be started more than once\");\n        // apply a fade in envelope\n        const fadeInTime = this.toSeconds(this._fadeIn);\n        // record the start time\n        this._startTime = time + fadeInTime;\n        this._startTime = Math.max(this._startTime, this.context.currentTime);\n        // schedule the envelope\n        if (fadeInTime > 0) {\n            this._gainNode.gain.setValueAtTime(0, time);\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n            }\n            else {\n                this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n            }\n        }\n        else {\n            this._gainNode.gain.setValueAtTime(gain, time);\n        }\n        return this;\n    }\n    /**\n     * Stop the source node at the given time.\n     * @param time When to stop the source\n     */\n    stop(time) {\n        this.log(\"stop\", time);\n        this._stopGain(this.toSeconds(time));\n        return this;\n    }\n    /**\n     * Stop the source at the given time\n     * @param  time When to stop the source\n     */\n    _stopGain(time) {\n        assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n        // cancel the previous stop\n        this.cancelStop();\n        // the fadeOut time\n        const fadeOutTime = this.toSeconds(this._fadeOut);\n        // schedule the stop callback\n        this._stopTime = this.toSeconds(time) + fadeOutTime;\n        this._stopTime = Math.max(this._stopTime, this.context.currentTime);\n        if (fadeOutTime > 0) {\n            // start the fade out curve at the given time\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n            }\n            else {\n                this._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n            }\n        }\n        else {\n            // stop any ongoing ramps, and set the value to 0\n            this._gainNode.gain.cancelAndHoldAtTime(time);\n            this._gainNode.gain.setValueAtTime(0, time);\n        }\n        this.context.clearTimeout(this._timeout);\n        this._timeout = this.context.setTimeout(() => {\n            // allow additional time for the exponential curve to fully decay\n            const additionalTail = this._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n            this._stopSource(this.now() + additionalTail);\n            this._onended();\n        }, this._stopTime - this.context.currentTime);\n        return this;\n    }\n    /**\n     * Invoke the onended callback\n     */\n    _onended() {\n        if (this.onended !== noOp) {\n            this.onended(this);\n            // overwrite onended to make sure it only is called once\n            this.onended = noOp;\n            // dispose when it's ended to free up for garbage collection only in the online context\n            if (!this.context.isOffline) {\n                const disposeCallback = () => this.dispose();\n                // @ts-ignore\n                if (typeof window.requestIdleCallback !== \"undefined\") {\n                    // @ts-ignore\n                    window.requestIdleCallback(disposeCallback);\n                }\n                else {\n                    setTimeout(disposeCallback, 1000);\n                }\n            }\n        }\n    }\n    /**\n     * Get the playback state at the current time\n     */\n    get state() {\n        return this.getStateAtTime(this.now());\n    }\n    /**\n     * Cancel a scheduled stop event\n     */\n    cancelStop() {\n        this.log(\"cancelStop\");\n        assert(this._startTime !== -1, \"Source is not started\");\n        // cancel the stop envelope\n        this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n        this.context.clearTimeout(this._timeout);\n        this._stopTime = -1;\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._gainNode.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=OneShotSource.js.map","import { connect } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { OneShotSource } from \"../source/OneShotSource\";\n/**\n * Wrapper around the native fire-and-forget ConstantSource.\n * Adds the ability to reschedule the stop method.\n * @category Signal\n */\nexport class ToneConstantSource extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]));\n        this.name = \"ToneConstantSource\";\n        /**\n         * The signal generator\n         */\n        this._source = this.context.createConstantSource();\n        const options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n        connect(this._source, this._gainNode);\n        this.offset = new Param({\n            context: this.context,\n            convert: options.convert,\n            param: this._source.offset,\n            units: options.units,\n            value: options.offset,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            convert: true,\n            offset: 1,\n            units: \"number\",\n        });\n    }\n    /**\n     * Start the source node at the given time\n     * @param  time When to start the source\n     */\n    start(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        this._startGain(computedTime);\n        this._source.start(computedTime);\n        return this;\n    }\n    _stopSource(time) {\n        this._source.stop(time);\n    }\n    dispose() {\n        super.dispose();\n        if (this.state === \"started\") {\n            this.stop();\n        }\n        this._source.disconnect();\n        this.offset.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneConstantSource.js.map","import { Param } from \"../core/context/Param\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { isAudioParam } from \"../core/util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * A signal is an audio-rate value. Tone.Signal is a core component of the library.\n * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n * has all of the methods available to native Web Audio\n * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n * as well as additional conveniences. Read more about working with signals\n * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // a scheduleable signal which can be connected to control an AudioParam or another Signal\n * const signal = new Tone.Signal({\n * \tvalue: \"C4\",\n * \tunits: \"frequency\"\n * }).connect(osc.frequency);\n * // the scheduled ramp controls the connected signal\n * signal.rampTo(\"C2\", 4, \"+0.5\");\n * @category Signal\n */\nexport class Signal extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n        this.name = \"Signal\";\n        /**\n         * Indicates if the value should be overridden on connection.\n         */\n        this.override = true;\n        const options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n        this.output = this._constantSource = new ToneConstantSource({\n            context: this.context,\n            convert: options.convert,\n            offset: options.value,\n            units: options.units,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        this._constantSource.start(0);\n        this.input = this._param = this._constantSource.offset;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            convert: true,\n            units: \"number\",\n            value: 0,\n        });\n    }\n    connect(destination, outputNum = 0, inputNum = 0) {\n        // start it only when connected to something\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._param.dispose();\n        this._constantSource.dispose();\n        return this;\n    }\n    //-------------------------------------\n    // ABSTRACT PARAM INTERFACE\n    // just a proxy for the ConstantSourceNode's offset AudioParam\n    // all docs are generated from AbstractParam.ts\n    //-------------------------------------\n    setValueAtTime(value, time) {\n        this._param.setValueAtTime(value, time);\n        return this;\n    }\n    getValueAtTime(time) {\n        return this._param.getValueAtTime(time);\n    }\n    setRampPoint(time) {\n        this._param.setRampPoint(time);\n        return this;\n    }\n    linearRampToValueAtTime(value, time) {\n        this._param.linearRampToValueAtTime(value, time);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, time) {\n        this._param.exponentialRampToValueAtTime(value, time);\n        return this;\n    }\n    exponentialRampTo(value, rampTime, startTime) {\n        this._param.exponentialRampTo(value, rampTime, startTime);\n        return this;\n    }\n    linearRampTo(value, rampTime, startTime) {\n        this._param.linearRampTo(value, rampTime, startTime);\n        return this;\n    }\n    targetRampTo(value, rampTime, startTime) {\n        this._param.targetRampTo(value, rampTime, startTime);\n        return this;\n    }\n    exponentialApproachValueAtTime(value, time, rampTime) {\n        this._param.exponentialApproachValueAtTime(value, time, rampTime);\n        return this;\n    }\n    setTargetAtTime(value, startTime, timeConstant) {\n        this._param.setTargetAtTime(value, startTime, timeConstant);\n        return this;\n    }\n    setValueCurveAtTime(values, startTime, duration, scaling) {\n        this._param.setValueCurveAtTime(values, startTime, duration, scaling);\n        return this;\n    }\n    cancelScheduledValues(time) {\n        this._param.cancelScheduledValues(time);\n        return this;\n    }\n    cancelAndHoldAtTime(time) {\n        this._param.cancelAndHoldAtTime(time);\n        return this;\n    }\n    rampTo(value, rampTime, startTime) {\n        this._param.rampTo(value, rampTime, startTime);\n        return this;\n    }\n    get value() {\n        return this._param.value;\n    }\n    set value(value) {\n        this._param.value = value;\n    }\n    get convert() {\n        return this._param.convert;\n    }\n    set convert(convert) {\n        this._param.convert = convert;\n    }\n    get units() {\n        return this._param.units;\n    }\n    get overridden() {\n        return this._param.overridden;\n    }\n    set overridden(overridden) {\n        this._param.overridden = overridden;\n    }\n    get maxValue() {\n        return this._param.maxValue;\n    }\n    get minValue() {\n        return this._param.minValue;\n    }\n    /**\n     * See [[Param.apply]].\n     */\n    apply(param) {\n        this._param.apply(param);\n        return this;\n    }\n}\n/**\n * When connecting from a signal, it's necessary to zero out the node destination\n * node if that node is also a signal. If the destination is not 0, then the values\n * will be summed. This method insures that the output of the destination signal will\n * be the same as the source signal, making the destination signal a pass through node.\n * @param signal The output signal to connect from\n * @param destination the destination to connect to\n * @param outputNum the optional output number\n * @param inputNum the input number\n */\nexport function connectSignal(signal, destination, outputNum, inputNum) {\n    if (destination instanceof Param || isAudioParam(destination) ||\n        (destination instanceof Signal && destination.override)) {\n        // cancel changes\n        destination.cancelScheduledValues(0);\n        // reset the value\n        destination.setValueAtTime(0, 0);\n        // mark the value as overridden\n        if (destination instanceof Signal) {\n            destination.overridden = true;\n        }\n    }\n    connect(signal, destination, outputNum, inputNum);\n}\n//# sourceMappingURL=Signal.js.map","import { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isUndef } from \"../util/TypeCheck\";\n/**\n * A Param class just for computing ticks. Similar to the [[Param]] class,\n * but offers conversion to BPM values as well as ability to compute tick\n * duration and elapsed ticks\n */\nexport class TickParam extends Param {\n    constructor() {\n        super(optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]));\n        this.name = \"TickParam\";\n        /**\n         * The timeline which tracks all of the automations.\n         */\n        this._events = new Timeline(Infinity);\n        /**\n         * The internal holder for the multiplier value\n         */\n        this._multiplier = 1;\n        const options = optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]);\n        // set the multiplier\n        this._multiplier = options.multiplier;\n        // clear the ticks from the beginning\n        this._events.cancel(0);\n        // set an initial event\n        this._events.add({\n            ticks: 0,\n            time: 0,\n            type: \"setValueAtTime\",\n            value: this._fromType(options.value),\n        });\n        this.setValueAtTime(options.value, 0);\n    }\n    static getDefaults() {\n        return Object.assign(Param.getDefaults(), {\n            multiplier: 1,\n            units: \"hertz\",\n            value: 1,\n        });\n    }\n    setTargetAtTime(value, time, constant) {\n        // approximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        this.setRampPoint(time);\n        const computedValue = this._fromType(value);\n        // start from previously scheduled value\n        const prevEvent = this._events.get(time);\n        const segments = Math.round(Math.max(1 / constant, 1));\n        for (let i = 0; i <= segments; i++) {\n            const segTime = constant * i + time;\n            const rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    }\n    setValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        super.setValueAtTime(value, time);\n        const event = this._events.get(computedTime);\n        const previousEvent = this._events.previousEvent(event);\n        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    }\n    linearRampToValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        super.linearRampToValueAtTime(value, time);\n        const event = this._events.get(computedTime);\n        const previousEvent = this._events.previousEvent(event);\n        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, time) {\n        // aproximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        const computedVal = this._fromType(value);\n        // start from previously scheduled value\n        const prevEvent = this._events.get(time);\n        // approx 10 segments per second\n        const segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n        const segmentDur = ((time - prevEvent.time) / segments);\n        for (let i = 0; i <= segments; i++) {\n            const segTime = segmentDur * i + prevEvent.time;\n            const rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    }\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  event The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    _getTicksUntilEvent(event, time) {\n        if (event === null) {\n            event = {\n                ticks: 0,\n                time: 0,\n                type: \"setValueAtTime\",\n                value: 0,\n            };\n        }\n        else if (isUndef(event.ticks)) {\n            const previousEvent = this._events.previousEvent(event);\n            event.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n        }\n        const val0 = this._fromType(this.getValueAtTime(event.time));\n        let val1 = this._fromType(this.getValueAtTime(time));\n        // if it's right on the line, take the previous value\n        const onTheLineEvent = this._events.get(time);\n        if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValueAtTime\") {\n            val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n        }\n        return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n    }\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  time The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    getTicksAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const event = this._events.get(computedTime);\n        return Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n    }\n    /**\n     * Return the elapsed time of the number of ticks from the given time\n     * @param ticks The number of ticks to calculate\n     * @param  time The time to get the next tick from\n     * @return The duration of the number of ticks from the given time in seconds\n     */\n    getDurationOfTicks(ticks, time) {\n        const computedTime = this.toSeconds(time);\n        const currentTick = this.getTicksAtTime(time);\n        return this.getTimeOfTick(currentTick + ticks) - computedTime;\n    }\n    /**\n     * Given a tick, returns the time that tick occurs at.\n     * @return The time that the tick occurs.\n     */\n    getTimeOfTick(tick) {\n        const before = this._events.get(tick, \"ticks\");\n        const after = this._events.getAfter(tick, \"ticks\");\n        if (before && before.ticks === tick) {\n            return before.time;\n        }\n        else if (before && after &&\n            after.type === \"linearRampToValueAtTime\" &&\n            before.value !== after.value) {\n            const val0 = this._fromType(this.getValueAtTime(before.time));\n            const val1 = this._fromType(this.getValueAtTime(after.time));\n            const delta = (val1 - val0) / (after.time - before.time);\n            const k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n            const sol1 = (-val0 + k) / delta;\n            const sol2 = (-val0 - k) / delta;\n            return (sol1 > 0 ? sol1 : sol2) + before.time;\n        }\n        else if (before) {\n            if (before.value === 0) {\n                return Infinity;\n            }\n            else {\n                return before.time + (tick - before.ticks) / before.value;\n            }\n        }\n        else {\n            return tick / this._initialValue;\n        }\n    }\n    /**\n     * Convert some number of ticks their the duration in seconds accounting\n     * for any automation curves starting at the given time.\n     * @param  ticks The number of ticks to convert to seconds.\n     * @param  when  When along the automation timeline to convert the ticks.\n     * @return The duration in seconds of the ticks.\n     */\n    ticksToTime(ticks, when) {\n        return this.getDurationOfTicks(ticks, when);\n    }\n    /**\n     * The inverse of [[ticksToTime]]. Convert a duration in\n     * seconds to the corresponding number of ticks accounting for any\n     * automation curves starting at the given time.\n     * @param  duration The time interval to convert to ticks.\n     * @param  when When along the automation timeline to convert the ticks.\n     * @return The duration in ticks.\n     */\n    timeToTicks(duration, when) {\n        const computedTime = this.toSeconds(when);\n        const computedDuration = this.toSeconds(duration);\n        const startTicks = this.getTicksAtTime(computedTime);\n        const endTicks = this.getTicksAtTime(computedTime + computedDuration);\n        return endTicks - startTicks;\n    }\n    /**\n     * Convert from the type when the unit value is BPM\n     */\n    _fromType(val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return 1 / (60 / val / this.multiplier);\n        }\n        else {\n            return super._fromType(val);\n        }\n    }\n    /**\n     * Special case of type conversion where the units === \"bpm\"\n     */\n    _toType(val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return (val / this.multiplier) * 60;\n        }\n        else {\n            return super._toType(val);\n        }\n    }\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get multiplier() {\n        return this._multiplier;\n    }\n    set multiplier(m) {\n        // get and reset the current value with the new multiplier\n        // might be necessary to clear all the previous values\n        const currentVal = this.value;\n        this._multiplier = m;\n        this.cancelScheduledValues(0);\n        this.setValueAtTime(currentVal, 0);\n    }\n}\n//# sourceMappingURL=TickParam.js.map","import { Signal } from \"../../signal/Signal\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { TickParam } from \"./TickParam\";\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n */\nexport class TickSignal extends Signal {\n    constructor() {\n        super(optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]));\n        this.name = \"TickSignal\";\n        const options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n        this.input = this._param = new TickParam({\n            context: this.context,\n            convert: options.convert,\n            multiplier: options.multiplier,\n            param: this._constantSource.offset,\n            units: options.units,\n            value: options.value,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            multiplier: 1,\n            units: \"hertz\",\n            value: 1,\n        });\n    }\n    ticksToTime(ticks, when) {\n        return this._param.ticksToTime(ticks, when);\n    }\n    timeToTicks(duration, when) {\n        return this._param.timeToTicks(duration, when);\n    }\n    getTimeOfTick(tick) {\n        return this._param.getTimeOfTick(tick);\n    }\n    getDurationOfTicks(ticks, time) {\n        return this._param.getDurationOfTicks(ticks, time);\n    }\n    getTicksAtTime(time) {\n        return this._param.getTicksAtTime(time);\n    }\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get multiplier() {\n        return this._param.multiplier;\n    }\n    set multiplier(m) {\n        this._param.multiplier = m;\n    }\n    dispose() {\n        super.dispose();\n        this._param.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=TickSignal.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { TickSignal } from \"./TickSignal\";\nimport { EQ } from \"../util/Math\";\n/**\n * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.\n */\nexport class TickSource extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]));\n        this.name = \"TickSource\";\n        /**\n         * The state timeline\n         */\n        this._state = new StateTimeline();\n        /**\n         * The offset values of the ticks\n         */\n        this._tickOffset = new Timeline();\n        const options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n        this.frequency = new TickSignal({\n            context: this.context,\n            units: options.units,\n            value: options.frequency,\n        });\n        readOnly(this, \"frequency\");\n        // set the initial state\n        this._state.setStateAtTime(\"stopped\", 0);\n        // add the first event\n        this.setTicksAtTime(0, 0);\n    }\n    static getDefaults() {\n        return Object.assign({\n            frequency: 1,\n            units: \"hertz\",\n        }, ToneWithContext.getDefaults());\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get state() {\n        return this.getStateAtTime(this.now());\n    }\n    /**\n     * Start the clock at the given time. Optionally pass in an offset\n     * of where to start the tick counter from.\n     * @param  time    The time the clock should start\n     * @param offset The number of ticks to start the source at\n     */\n    start(time, offset) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (isDefined(offset)) {\n                this.setTicksAtTime(offset, computedTime);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the clock. Stopping the clock resets the tick counter to 0.\n     * @param time The time when the clock should stop.\n     */\n    stop(time) {\n        const computedTime = this.toSeconds(time);\n        // cancel the previous stop\n        if (this._state.getValueAtTime(computedTime) === \"stopped\") {\n            const event = this._state.get(computedTime);\n            if (event && event.time > 0) {\n                this._tickOffset.cancel(event.time);\n                this._state.cancel(event.time);\n            }\n        }\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this.setTicksAtTime(0, computedTime);\n        return this;\n    }\n    /**\n     * Pause the clock. Pausing does not reset the tick counter.\n     * @param time The time when the clock should stop.\n     */\n    pause(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n     * @param time When to clear the events after\n     */\n    cancel(time) {\n        time = this.toSeconds(time);\n        this._state.cancel(time);\n        this._tickOffset.cancel(time);\n        return this;\n    }\n    /**\n     * Get the elapsed ticks at the given time\n     * @param  time  When to get the tick value\n     * @return The number of ticks\n     */\n    getTicksAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const stopEvent = this._state.getLastState(\"stopped\", computedTime);\n        // this event allows forEachBetween to iterate until the current time\n        const tmpEvent = { state: \"paused\", time: computedTime };\n        this._state.add(tmpEvent);\n        // keep track of the previous offset event\n        let lastState = stopEvent;\n        let elapsedTicks = 0;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, e => {\n            let periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            const offsetEvent = this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedTicks = offsetEvent.ticks;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // return the ticks\n        return elapsedTicks;\n    }\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked. Returns -1 when stopped.\n     */\n    get ticks() {\n        return this.getTicksAtTime(this.now());\n    }\n    set ticks(t) {\n        this.setTicksAtTime(t, this.now());\n    }\n    /**\n     * The time since ticks=0 that the TickSource has been running. Accounts\n     * for tempo curves\n     */\n    get seconds() {\n        return this.getSecondsAtTime(this.now());\n    }\n    set seconds(s) {\n        const now = this.now();\n        const ticks = this.frequency.timeToTicks(s, now);\n        this.setTicksAtTime(ticks, now);\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        time = this.toSeconds(time);\n        const stopEvent = this._state.getLastState(\"stopped\", time);\n        // this event allows forEachBetween to iterate until the current time\n        const tmpEvent = { state: \"paused\", time };\n        this._state.add(tmpEvent);\n        // keep track of the previous offset event\n        let lastState = stopEvent;\n        let elapsedSeconds = 0;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(stopEvent.time, time + this.sampleTime, e => {\n            let periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            const offsetEvent = this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedSeconds = offsetEvent.seconds;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedSeconds += e.time - periodStartTime;\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // return the ticks\n        return elapsedSeconds;\n    }\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    setTicksAtTime(ticks, time) {\n        time = this.toSeconds(time);\n        this._tickOffset.cancel(time);\n        this._tickOffset.add({\n            seconds: this.frequency.getDurationOfTicks(ticks, time),\n            ticks,\n            time,\n        });\n        return this;\n    }\n    /**\n     * Returns the scheduled state at the given time.\n     * @param  time  The time to query.\n     */\n    getStateAtTime(time) {\n        time = this.toSeconds(time);\n        return this._state.getValueAtTime(time);\n    }\n    /**\n     * Get the time of the given tick. The second argument\n     * is when to test before. Since ticks can be set (with setTicksAtTime)\n     * there may be multiple times for a given tick value.\n     * @param  tick The tick number.\n     * @param  before When to measure the tick value from.\n     * @return The time of the tick\n     */\n    getTimeOfTick(tick, before = this.now()) {\n        const offset = this._tickOffset.get(before);\n        const event = this._state.get(before);\n        const startTime = Math.max(offset.time, event.time);\n        const absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n        return this.frequency.getTimeOfTick(absoluteTicks);\n    }\n    /**\n     * Invoke the callback event at all scheduled ticks between the\n     * start time and the end time\n     * @param  startTime  The beginning of the search range\n     * @param  endTime    The end of the search range\n     * @param  callback   The callback to invoke with each tick\n     */\n    forEachTickBetween(startTime, endTime, callback) {\n        // only iterate through the sections where it is \"started\"\n        let lastStateEvent = this._state.get(startTime);\n        this._state.forEachBetween(startTime, endTime, event => {\n            if (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n                this.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n            }\n            lastStateEvent = event;\n        });\n        let error = null;\n        if (lastStateEvent && lastStateEvent.state === \"started\") {\n            const maxStartTime = Math.max(lastStateEvent.time, startTime);\n            // figure out the difference between the frequency ticks and the\n            const startTicks = this.frequency.getTicksAtTime(maxStartTime);\n            const ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n            const diff = startTicks - ticksAtStart;\n            let offset = Math.ceil(diff) - diff;\n            // guard against floating point issues\n            offset = EQ(offset, 1) ? 0 : offset;\n            let nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n            while (nextTickTime < endTime) {\n                try {\n                    callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n                }\n                catch (e) {\n                    error = e;\n                    break;\n                }\n                nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n            }\n        }\n        if (error) {\n            throw error;\n        }\n        return this;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._state.dispose();\n        this._tickOffset.dispose();\n        this.frequency.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=TickSource.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { noOp, readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { TickSource } from \"./TickSource\";\nimport { assertContextRunning } from \"../util/Debug\";\n/**\n * A sample accurate clock which provides a callback at the given rate.\n * While the callback is not sample-accurate (it is still susceptible to\n * loose JS timing), the time passed in as the argument to the callback\n * is precise. For most applications, it is better to use Tone.Transport\n * instead of the Clock by itself since you can synchronize multiple callbacks.\n * @example\n * // the callback will be invoked approximately once a second\n * // and will print the time exactly once a second apart.\n * const clock = new Tone.Clock(time => {\n * \tconsole.log(time);\n * }, 1);\n * clock.start();\n * @category Core\n */\nexport class Clock extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]));\n        this.name = \"Clock\";\n        /**\n         * The callback function to invoke at the scheduled tick.\n         */\n        this.callback = noOp;\n        /**\n         * The last time the loop callback was invoked\n         */\n        this._lastUpdate = 0;\n        /**\n         * Keep track of the playback state\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * Context bound reference to the _loop method\n         * This is necessary to remove the event in the end.\n         */\n        this._boundLoop = this._loop.bind(this);\n        const options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n        this.callback = options.callback;\n        this._tickSource = new TickSource({\n            context: this.context,\n            frequency: options.frequency,\n            units: options.units,\n        });\n        this._lastUpdate = 0;\n        this.frequency = this._tickSource.frequency;\n        readOnly(this, \"frequency\");\n        // add an initial state\n        this._state.setStateAtTime(\"stopped\", 0);\n        // bind a callback to the worker thread\n        this.context.on(\"tick\", this._boundLoop);\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            callback: noOp,\n            frequency: 1,\n            units: \"hertz\",\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get state() {\n        return this._state.getValueAtTime(this.now());\n    }\n    /**\n     * Start the clock at the given time. Optionally pass in an offset\n     * of where to start the tick counter from.\n     * @param  time    The time the clock should start\n     * @param offset  Where the tick counter starts counting from.\n     */\n    start(time, offset) {\n        // make sure the context is running\n        assertContextRunning(this.context);\n        // start the loop\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            this._tickSource.start(computedTime, offset);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"start\", computedTime, offset);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the clock. Stopping the clock resets the tick counter to 0.\n     * @param time The time when the clock should stop.\n     * @example\n     * const clock = new Tone.Clock(time => {\n     * \tconsole.log(time);\n     * }, 1);\n     * clock.start();\n     * // stop the clock after 10 seconds\n     * clock.stop(\"+10\");\n     */\n    stop(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"stop\", computedTime);\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this._tickSource.stop(computedTime);\n        if (computedTime < this._lastUpdate) {\n            this.emit(\"stop\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Pause the clock. Pausing does not reset the tick counter.\n     * @param time The time when the clock should stop.\n     */\n    pause(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n            this._tickSource.pause(computedTime);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"pause\", computedTime);\n            }\n        }\n        return this;\n    }\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked.\n     */\n    get ticks() {\n        return Math.ceil(this.getTicksAtTime(this.now()));\n    }\n    set ticks(t) {\n        this._tickSource.ticks = t;\n    }\n    /**\n     * The time since ticks=0 that the Clock has been running. Accounts for tempo curves\n     */\n    get seconds() {\n        return this._tickSource.seconds;\n    }\n    set seconds(s) {\n        this._tickSource.seconds = s;\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        return this._tickSource.getSecondsAtTime(time);\n    }\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    setTicksAtTime(ticks, time) {\n        this._tickSource.setTicksAtTime(ticks, time);\n        return this;\n    }\n    /**\n     * Get the time of the given tick. The second argument\n     * is when to test before. Since ticks can be set (with setTicksAtTime)\n     * there may be multiple times for a given tick value.\n     * @param  tick The tick number.\n     * @param  before When to measure the tick value from.\n     * @return The time of the tick\n     */\n    getTimeOfTick(tick, before = this.now()) {\n        return this._tickSource.getTimeOfTick(tick, before);\n    }\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    getTicksAtTime(time) {\n        return this._tickSource.getTicksAtTime(time);\n    }\n    /**\n     * Get the time of the next tick\n     * @param  offset The tick number.\n     */\n    nextTickTime(offset, when) {\n        const computedTime = this.toSeconds(when);\n        const currentTick = this.getTicksAtTime(computedTime);\n        return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n    }\n    /**\n     * The scheduling loop.\n     */\n    _loop() {\n        const startTime = this._lastUpdate;\n        const endTime = this.now();\n        this._lastUpdate = endTime;\n        this.log(\"loop\", startTime, endTime);\n        if (startTime !== endTime) {\n            // the state change events\n            this._state.forEachBetween(startTime, endTime, e => {\n                switch (e.state) {\n                    case \"started\":\n                        const offset = this._tickSource.getTicksAtTime(e.time);\n                        this.emit(\"start\", e.time, offset);\n                        break;\n                    case \"stopped\":\n                        if (e.time !== 0) {\n                            this.emit(\"stop\", e.time);\n                        }\n                        break;\n                    case \"paused\":\n                        this.emit(\"pause\", e.time);\n                        break;\n                }\n            });\n            // the tick callbacks\n            this._tickSource.forEachTickBetween(startTime, endTime, (time, ticks) => {\n                this.callback(time, ticks);\n            });\n        }\n    }\n    /**\n     * Returns the scheduled state at the given time.\n     * @param  time  The time to query.\n     * @return  The name of the state input in setStateAtTime.\n     * @example\n     * const clock = new Tone.Clock();\n     * clock.start(\"+0.1\");\n     * clock.getStateAtTime(\"+0.1\"); // returns \"started\"\n     */\n    getStateAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        return this._state.getValueAtTime(computedTime);\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.context.off(\"tick\", this._boundLoop);\n        this._tickSource.dispose();\n        this._state.dispose();\n        return this;\n    }\n}\nEmitter.mixin(Clock);\n//# sourceMappingURL=Clock.js.map","import { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\nexport class TimelineValue extends Tone {\n    /**\n     * @param initialValue The value to return if there is no scheduled values\n     */\n    constructor(initialValue) {\n        super();\n        this.name = \"TimelineValue\";\n        /**\n         * The timeline which stores the values\n         */\n        this._timeline = new Timeline({ memory: 10 });\n        this._initialValue = initialValue;\n    }\n    /**\n     * Set the value at the given time\n     */\n    set(value, time) {\n        this._timeline.add({\n            value, time\n        });\n        return this;\n    }\n    /**\n     * Get the value at the given time\n     */\n    get(time) {\n        const event = this._timeline.get(time);\n        if (event) {\n            return event.value;\n        }\n        else {\n            return this._initialValue;\n        }\n    }\n}\n//# sourceMappingURL=TimelineValue.js.map","import { getContext } from \"../Global\";\nimport { TransportTimeClass } from \"./TransportTime\";\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\nexport class TicksClass extends TransportTimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"Ticks\";\n        this.defaultUnits = \"i\";\n    }\n    /**\n     * Get the current time in the given units\n     */\n    _now() {\n        return this.context.transport.ticks;\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return this._getPPQ() * beats;\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return ticks;\n    }\n    /**\n     * Return the time in ticks\n     */\n    toTicks() {\n        return this.valueOf();\n    }\n    /**\n     * Return the time in seconds\n     */\n    toSeconds() {\n        return (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n    }\n}\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\nexport function Ticks(value, units) {\n    return new TicksClass(getContext(), value, units);\n}\n//# sourceMappingURL=Ticks.js.map","import { Tone } from \"../Tone\";\nimport { isDefined } from \"./TypeCheck\";\nimport { assert } from \"./Debug\";\n/**\n * Similar to Tone.Timeline, but all events represent\n * intervals with both \"time\" and \"duration\" times. The\n * events are placed in a tree structure optimized\n * for querying an intersection point with the timeline\n * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n * to represent the data.\n */\nexport class IntervalTimeline extends Tone {\n    constructor() {\n        super(...arguments);\n        this.name = \"IntervalTimeline\";\n        /**\n         * The root node of the inteval tree\n         */\n        this._root = null;\n        /**\n         * Keep track of the length of the timeline.\n         */\n        this._length = 0;\n    }\n    /**\n     * The event to add to the timeline. All events must\n     * have a time and duration value\n     * @param  event  The event to add to the timeline\n     */\n    add(event) {\n        assert(isDefined(event.time), \"Events must have a time property\");\n        assert(isDefined(event.duration), \"Events must have a duration parameter\");\n        event.time = event.time.valueOf();\n        let node = new IntervalNode(event.time, event.time + event.duration, event);\n        if (this._root === null) {\n            this._root = node;\n        }\n        else {\n            this._root.insert(node);\n        }\n        this._length++;\n        // Restructure tree to be balanced\n        while (node !== null) {\n            node.updateHeight();\n            node.updateMax();\n            this._rebalance(node);\n            node = node.parent;\n        }\n        return this;\n    }\n    /**\n     * Remove an event from the timeline.\n     * @param  event  The event to remove from the timeline\n     */\n    remove(event) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(event.time, results);\n            for (const node of results) {\n                if (node.event === event) {\n                    this._removeNode(node);\n                    this._length--;\n                    break;\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * The number of items in the timeline.\n     * @readOnly\n     */\n    get length() {\n        return this._length;\n    }\n    /**\n     * Remove events whose time time is after the given time\n     * @param  after  The time to query.\n     */\n    cancel(after) {\n        this.forEachFrom(after, event => this.remove(event));\n        return this;\n    }\n    /**\n     * Set the root node as the given node\n     */\n    _setRoot(node) {\n        this._root = node;\n        if (this._root !== null) {\n            this._root.parent = null;\n        }\n    }\n    /**\n     * Replace the references to the node in the node's parent\n     * with the replacement node.\n     */\n    _replaceNodeInParent(node, replacement) {\n        if (node.parent !== null) {\n            if (node.isLeftChild()) {\n                node.parent.left = replacement;\n            }\n            else {\n                node.parent.right = replacement;\n            }\n            this._rebalance(node.parent);\n        }\n        else {\n            this._setRoot(replacement);\n        }\n    }\n    /**\n     * Remove the node from the tree and replace it with\n     * a successor which follows the schema.\n     */\n    _removeNode(node) {\n        if (node.left === null && node.right === null) {\n            this._replaceNodeInParent(node, null);\n        }\n        else if (node.right === null) {\n            this._replaceNodeInParent(node, node.left);\n        }\n        else if (node.left === null) {\n            this._replaceNodeInParent(node, node.right);\n        }\n        else {\n            const balance = node.getBalance();\n            let replacement;\n            let temp = null;\n            if (balance > 0) {\n                if (node.left.right === null) {\n                    replacement = node.left;\n                    replacement.right = node.right;\n                    temp = replacement;\n                }\n                else {\n                    replacement = node.left.right;\n                    while (replacement.right !== null) {\n                        replacement = replacement.right;\n                    }\n                    if (replacement.parent) {\n                        replacement.parent.right = replacement.left;\n                        temp = replacement.parent;\n                        replacement.left = node.left;\n                        replacement.right = node.right;\n                    }\n                }\n            }\n            else if (node.right.left === null) {\n                replacement = node.right;\n                replacement.left = node.left;\n                temp = replacement;\n            }\n            else {\n                replacement = node.right.left;\n                while (replacement.left !== null) {\n                    replacement = replacement.left;\n                }\n                if (replacement.parent) {\n                    replacement.parent.left = replacement.right;\n                    temp = replacement.parent;\n                    replacement.left = node.left;\n                    replacement.right = node.right;\n                }\n            }\n            if (node.parent !== null) {\n                if (node.isLeftChild()) {\n                    node.parent.left = replacement;\n                }\n                else {\n                    node.parent.right = replacement;\n                }\n            }\n            else {\n                this._setRoot(replacement);\n            }\n            if (temp) {\n                this._rebalance(temp);\n            }\n        }\n        node.dispose();\n    }\n    /**\n     * Rotate the tree to the left\n     */\n    _rotateLeft(node) {\n        const parent = node.parent;\n        const isLeftChild = node.isLeftChild();\n        // Make node.right the new root of this sub tree (instead of node)\n        const pivotNode = node.right;\n        if (pivotNode) {\n            node.right = pivotNode.left;\n            pivotNode.left = node;\n        }\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    }\n    /**\n     * Rotate the tree to the right\n     */\n    _rotateRight(node) {\n        const parent = node.parent;\n        const isLeftChild = node.isLeftChild();\n        // Make node.left the new root of this sub tree (instead of node)\n        const pivotNode = node.left;\n        if (pivotNode) {\n            node.left = pivotNode.right;\n            pivotNode.right = node;\n        }\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    }\n    /**\n     * Balance the BST\n     */\n    _rebalance(node) {\n        const balance = node.getBalance();\n        if (balance > 1 && node.left) {\n            if (node.left.getBalance() < 0) {\n                this._rotateLeft(node.left);\n            }\n            else {\n                this._rotateRight(node);\n            }\n        }\n        else if (balance < -1 && node.right) {\n            if (node.right.getBalance() > 0) {\n                this._rotateRight(node.right);\n            }\n            else {\n                this._rotateLeft(node);\n            }\n        }\n    }\n    /**\n     * Get an event whose time and duration span the give time. Will\n     * return the match whose \"time\" value is closest to the given time.\n     * @return  The event which spans the desired time\n     */\n    get(time) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(time, results);\n            if (results.length > 0) {\n                let max = results[0];\n                for (let i = 1; i < results.length; i++) {\n                    if (results[i].low > max.low) {\n                        max = results[i];\n                    }\n                }\n                return max.event;\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterate over everything in the timeline.\n     * @param  callback The callback to invoke with every item\n     */\n    forEach(callback) {\n        if (this._root !== null) {\n            const allNodes = [];\n            this._root.traverse(node => allNodes.push(node));\n            allNodes.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array in which the given time\n     * overlaps with the time and duration time of the event.\n     * @param  time The time to check if items are overlapping\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAtTime(time, callback) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(time, results);\n            results.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array in which the time is greater\n     * than or equal to the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachFrom(time, callback) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.searchAfter(time, results);\n            results.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        if (this._root !== null) {\n            this._root.traverse(node => node.dispose());\n        }\n        this._root = null;\n        return this;\n    }\n}\n//-------------------------------------\n// \tINTERVAL NODE HELPER\n//-------------------------------------\n/**\n * Represents a node in the binary search tree, with the addition\n * of a \"high\" value which keeps track of the highest value of\n * its children.\n * References:\n * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n * @param low\n * @param high\n */\nclass IntervalNode {\n    constructor(low, high, event) {\n        // the nodes to the left\n        this._left = null;\n        // the nodes to the right\n        this._right = null;\n        // the parent node\n        this.parent = null;\n        // the number of child nodes\n        this.height = 0;\n        this.event = event;\n        // the low value\n        this.low = low;\n        // the high value\n        this.high = high;\n        // the high value for this and all child nodes\n        this.max = this.high;\n    }\n    /**\n     * Insert a node into the correct spot in the tree\n     */\n    insert(node) {\n        if (node.low <= this.low) {\n            if (this.left === null) {\n                this.left = node;\n            }\n            else {\n                this.left.insert(node);\n            }\n        }\n        else if (this.right === null) {\n            this.right = node;\n        }\n        else {\n            this.right.insert(node);\n        }\n    }\n    /**\n     * Search the tree for nodes which overlap\n     * with the given point\n     * @param  point  The point to query\n     * @param  results  The array to put the results\n     */\n    search(point, results) {\n        // If p is to the right of the rightmost point of any interval\n        // in this node and all children, there won't be any matches.\n        if (point > this.max) {\n            return;\n        }\n        // Search left children\n        if (this.left !== null) {\n            this.left.search(point, results);\n        }\n        // Check this node\n        if (this.low <= point && this.high > point) {\n            results.push(this);\n        }\n        // If p is to the left of the time of this interval,\n        // then it can't be in any child to the right.\n        if (this.low > point) {\n            return;\n        }\n        // Search right children\n        if (this.right !== null) {\n            this.right.search(point, results);\n        }\n    }\n    /**\n     * Search the tree for nodes which are less\n     * than the given point\n     * @param  point  The point to query\n     * @param  results  The array to put the results\n     */\n    searchAfter(point, results) {\n        // Check this node\n        if (this.low >= point) {\n            results.push(this);\n            if (this.left !== null) {\n                this.left.searchAfter(point, results);\n            }\n        }\n        // search the right side\n        if (this.right !== null) {\n            this.right.searchAfter(point, results);\n        }\n    }\n    /**\n     * Invoke the callback on this element and both it's branches\n     * @param  {Function}  callback\n     */\n    traverse(callback) {\n        callback(this);\n        if (this.left !== null) {\n            this.left.traverse(callback);\n        }\n        if (this.right !== null) {\n            this.right.traverse(callback);\n        }\n    }\n    /**\n     * Update the height of the node\n     */\n    updateHeight() {\n        if (this.left !== null && this.right !== null) {\n            this.height = Math.max(this.left.height, this.right.height) + 1;\n        }\n        else if (this.right !== null) {\n            this.height = this.right.height + 1;\n        }\n        else if (this.left !== null) {\n            this.height = this.left.height + 1;\n        }\n        else {\n            this.height = 0;\n        }\n    }\n    /**\n     * Update the height of the node\n     */\n    updateMax() {\n        this.max = this.high;\n        if (this.left !== null) {\n            this.max = Math.max(this.max, this.left.max);\n        }\n        if (this.right !== null) {\n            this.max = Math.max(this.max, this.right.max);\n        }\n    }\n    /**\n     * The balance is how the leafs are distributed on the node\n     * @return  Negative numbers are balanced to the right\n     */\n    getBalance() {\n        let balance = 0;\n        if (this.left !== null && this.right !== null) {\n            balance = this.left.height - this.right.height;\n        }\n        else if (this.left !== null) {\n            balance = this.left.height + 1;\n        }\n        else if (this.right !== null) {\n            balance = -(this.right.height + 1);\n        }\n        return balance;\n    }\n    /**\n     * @returns true if this node is the left child of its parent\n     */\n    isLeftChild() {\n        return this.parent !== null && this.parent.left === this;\n    }\n    /**\n     * get/set the left node\n     */\n    get left() {\n        return this._left;\n    }\n    set left(node) {\n        this._left = node;\n        if (node !== null) {\n            node.parent = this;\n        }\n        this.updateHeight();\n        this.updateMax();\n    }\n    /**\n     * get/set the right node\n     */\n    get right() {\n        return this._right;\n    }\n    set right(node) {\n        this._right = node;\n        if (node !== null) {\n            node.parent = this;\n        }\n        this.updateHeight();\n        this.updateMax();\n    }\n    /**\n     * null out references.\n     */\n    dispose() {\n        this.parent = null;\n        this._left = null;\n        this._right = null;\n        this.event = null;\n    }\n}\n//# sourceMappingURL=IntervalTimeline.js.map","import { noOp } from \"../util/Interface\";\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\nexport class TransportEvent {\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    constructor(transport, opts) {\n        /**\n         * The unique id of the event\n         */\n        this.id = TransportEvent._eventId++;\n        const options = Object.assign(TransportEvent.getDefaults(), opts);\n        this.transport = transport;\n        this.callback = options.callback;\n        this._once = options.once;\n        this.time = options.time;\n    }\n    static getDefaults() {\n        return {\n            callback: noOp,\n            once: false,\n            time: 0,\n        };\n    }\n    /**\n     * Invoke the event callback.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    invoke(time) {\n        if (this.callback) {\n            this.callback(time);\n            if (this._once) {\n                this.transport.clear(this.id);\n            }\n        }\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        this.callback = undefined;\n        return this;\n    }\n}\n/**\n * Current ID counter\n */\nTransportEvent._eventId = 0;\n//# sourceMappingURL=TransportEvent.js.map","import { TicksClass } from \"../type/Ticks\";\nimport { TransportEvent } from \"./TransportEvent\";\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\nexport class TransportRepeatEvent extends TransportEvent {\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    constructor(transport, opts) {\n        super(transport, opts);\n        /**\n         * The ID of the current timeline event\n         */\n        this._currentId = -1;\n        /**\n         * The ID of the next timeline event\n         */\n        this._nextId = -1;\n        /**\n         * The time of the next event\n         */\n        this._nextTick = this.time;\n        /**\n         * a reference to the bound start method\n         */\n        this._boundRestart = this._restart.bind(this);\n        const options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n        this.duration = new TicksClass(transport.context, options.duration).valueOf();\n        this._interval = new TicksClass(transport.context, options.interval).valueOf();\n        this._nextTick = options.time;\n        this.transport.on(\"start\", this._boundRestart);\n        this.transport.on(\"loopStart\", this._boundRestart);\n        this.context = this.transport.context;\n        this._restart();\n    }\n    static getDefaults() {\n        return Object.assign({}, TransportEvent.getDefaults(), {\n            duration: Infinity,\n            interval: 1,\n            once: false,\n        });\n    }\n    /**\n     * Invoke the callback. Returns the tick time which\n     * the next event should be scheduled at.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    invoke(time) {\n        // create more events if necessary\n        this._createEvents(time);\n        // call the super class\n        super.invoke(time);\n    }\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    _createEvents(time) {\n        // schedule the next event\n        const ticks = this.transport.getTicksAtTime(time);\n        if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n            this._nextTick += this._interval;\n            this._currentId = this._nextId;\n            this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        }\n    }\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    _restart(time) {\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this._nextTick = this.time;\n        const ticks = this.transport.getTicksAtTime(time);\n        if (ticks > this.time) {\n            this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n        }\n        this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        this._nextTick += this._interval;\n        this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this.transport.off(\"start\", this._boundRestart);\n        this.transport.off(\"loopStart\", this._boundRestart);\n        return this;\n    }\n}\n//# sourceMappingURL=TransportRepeatEvent.js.map","import { TimeClass } from \"../../core/type/Time\";\nimport { TimelineValue } from \"../../core/util/TimelineValue\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\nimport { Gain } from \"../context/Gain\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { readOnly, writable } from \"../util/Interface\";\nimport { IntervalTimeline } from \"../util/IntervalTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isArray, isDefined } from \"../util/TypeCheck\";\nimport { Clock } from \"./Clock\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { TransportRepeatEvent } from \"./TransportRepeatEvent\";\n/**\n * Transport for timing musical events.\n * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n * Transport timing events pass in the exact time of the scheduled event\n * in the argument of the callback function. Pass that time value to the object\n * you're scheduling. <br><br>\n * A single transport is created for you when the library is initialized.\n * <br><br>\n * The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n * called with the time of that event as the argument.\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination();\n * // repeated event every 8th note\n * Tone.Transport.scheduleRepeat((time) => {\n * \t// use the callback time to schedule events\n * \tosc.start(time).stop(time + 0.1);\n * }, \"8n\");\n * // transport must be started before it starts invoking events\n * Tone.Transport.start();\n * @category Core\n */\nexport class Transport extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Transport.getDefaults(), arguments));\n        this.name = \"Transport\";\n        //-------------------------------------\n        // \tLOOPING\n        //-------------------------------------\n        /**\n         * If the transport loops or not.\n         */\n        this._loop = new TimelineValue(false);\n        /**\n         * The loop start position in ticks\n         */\n        this._loopStart = 0;\n        /**\n         * The loop end position in ticks\n         */\n        this._loopEnd = 0;\n        //-------------------------------------\n        // \tTIMELINE EVENTS\n        //-------------------------------------\n        /**\n         * All the events in an object to keep track by ID\n         */\n        this._scheduledEvents = {};\n        /**\n         * The scheduled events.\n         */\n        this._timeline = new Timeline();\n        /**\n         * Repeated events\n         */\n        this._repeatedEvents = new IntervalTimeline();\n        /**\n         * All of the synced Signals\n         */\n        this._syncedSignals = [];\n        /**\n         * The swing amount\n         */\n        this._swingAmount = 0;\n        const options = optionsFromArguments(Transport.getDefaults(), arguments);\n        // CLOCK/TEMPO\n        this._ppq = options.ppq;\n        this._clock = new Clock({\n            callback: this._processTick.bind(this),\n            context: this.context,\n            frequency: 0,\n            units: \"bpm\",\n        });\n        this._bindClockEvents();\n        this.bpm = this._clock.frequency;\n        this._clock.frequency.multiplier = options.ppq;\n        this.bpm.setValueAtTime(options.bpm, 0);\n        readOnly(this, \"bpm\");\n        this._timeSignature = options.timeSignature;\n        // SWING\n        this._swingTicks = options.ppq / 2; // 8n\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            bpm: 120,\n            loopEnd: \"4m\",\n            loopStart: 0,\n            ppq: 192,\n            swing: 0,\n            swingSubdivision: \"8n\",\n            timeSignature: 4,\n        });\n    }\n    //-------------------------------------\n    // \tTICKS\n    //-------------------------------------\n    /**\n     * called on every tick\n     * @param  tickTime clock relative tick time\n     */\n    _processTick(tickTime, ticks) {\n        // handle swing\n        if (this._swingAmount > 0 &&\n            ticks % this._ppq !== 0 && // not on a downbeat\n            ticks % (this._swingTicks * 2) !== 0) {\n            // add some swing\n            const progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n            const amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n            tickTime += new TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;\n        }\n        // do the loop test\n        if (this._loop.get(tickTime)) {\n            if (ticks >= this._loopEnd) {\n                this.emit(\"loopEnd\", tickTime);\n                this._clock.setTicksAtTime(this._loopStart, tickTime);\n                ticks = this._loopStart;\n                this.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n                this.emit(\"loop\", tickTime);\n            }\n        }\n        // invoke the timeline events scheduled on this tick\n        this._timeline.forEachAtTime(ticks, event => event.invoke(tickTime));\n    }\n    //-------------------------------------\n    // \tSCHEDULABLE EVENTS\n    //-------------------------------------\n    /**\n     * Schedule an event along the timeline.\n     * @param callback The callback to be invoked at the time.\n     * @param time The time to invoke the callback at.\n     * @return The id of the event which can be used for canceling the event.\n     * @example\n     * // schedule an event on the 16th measure\n     * Tone.Transport.schedule((time) => {\n     * \t// invoked on measure 16\n     * \tconsole.log(\"measure 16!\");\n     * }, \"16:0:0\");\n     */\n    schedule(callback, time) {\n        const event = new TransportEvent(this, {\n            callback,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    }\n    /**\n     * Schedule a repeated event along the timeline. The event will fire\n     * at the `interval` starting at the `startTime` and for the specified\n     * `duration`.\n     * @param  callback   The callback to invoke.\n     * @param  interval   The duration between successive callbacks. Must be a positive number.\n     * @param  startTime  When along the timeline the events should start being invoked.\n     * @param  duration How long the event should repeat.\n     * @return  The ID of the scheduled event. Use this to cancel the event.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * // a callback invoked every eighth note after the first measure\n     * Tone.Transport.scheduleRepeat((time) => {\n     * \tosc.start(time).stop(time + 0.1);\n     * }, \"8n\", \"1m\");\n     */\n    scheduleRepeat(callback, interval, startTime, duration = Infinity) {\n        const event = new TransportRepeatEvent(this, {\n            callback,\n            duration: new TimeClass(this.context, duration).toTicks(),\n            interval: new TimeClass(this.context, interval).toTicks(),\n            time: new TransportTimeClass(this.context, startTime).toTicks(),\n        });\n        // kick it off if the Transport is started\n        // @ts-ignore\n        return this._addEvent(event, this._repeatedEvents);\n    }\n    /**\n     * Schedule an event that will be removed after it is invoked.\n     * @param callback The callback to invoke once.\n     * @param time The time the callback should be invoked.\n     * @returns The ID of the scheduled event.\n     */\n    scheduleOnce(callback, time) {\n        const event = new TransportEvent(this, {\n            callback,\n            once: true,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    }\n    /**\n     * Clear the passed in event id from the timeline\n     * @param eventId The id of the event.\n     */\n    clear(eventId) {\n        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n            const item = this._scheduledEvents[eventId.toString()];\n            item.timeline.remove(item.event);\n            item.event.dispose();\n            delete this._scheduledEvents[eventId.toString()];\n        }\n        return this;\n    }\n    /**\n     * Add an event to the correct timeline. Keep track of the\n     * timeline it was added to.\n     * @returns the event id which was just added\n     */\n    _addEvent(event, timeline) {\n        this._scheduledEvents[event.id.toString()] = {\n            event,\n            timeline,\n        };\n        timeline.add(event);\n        return event.id;\n    }\n    /**\n     * Remove scheduled events from the timeline after\n     * the given time. Repeated events will be removed\n     * if their startTime is after the given time\n     * @param after Clear all events after this time.\n     */\n    cancel(after = 0) {\n        const computedAfter = this.toTicks(after);\n        this._timeline.forEachFrom(computedAfter, event => this.clear(event.id));\n        this._repeatedEvents.forEachFrom(computedAfter, event => this.clear(event.id));\n        return this;\n    }\n    //-------------------------------------\n    // \tSTART/STOP/PAUSE\n    //-------------------------------------\n    /**\n     * Bind start/stop/pause events from the clock and emit them.\n     */\n    _bindClockEvents() {\n        this._clock.on(\"start\", (time, offset) => {\n            offset = new TicksClass(this.context, offset).toSeconds();\n            this.emit(\"start\", time, offset);\n        });\n        this._clock.on(\"stop\", (time) => {\n            this.emit(\"stop\", time);\n        });\n        this._clock.on(\"pause\", (time) => {\n            this.emit(\"pause\", time);\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n     */\n    get state() {\n        return this._clock.getStateAtTime(this.now());\n    }\n    /**\n     * Start the transport and all sources synced to the transport.\n     * @param  time The time when the transport should start.\n     * @param  offset The timeline offset to start the transport.\n     * @example\n     * // start the transport in one second starting at beginning of the 5th measure.\n     * Tone.Transport.start(\"+1\", \"4:0:0\");\n     */\n    start(time, offset) {\n        let offsetTicks;\n        if (isDefined(offset)) {\n            offsetTicks = this.toTicks(offset);\n        }\n        // start the clock\n        this._clock.start(time, offsetTicks);\n        return this;\n    }\n    /**\n     * Stop the transport and all sources synced to the transport.\n     * @param time The time when the transport should stop.\n     * @example\n     * Tone.Transport.stop();\n     */\n    stop(time) {\n        this._clock.stop(time);\n        return this;\n    }\n    /**\n     * Pause the transport and all sources synced to the transport.\n     */\n    pause(time) {\n        this._clock.pause(time);\n        return this;\n    }\n    /**\n     * Toggle the current state of the transport. If it is\n     * started, it will stop it, otherwise it will start the Transport.\n     * @param  time The time of the event\n     */\n    toggle(time) {\n        time = this.toSeconds(time);\n        if (this._clock.getStateAtTime(time) !== \"started\") {\n            this.start(time);\n        }\n        else {\n            this.stop(time);\n        }\n        return this;\n    }\n    //-------------------------------------\n    // \tSETTERS/GETTERS\n    //-------------------------------------\n    /**\n     * The time signature as just the numerator over 4.\n     * For example 4/4 would be just 4 and 6/8 would be 3.\n     * @example\n     * // common time\n     * Tone.Transport.timeSignature = 4;\n     * // 7/8\n     * Tone.Transport.timeSignature = [7, 8];\n     * // this will be reduced to a single number\n     * Tone.Transport.timeSignature; // returns 3.5\n     */\n    get timeSignature() {\n        return this._timeSignature;\n    }\n    set timeSignature(timeSig) {\n        if (isArray(timeSig)) {\n            timeSig = (timeSig[0] / timeSig[1]) * 4;\n        }\n        this._timeSignature = timeSig;\n    }\n    /**\n     * When the Transport.loop = true, this is the starting position of the loop.\n     */\n    get loopStart() {\n        return new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n    }\n    set loopStart(startPosition) {\n        this._loopStart = this.toTicks(startPosition);\n    }\n    /**\n     * When the Transport.loop = true, this is the ending position of the loop.\n     */\n    get loopEnd() {\n        return new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n    }\n    set loopEnd(endPosition) {\n        this._loopEnd = this.toTicks(endPosition);\n    }\n    /**\n     * If the transport loops or not.\n     */\n    get loop() {\n        return this._loop.get(this.now());\n    }\n    set loop(loop) {\n        this._loop.set(loop, this.now());\n    }\n    /**\n     * Set the loop start and stop at the same time.\n     * @example\n     * // loop over the first measure\n     * Tone.Transport.setLoopPoints(0, \"1m\");\n     * Tone.Transport.loop = true;\n     */\n    setLoopPoints(startPosition, endPosition) {\n        this.loopStart = startPosition;\n        this.loopEnd = endPosition;\n        return this;\n    }\n    /**\n     * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.\n     */\n    get swing() {\n        return this._swingAmount;\n    }\n    set swing(amount) {\n        // scale the values to a normal range\n        this._swingAmount = amount;\n    }\n    /**\n     * Set the subdivision which the swing will be applied to.\n     * The default value is an 8th note. Value must be less\n     * than a quarter note.\n     */\n    get swingSubdivision() {\n        return new TicksClass(this.context, this._swingTicks).toNotation();\n    }\n    set swingSubdivision(subdivision) {\n        this._swingTicks = this.toTicks(subdivision);\n    }\n    /**\n     * The Transport's position in Bars:Beats:Sixteenths.\n     * Setting the value will jump to that position right away.\n     */\n    get position() {\n        const now = this.now();\n        const ticks = this._clock.getTicksAtTime(now);\n        return new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n    }\n    set position(progress) {\n        const ticks = this.toTicks(progress);\n        this.ticks = ticks;\n    }\n    /**\n     * The Transport's position in seconds\n     * Setting the value will jump to that position right away.\n     */\n    get seconds() {\n        return this._clock.seconds;\n    }\n    set seconds(s) {\n        const now = this.now();\n        const ticks = this._clock.frequency.timeToTicks(s, now);\n        this.ticks = ticks;\n    }\n    /**\n     * The Transport's loop position as a normalized value. Always\n     * returns 0 if the transport if loop is not true.\n     */\n    get progress() {\n        if (this.loop) {\n            const now = this.now();\n            const ticks = this._clock.getTicksAtTime(now);\n            return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The transports current tick position.\n     */\n    get ticks() {\n        return this._clock.ticks;\n    }\n    set ticks(t) {\n        if (this._clock.ticks !== t) {\n            const now = this.now();\n            // stop everything synced to the transport\n            if (this.state === \"started\") {\n                const ticks = this._clock.getTicksAtTime(now);\n                // schedule to start on the next tick, #573\n                const time = this._clock.getTimeOfTick(Math.ceil(ticks));\n                this.emit(\"stop\", time);\n                this._clock.setTicksAtTime(t, time);\n                // restart it with the new time\n                this.emit(\"start\", time, this._clock.getSecondsAtTime(time));\n            }\n            else {\n                this._clock.setTicksAtTime(t, now);\n            }\n        }\n    }\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    getTicksAtTime(time) {\n        return Math.round(this._clock.getTicksAtTime(time));\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        return this._clock.getSecondsAtTime(time);\n    }\n    /**\n     * Pulses Per Quarter note. This is the smallest resolution\n     * the Transport timing supports. This should be set once\n     * on initialization and not set again. Changing this value\n     * after other objects have been created can cause problems.\n     */\n    get PPQ() {\n        return this._clock.frequency.multiplier;\n    }\n    set PPQ(ppq) {\n        this._clock.frequency.multiplier = ppq;\n    }\n    //-------------------------------------\n    // \tSYNCING\n    //-------------------------------------\n    /**\n     * Returns the time aligned to the next subdivision\n     * of the Transport. If the Transport is not started,\n     * it will return 0.\n     * Note: this will not work precisely during tempo ramps.\n     * @param  subdivision  The subdivision to quantize to\n     * @return  The context time of the next subdivision.\n     * @example\n     * // the transport must be started, otherwise returns 0\n     * Tone.Transport.start();\n     * Tone.Transport.nextSubdivision(\"4n\");\n     */\n    nextSubdivision(subdivision) {\n        subdivision = this.toTicks(subdivision);\n        if (this.state !== \"started\") {\n            // if the transport's not started, return 0\n            return 0;\n        }\n        else {\n            const now = this.now();\n            // the remainder of the current ticks and the subdivision\n            const transportPos = this.getTicksAtTime(now);\n            const remainingTicks = subdivision - transportPos % subdivision;\n            return this._clock.nextTickTime(remainingTicks, now);\n        }\n    }\n    /**\n     * Attaches the signal to the tempo control signal so that\n     * any changes in the tempo will change the signal in the same\n     * ratio.\n     *\n     * @param signal\n     * @param ratio Optionally pass in the ratio between the two signals.\n     * \t\t\tOtherwise it will be computed based on their current values.\n     */\n    syncSignal(signal, ratio) {\n        if (!ratio) {\n            // get the sync ratio\n            const now = this.now();\n            if (signal.getValueAtTime(now) !== 0) {\n                const bpm = this.bpm.getValueAtTime(now);\n                const computedFreq = 1 / (60 / bpm / this.PPQ);\n                ratio = signal.getValueAtTime(now) / computedFreq;\n            }\n            else {\n                ratio = 0;\n            }\n        }\n        const ratioSignal = new Gain(ratio);\n        // @ts-ignore\n        this.bpm.connect(ratioSignal);\n        // @ts-ignore\n        ratioSignal.connect(signal._param);\n        this._syncedSignals.push({\n            initial: signal.value,\n            ratio: ratioSignal,\n            signal,\n        });\n        signal.value = 0;\n        return this;\n    }\n    /**\n     * Unsyncs a previously synced signal from the transport's control.\n     * See Transport.syncSignal.\n     */\n    unsyncSignal(signal) {\n        for (let i = this._syncedSignals.length - 1; i >= 0; i--) {\n            const syncedSignal = this._syncedSignals[i];\n            if (syncedSignal.signal === signal) {\n                syncedSignal.ratio.dispose();\n                syncedSignal.signal.value = syncedSignal.initial;\n                this._syncedSignals.splice(i, 1);\n            }\n        }\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._clock.dispose();\n        writable(this, \"bpm\");\n        this._timeline.dispose();\n        this._repeatedEvents.dispose();\n        return this;\n    }\n}\nEmitter.mixin(Transport);\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.transport = new Transport({ context });\n});\nonContextClose(context => {\n    context.transport.dispose();\n});\n//# sourceMappingURL=Transport.js.map","import { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst delay = new Tone.Delay(0.1).toDestination();\n * \t// connect the signal to both the delay and the destination\n * \tconst pulse = new Tone.PulseOscillator().connect(delay).toDestination();\n * \t// start and stop the pulse\n * \tpulse.start(0).stop(0.01);\n * }, 0.5, 1);\n */\nexport class Delay extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]));\n        this.name = \"Delay\";\n        const options = optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]);\n        const maxDelayInSeconds = this.toSeconds(options.maxDelay);\n        this._maxDelay = Math.max(maxDelayInSeconds, this.toSeconds(options.delayTime));\n        this._delayNode = this.input = this.output = this.context.createDelay(maxDelayInSeconds);\n        this.delayTime = new Param({\n            context: this.context,\n            param: this._delayNode.delayTime,\n            units: \"time\",\n            value: options.delayTime,\n            minValue: 0,\n            maxValue: this.maxDelay,\n        });\n        readOnly(this, \"delayTime\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            delayTime: 0,\n            maxDelay: 1,\n        });\n    }\n    /**\n     * The maximum delay time. This cannot be changed after\n     * the value is passed into the constructor.\n     */\n    get maxDelay() {\n        return this._maxDelay;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._delayNode.disconnect();\n        this.delayTime.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Delay.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Volume is a simple volume node, useful for creating a volume fader.\n *\n * @example\n * const vol = new Tone.Volume(-12).toDestination();\n * const osc = new Tone.Oscillator().connect(vol).start();\n * @category Component\n */\nexport class Volume extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]));\n        this.name = \"Volume\";\n        const options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n        this.input = this.output = new Gain({\n            context: this.context,\n            gain: options.volume,\n            units: \"decibels\",\n        });\n        this.volume = this.output.gain;\n        readOnly(this, \"volume\");\n        this._unmutedVolume = options.volume;\n        // set the mute initially\n        this.mute = options.mute;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const vol = new Tone.Volume(-12).toDestination();\n     * const osc = new Tone.Oscillator().connect(vol).start();\n     * // mute the output\n     * vol.mute = true;\n     */\n    get mute() {\n        return this.volume.value === -Infinity;\n    }\n    set mute(mute) {\n        if (!this.mute && mute) {\n            this._unmutedVolume = this.volume.value;\n            // maybe it should ramp here?\n            this.volume.value = -Infinity;\n        }\n        else if (this.mute && !mute) {\n            this.volume.value = this._unmutedVolume;\n        }\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Volume.js.map","import { Volume } from \"../../component/channel/Volume\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\nimport { Gain } from \"./Gain\";\nimport { connectSeries, ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A single master output which is connected to the\n * AudioDestinationNode (aka your speakers).\n * It provides useful conveniences such as the ability\n * to set the volume and mute the entire application.\n * It also gives you the ability to apply master effects to your application.\n *\n * @example\n * const oscillator = new Tone.Oscillator().start();\n * // the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.Destination);\n * // a convenience for connecting to the master output is also provided:\n * oscillator.toDestination();\n * @category Core\n */\nexport class Destination extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Destination.getDefaults(), arguments));\n        this.name = \"Destination\";\n        this.input = new Volume({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        /**\n         * The volume of the master output.\n         */\n        this.volume = this.input.volume;\n        const options = optionsFromArguments(Destination.getDefaults(), arguments);\n        connectSeries(this.input, this.output, this.context.rawContext.destination);\n        this.mute = options.mute;\n        this._internalChannels = [this.input, this.context.rawContext.destination, this.output];\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const oscillator = new Tone.Oscillator().start().toDestination();\n     * setTimeout(() => {\n     * \t// mute the output\n     * \tTone.Destination.mute = true;\n     * }, 1000);\n     */\n    get mute() {\n        return this.input.mute;\n    }\n    set mute(mute) {\n        this.input.mute = mute;\n    }\n    /**\n     * Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n     * chained in the master effects chain.\n     * @param args All arguments will be connected in a row and the Master will be routed through it.\n     * @example\n     * // route all audio through a filter and compressor\n     * const lowpass = new Tone.Filter(800, \"lowpass\");\n     * const compressor = new Tone.Compressor(-18);\n     * Tone.Destination.chain(lowpass, compressor);\n     */\n    chain(...args) {\n        this.input.disconnect();\n        args.unshift(this.input);\n        args.push(this.output);\n        connectSeries(...args);\n        return this;\n    }\n    /**\n     * The maximum number of channels the system can output\n     * @example\n     * console.log(Tone.Destination.maxChannelCount);\n     */\n    get maxChannelCount() {\n        return this.context.rawContext.destination.maxChannelCount;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.destination = new Destination({ context });\n});\nonContextClose(context => {\n    context.destination.dispose();\n});\n//# sourceMappingURL=Destination.js.map","import { __awaiter } from \"tslib\";\nimport { getContext, setContext } from \"../Global\";\nimport { OfflineContext } from \"./OfflineContext\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n/**\n * Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.\n * The OfflineAudioContext is capable of rendering much faster than real time in many cases.\n * The callback function also passes in an offline instance of [[Context]] which can be used\n * to schedule events along the Transport.\n * @param  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.\n * @param  duration     the amount of time to record for.\n * @return  The promise which is invoked with the ToneAudioBuffer of the recorded output.\n * @example\n * // render 2 seconds of the oscillator\n * Tone.Offline(() => {\n * \t// only nodes created in this callback will be recorded\n * \tconst oscillator = new Tone.Oscillator().toDestination().start(0);\n * }, 2).then((buffer) => {\n * \t// do something with the output buffer\n * \tconsole.log(buffer);\n * });\n * @example\n * // can also schedule events along the Transport\n * // using the passed in Offline Transport\n * Tone.Offline(({ transport }) => {\n * \tconst osc = new Tone.Oscillator().toDestination();\n * \ttransport.schedule(time => {\n * \t\tosc.start(time).stop(time + 0.1);\n * \t}, 1);\n * \t// make sure to start the transport\n * \ttransport.start(0.2);\n * }, 4).then((buffer) => {\n * \t// do something with the output buffer\n * \tconsole.log(buffer);\n * });\n * @category Core\n */\nexport function Offline(callback, duration, channels = 2, sampleRate = getContext().sampleRate) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // set the OfflineAudioContext based on the current context\n        const originalContext = getContext();\n        const context = new OfflineContext(channels, duration, sampleRate);\n        setContext(context);\n        // invoke the callback/scheduling\n        yield callback(context);\n        // then render the audio\n        const bufferPromise = context.render();\n        // return the original AudioContext\n        setContext(originalContext);\n        // await the rendering\n        const buffer = yield bufferPromise;\n        // return the audio\n        return new ToneAudioBuffer(buffer);\n    });\n}\n//# sourceMappingURL=Offline.js.map","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\nimport { assert } from \"../util/Debug\";\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @example\n * const pianoSamples = new Tone.ToneAudioBuffers({\n * \tA1: \"https://tonejs.github.io/audio/casio/A1.mp3\",\n * \tA2: \"https://tonejs.github.io/audio/casio/A2.mp3\",\n * }, () => {\n * \tconst player = new Tone.Player().toDestination();\n * \t// play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"C2\");\n * \tplayer.start();\n * });\n * @example\n * // To pass in additional parameters in the second parameter\n * const buffers = new Tone.ToneAudioBuffers({\n * \t urls: {\n * \t\t A1: \"A1.mp3\",\n * \t\t A2: \"A2.mp3\",\n * \t },\n * \t onload: () => console.log(\"loaded\"),\n * \t baseUrl: \"https://tonejs.github.io/audio/casio/\"\n * });\n * @category Core\n */\nexport class ToneAudioBuffers extends Tone {\n    constructor() {\n        super();\n        this.name = \"ToneAudioBuffers\";\n        /**\n         * All of the buffers\n         */\n        this._buffers = new Map();\n        /**\n         * Keep track of the number of loaded buffers\n         */\n        this._loadingCount = 0;\n        const options = optionsFromArguments(ToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        this.baseUrl = options.baseUrl;\n        // add each one\n        Object.keys(options.urls).forEach(name => {\n            this._loadingCount++;\n            const url = options.urls[name];\n            this.add(name, url, this._bufferLoaded.bind(this, options.onload), options.onerror);\n        });\n    }\n    static getDefaults() {\n        return {\n            baseUrl: \"\",\n            onerror: noOp,\n            onload: noOp,\n            urls: {},\n        };\n    }\n    /**\n     * True if the buffers object has a buffer by that name.\n     * @param  name  The key or index of the buffer.\n     */\n    has(name) {\n        return this._buffers.has(name.toString());\n    }\n    /**\n     * Get a buffer by name. If an array was loaded,\n     * then use the array index.\n     * @param  name  The key or index of the buffer.\n     */\n    get(name) {\n        assert(this.has(name), `ToneAudioBuffers has no buffer named: ${name}`);\n        return this._buffers.get(name.toString());\n    }\n    /**\n     * A buffer was loaded. decrement the counter.\n     */\n    _bufferLoaded(callback) {\n        this._loadingCount--;\n        if (this._loadingCount === 0 && callback) {\n            callback();\n        }\n    }\n    /**\n     * If the buffers are loaded or not\n     */\n    get loaded() {\n        return Array.from(this._buffers).every(([_, buffer]) => buffer.loaded);\n    }\n    /**\n     * Add a buffer by name and url to the Buffers\n     * @param  name      A unique name to give the buffer\n     * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     * @param  onerror  Invoked if the buffer can't be loaded\n     */\n    add(name, url, callback = noOp, onerror = noOp) {\n        if (isString(url)) {\n            this._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n        }\n        else {\n            this._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n        }\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._buffers.forEach(buffer => buffer.dispose());\n        this._buffers.clear();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneAudioBuffers.js.map","import { getContext } from \"../Global\";\nimport { ftom, mtof } from \"./Conversions\";\nimport { FrequencyClass } from \"./Frequency\";\n/**\n * Midi is a primitive type for encoding Time values.\n * Midi can be constructed with or without the `new` keyword. Midi can be passed\n * into the parameter of any method which takes time as an argument.\n * @category Unit\n */\nexport class MidiClass extends FrequencyClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"MidiClass\";\n        this.defaultUnits = \"midi\";\n    }\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return ftom(super._frequencyToUnits(freq));\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return ftom(super._ticksToUnits(ticks));\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return ftom(super._beatsToUnits(beats));\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return ftom(super._secondsToUnits(seconds));\n    }\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * Tone.Midi(60).toMidi(); // 60\n     */\n    toMidi() {\n        return this.valueOf();\n    }\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * Tone.Midi(60).toFrequency(); // 261.6255653005986\n     */\n    toFrequency() {\n        return mtof(this.toMidi());\n    }\n    /**\n     * Transposes the frequency by the given number of semitones.\n     * @return A new transposed MidiClass\n     * @example\n     * Tone.Midi(\"A4\").transpose(3); // \"C5\"\n     */\n    transpose(interval) {\n        return new MidiClass(this.context, this.toMidi() + interval);\n    }\n}\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n */\nexport function Midi(value, units) {\n    return new MidiClass(getContext(), value, units);\n}\n//# sourceMappingURL=Midi.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { Timeline } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule((time) => {\n * \t// use the time argument to schedule a callback with Draw\n * \tTone.Draw.schedule(() => {\n * \t\t// do drawing or DOM manipulation here\n * \t\tconsole.log(time);\n * \t}, time);\n * }, \"+0.5\");\n * Tone.Transport.start();\n * @category Core\n */\nexport class Draw extends ToneWithContext {\n    constructor() {\n        super(...arguments);\n        this.name = \"Draw\";\n        /**\n         * The duration after which events are not invoked.\n         */\n        this.expiration = 0.25;\n        /**\n         * The amount of time before the scheduled time\n         * that the callback can be invoked. Default is\n         * half the time of an animation frame (0.008 seconds).\n         */\n        this.anticipation = 0.008;\n        /**\n         * All of the events.\n         */\n        this._events = new Timeline();\n        /**\n         * The draw loop\n         */\n        this._boundDrawLoop = this._drawLoop.bind(this);\n        /**\n         * The animation frame id\n         */\n        this._animationFrame = -1;\n    }\n    /**\n     * Schedule a function at the given time to be invoked\n     * on the nearest animation frame.\n     * @param  callback  Callback is invoked at the given time.\n     * @param  time      The time relative to the AudioContext time to invoke the callback.\n     * @example\n     * Tone.Transport.scheduleRepeat(time => {\n     * \tTone.Draw.schedule(() => console.log(time), time);\n     * }, 1);\n     * Tone.Transport.start();\n     */\n    schedule(callback, time) {\n        this._events.add({\n            callback,\n            time: this.toSeconds(time),\n        });\n        // start the draw loop on the first event\n        if (this._events.length === 1) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n        return this;\n    }\n    /**\n     * Cancel events scheduled after the given time\n     * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n     */\n    cancel(after) {\n        this._events.cancel(this.toSeconds(after));\n        return this;\n    }\n    /**\n     * The draw loop\n     */\n    _drawLoop() {\n        const now = this.context.currentTime;\n        while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n            const event = this._events.shift();\n            if (event && now - event.time <= this.expiration) {\n                event.callback();\n            }\n        }\n        if (this._events.length > 0) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n    }\n    dispose() {\n        super.dispose();\n        this._events.dispose();\n        cancelAnimationFrame(this._animationFrame);\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.draw = new Draw({ context });\n});\nonContextClose(context => {\n    context.draw.dispose();\n});\n//# sourceMappingURL=Draw.js.map","export * from \"./clock/Clock\";\nexport * from \"./clock/Transport\";\nexport * from \"./context/Context\";\nexport * from \"./context/BaseContext\";\nexport * from \"./context/Delay\";\nexport * from \"./context/Destination\";\nexport * from \"./context/Gain\";\nexport * from \"./context/Offline\";\nexport * from \"./context/OfflineContext\";\nexport * from \"./context/Param\";\nexport * from \"./context/ToneAudioBuffer\";\nexport * from \"./context/ToneAudioBuffers\";\nexport * from \"./context/ToneAudioNode\";\nexport * from \"./type/Frequency\";\nexport * from \"./type/Midi\";\nexport * from \"./type/Time\";\nexport * from \"./type/Ticks\";\nexport * from \"./type/TransportTime\";\nexport * from \"./util/Draw\";\nexport * from \"./util/Emitter\";\nexport * from \"./util/IntervalTimeline\";\nexport * from \"./util/StateTimeline\";\nexport * from \"./util/Timeline\";\nexport * from \"./util/TypeCheck\";\nexport { dbToGain, gainToDb, intervalToFrequencyRatio, ftom, mtof } from \"./type/Conversions\";\nexport { optionsFromArguments, defaultArg } from \"./util/Defaults\";\n// get the units and export them under the \"Unit\" namespace\nimport * as Unit from \"./type/Units\";\nexport { Unit };\n// export the debug stuff as Debug\nimport * as debug from \"./util/Debug\";\nexport { debug };\n//# sourceMappingURL=index.js.map","import { Volume } from \"../component/channel/Volume\";\nimport \"../core/context/Destination\";\nimport \"../core/clock/Transport\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { defaultArg } from \"../core/util/Defaults\";\nimport { noOp, readOnly } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isDefined, isUndef } from \"../core/util/TypeCheck\";\nimport { assert, assertContextRunning } from \"../core/util/Debug\";\nimport { GT } from \"../core/util/Math\";\n/**\n * Base class for sources.\n * start/stop of this.context.transport.\n *\n * ```\n * // Multiple state change events can be chained together,\n * // but must be set in the correct order and with ascending times\n * // OK\n * state.start().stop(\"+0.2\");\n * // OK\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n * // BAD\n * state.stop(\"+0.2\").start();\n * // BAD\n * state.start(\"+0.3\").stop(\"+0.2\");\n * ```\n */\nexport class Source extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        /**\n         * Sources have no inputs\n         */\n        this.input = undefined;\n        /**\n         * Keep track of the scheduled state.\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * The synced `start` callback function from the transport\n         */\n        this._synced = false;\n        /**\n         * Keep track of all of the scheduled event ids\n         */\n        this._scheduled = [];\n        /**\n         * Placeholder functions for syncing/unsyncing to transport\n         */\n        this._syncedStart = noOp;\n        this._syncedStop = noOp;\n        this._state.memory = 100;\n        this._state.increasing = true;\n        this._volume = this.output = new Volume({\n            context: this.context,\n            mute: options.mute,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n        this.onstop = options.onstop;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            onstop: noOp,\n            volume: 0,\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\" or \"stopped\".\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/ahntone_c3.mp3\", () => {\n     * \tplayer.start();\n     * \tconsole.log(player.state);\n     * }).toDestination();\n     */\n    get state() {\n        if (this._synced) {\n            if (this.context.transport.state === \"started\") {\n                return this._state.getValueAtTime(this.context.transport.seconds);\n            }\n            else {\n                return \"stopped\";\n            }\n        }\n        else {\n            return this._state.getValueAtTime(this.now());\n        }\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * // mute the output\n     * osc.mute = true;\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    /**\n     * Ensure that the scheduled time is not before the current time.\n     * Should only be used when scheduled unsynced.\n     */\n    _clampToCurrentTime(time) {\n        if (this._synced) {\n            return time;\n        }\n        else {\n            return Math.max(time, this.context.currentTime);\n        }\n    }\n    /**\n     * Start the source at the specified time. If no time is given,\n     * start the source now.\n     * @param  time When the source should be started.\n     * @example\n     * const source = new Tone.Oscillator().toDestination();\n     * source.start(\"+0.5\"); // starts the source 0.5 seconds from now\n     */\n    start(time, offset, duration) {\n        let computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n        computedTime = this._clampToCurrentTime(computedTime);\n        // if it's started, stop it and restart it\n        if (!this._synced && this._state.getValueAtTime(computedTime) === \"started\") {\n            // time should be strictly greater than the previous start time\n            assert(GT(computedTime, this._state.get(computedTime).time), \"Start time must be strictly greater than previous start time\");\n            this._state.cancel(computedTime);\n            this._state.setStateAtTime(\"started\", computedTime);\n            this.log(\"restart\", computedTime);\n            this.restart(computedTime, offset, duration);\n        }\n        else {\n            this.log(\"start\", computedTime);\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (this._synced) {\n                // add the offset time to the event\n                const event = this._state.get(computedTime);\n                if (event) {\n                    event.offset = this.toSeconds(defaultArg(offset, 0));\n                    event.duration = duration ? this.toSeconds(duration) : undefined;\n                }\n                const sched = this.context.transport.schedule(t => {\n                    this._start(t, offset, duration);\n                }, computedTime);\n                this._scheduled.push(sched);\n                // if the transport is already started\n                // and the time is greater than where the transport is\n                if (this.context.transport.state === \"started\" &&\n                    this.context.transport.getSecondsAtTime(this.immediate()) > computedTime) {\n                    this._syncedStart(this.now(), this.context.transport.seconds);\n                }\n            }\n            else {\n                assertContextRunning(this.context);\n                this._start(computedTime, offset, duration);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the source at the specified time. If no time is given,\n     * stop the source now.\n     * @param  time When the source should be stopped.\n     * @example\n     * const source = new Tone.Oscillator().toDestination();\n     * source.start();\n     * source.stop(\"+0.5\"); // stops the source 0.5 seconds from now\n     */\n    stop(time) {\n        let computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n        computedTime = this._clampToCurrentTime(computedTime);\n        if (this._state.getValueAtTime(computedTime) === \"started\" || isDefined(this._state.getNextState(\"started\", computedTime))) {\n            this.log(\"stop\", computedTime);\n            if (!this._synced) {\n                this._stop(computedTime);\n            }\n            else {\n                const sched = this.context.transport.schedule(this._stop.bind(this), computedTime);\n                this._scheduled.push(sched);\n            }\n            this._state.cancel(computedTime);\n            this._state.setStateAtTime(\"stopped\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Restart the source.\n     */\n    restart(time, offset, duration) {\n        time = this.toSeconds(time);\n        if (this._state.getValueAtTime(time) === \"started\") {\n            this._state.cancel(time);\n            this._restart(time, offset, duration);\n        }\n        return this;\n    }\n    /**\n     * Sync the source to the Transport so that all subsequent\n     * calls to `start` and `stop` are synced to the TransportTime\n     * instead of the AudioContext time.\n     *\n     * @example\n     * const osc = new Tone.Oscillator().toDestination();\n     * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n     * osc.sync().start(0).stop(0.3);\n     * // start the transport.\n     * Tone.Transport.start();\n     * // set it to loop once a second\n     * Tone.Transport.loop = true;\n     * Tone.Transport.loopEnd = 1;\n     */\n    sync() {\n        if (!this._synced) {\n            this._synced = true;\n            this._syncedStart = (time, offset) => {\n                if (offset > 0) {\n                    // get the playback state at that time\n                    const stateEvent = this._state.get(offset);\n                    // listen for start events which may occur in the middle of the sync'ed time\n                    if (stateEvent && stateEvent.state === \"started\" && stateEvent.time !== offset) {\n                        // get the offset\n                        const startOffset = offset - this.toSeconds(stateEvent.time);\n                        let duration;\n                        if (stateEvent.duration) {\n                            duration = this.toSeconds(stateEvent.duration) - startOffset;\n                        }\n                        this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n                    }\n                }\n            };\n            this._syncedStop = time => {\n                const seconds = this.context.transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n                if (this._state.getValueAtTime(seconds) === \"started\") {\n                    this._stop(time);\n                }\n            };\n            this.context.transport.on(\"start\", this._syncedStart);\n            this.context.transport.on(\"loopStart\", this._syncedStart);\n            this.context.transport.on(\"stop\", this._syncedStop);\n            this.context.transport.on(\"pause\", this._syncedStop);\n            this.context.transport.on(\"loopEnd\", this._syncedStop);\n        }\n        return this;\n    }\n    /**\n     * Unsync the source to the Transport. See Source.sync\n     */\n    unsync() {\n        if (this._synced) {\n            this.context.transport.off(\"stop\", this._syncedStop);\n            this.context.transport.off(\"pause\", this._syncedStop);\n            this.context.transport.off(\"loopEnd\", this._syncedStop);\n            this.context.transport.off(\"start\", this._syncedStart);\n            this.context.transport.off(\"loopStart\", this._syncedStart);\n        }\n        this._synced = false;\n        // clear all of the scheduled ids\n        this._scheduled.forEach(id => this.context.transport.clear(id));\n        this._scheduled = [];\n        this._state.cancel(0);\n        // stop it also\n        this._stop(0);\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.onstop = noOp;\n        this.unsync();\n        this._volume.dispose();\n        this._state.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Source.js.map","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { assert } from \"../../core/util/Debug\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { EQ, GTE, LT } from \"../../core/util/Math\";\n/**\n * Wrapper around the native BufferSourceNode.\n * @category Source\n */\nexport class ToneBufferSource extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]));\n        this.name = \"ToneBufferSource\";\n        /**\n         * The oscillator\n         */\n        this._source = this.context.createBufferSource();\n        this._internalChannels = [this._source];\n        /**\n         * indicators if the source has started/stopped\n         */\n        this._sourceStarted = false;\n        this._sourceStopped = false;\n        const options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]);\n        connect(this._source, this._gainNode);\n        this._source.onended = () => this._stopSource();\n        /**\n         * The playbackRate of the buffer\n         */\n        this.playbackRate = new Param({\n            context: this.context,\n            param: this._source.playbackRate,\n            units: \"positive\",\n            value: options.playbackRate,\n        });\n        // set some values initially\n        this.loop = options.loop;\n        this.loopStart = options.loopStart;\n        this.loopEnd = options.loopEnd;\n        this._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);\n        this._internalChannels.push(this._source);\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            url: new ToneAudioBuffer(),\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            onerror: noOp,\n            playbackRate: 1,\n        });\n    }\n    /**\n     * The fadeIn time of the amplitude envelope.\n     */\n    get fadeIn() {\n        return this._fadeIn;\n    }\n    set fadeIn(t) {\n        this._fadeIn = t;\n    }\n    /**\n     * The fadeOut time of the amplitude envelope.\n     */\n    get fadeOut() {\n        return this._fadeOut;\n    }\n    set fadeOut(t) {\n        this._fadeOut = t;\n    }\n    /**\n     * The curve applied to the fades, either \"linear\" or \"exponential\"\n     */\n    get curve() {\n        return this._curve;\n    }\n    set curve(t) {\n        this._curve = t;\n    }\n    /**\n     * Start the buffer\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n     * @param  gain  The gain to play the buffer back at.\n     */\n    start(time, offset, duration, gain = 1) {\n        assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n        const computedTime = this.toSeconds(time);\n        // apply the gain envelope\n        this._startGain(computedTime, gain);\n        // if it's a loop the default offset is the loopstart point\n        if (this.loop) {\n            offset = defaultArg(offset, this.loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // make sure the offset is not less than 0\n        let computedOffset = Math.max(this.toSeconds(offset), 0);\n        // start the buffer source\n        if (this.loop) {\n            // modify the offset if it's greater than the loop time\n            const loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n            const loopStart = this.toSeconds(this.loopStart);\n            const loopDuration = loopEnd - loopStart;\n            // move the offset back\n            if (GTE(computedOffset, loopEnd)) {\n                computedOffset = ((computedOffset - loopStart) % loopDuration) + loopStart;\n            }\n            // when the offset is very close to the duration, set it to 0\n            if (EQ(computedOffset, this.buffer.duration)) {\n                computedOffset = 0;\n            }\n        }\n        // this.buffer.loaded would have return false if the AudioBuffer was undefined\n        this._source.buffer = this.buffer.get();\n        this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n        if (LT(computedOffset, this.buffer.duration)) {\n            this._sourceStarted = true;\n            this._source.start(computedTime, computedOffset);\n        }\n        // if a duration is given, schedule a stop\n        if (isDefined(duration)) {\n            let computedDur = this.toSeconds(duration);\n            // make sure it's never negative\n            computedDur = Math.max(computedDur, 0);\n            this.stop(computedTime + computedDur);\n        }\n        return this;\n    }\n    _stopSource(time) {\n        if (!this._sourceStopped && this._sourceStarted) {\n            this._sourceStopped = true;\n            this._source.stop(this.toSeconds(time));\n            this._onended();\n        }\n    }\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get loopStart() {\n        return this._source.loopStart;\n    }\n    set loopStart(loopStart) {\n        this._source.loopStart = this.toSeconds(loopStart);\n    }\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get loopEnd() {\n        return this._source.loopEnd;\n    }\n    set loopEnd(loopEnd) {\n        this._source.loopEnd = this.toSeconds(loopEnd);\n    }\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get buffer() {\n        return this._buffer;\n    }\n    set buffer(buffer) {\n        this._buffer.set(buffer);\n    }\n    /**\n     * If the buffer should loop once it's over.\n     */\n    get loop() {\n        return this._source.loop;\n    }\n    set loop(loop) {\n        this._source.loop = loop;\n        if (this._sourceStarted) {\n            this.cancelStop();\n        }\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._source.onended = null;\n        this._source.disconnect();\n        this._buffer.dispose();\n        this.playbackRate.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneBufferSource.js.map","import { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { Source } from \"../source/Source\";\nimport { ToneBufferSource } from \"./buffer/ToneBufferSource\";\n/**\n * Noise is a noise generator. It uses looped noise buffers to save on performance.\n * Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n * @example\n * // initialize the noise and start\n * const noise = new Tone.Noise(\"pink\").start();\n * // make an autofilter to shape the noise\n * const autoFilter = new Tone.AutoFilter({\n * \tfrequency: \"8n\",\n * \tbaseFrequency: 200,\n * \toctaves: 8\n * }).toDestination().start();\n * // connect the noise\n * noise.connect(autoFilter);\n * // start the autofilter LFO\n * autoFilter.start();\n * @category Source\n */\nexport class Noise extends Source {\n    constructor() {\n        super(optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]));\n        this.name = \"Noise\";\n        /**\n         * Private reference to the source\n         */\n        this._source = null;\n        const options = optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]);\n        this._playbackRate = options.playbackRate;\n        this.type = options.type;\n        this._fadeIn = options.fadeIn;\n        this._fadeOut = options.fadeOut;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            fadeIn: 0,\n            fadeOut: 0,\n            playbackRate: 1,\n            type: \"white\",\n        });\n    }\n    /**\n     * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n     * @example\n     * const noise = new Tone.Noise().toDestination().start();\n     * noise.type = \"brown\";\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        assert(type in _noiseBuffers, \"Noise: invalid type: \" + type);\n        if (this._type !== type) {\n            this._type = type;\n            // if it's playing, stop and restart it\n            if (this.state === \"started\") {\n                const now = this.now();\n                this._stop(now);\n                this._start(now);\n            }\n        }\n    }\n    /**\n     * The playback rate of the noise. Affects\n     * the \"frequency\" of the noise.\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        this._playbackRate = rate;\n        if (this._source) {\n            this._source.playbackRate.value = rate;\n        }\n    }\n    /**\n     * internal start method\n     */\n    _start(time) {\n        const buffer = _noiseBuffers[this._type];\n        this._source = new ToneBufferSource({\n            url: buffer,\n            context: this.context,\n            fadeIn: this._fadeIn,\n            fadeOut: this._fadeOut,\n            loop: true,\n            onended: () => this.onstop(this),\n            playbackRate: this._playbackRate,\n        }).connect(this.output);\n        this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n    }\n    /**\n     * internal stop method\n     */\n    _stop(time) {\n        if (this._source) {\n            this._source.stop(this.toSeconds(time));\n            this._source = null;\n        }\n    }\n    /**\n     * The fadeIn time of the amplitude envelope.\n     */\n    get fadeIn() {\n        return this._fadeIn;\n    }\n    set fadeIn(time) {\n        this._fadeIn = time;\n        if (this._source) {\n            this._source.fadeIn = this._fadeIn;\n        }\n    }\n    /**\n     * The fadeOut time of the amplitude envelope.\n     */\n    get fadeOut() {\n        return this._fadeOut;\n    }\n    set fadeOut(time) {\n        this._fadeOut = time;\n        if (this._source) {\n            this._source.fadeOut = this._fadeOut;\n        }\n    }\n    _restart(time) {\n        // TODO could be optimized by cancelling the buffer source 'stop'\n        this._stop(time);\n        this._start(time);\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        if (this._source) {\n            this._source.disconnect();\n        }\n        return this;\n    }\n}\n//--------------------\n// THE NOISE BUFFERS\n//--------------------\n// Noise buffer stats\nconst BUFFER_LENGTH = 44100 * 5;\nconst NUM_CHANNELS = 2;\n/**\n * Cache the noise buffers\n */\nconst _noiseCache = {\n    brown: null,\n    pink: null,\n    white: null,\n};\n/**\n * The noise arrays. Generated on initialization.\n * borrowed heavily from https://github.com/zacharydenton/noise.js\n * (c) 2013 Zach Denton (MIT)\n */\nconst _noiseBuffers = {\n    get brown() {\n        if (!_noiseCache.brown) {\n            const buffer = [];\n            for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                const channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                let lastOut = 0.0;\n                for (let i = 0; i < BUFFER_LENGTH; i++) {\n                    const white = Math.random() * 2 - 1;\n                    channel[i] = (lastOut + (0.02 * white)) / 1.02;\n                    lastOut = channel[i];\n                    channel[i] *= 3.5; // (roughly) compensate for gain\n                }\n            }\n            _noiseCache.brown = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.brown;\n    },\n    get pink() {\n        if (!_noiseCache.pink) {\n            const buffer = [];\n            for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                const channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                let b0, b1, b2, b3, b4, b5, b6;\n                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n                for (let i = 0; i < BUFFER_LENGTH; i++) {\n                    const white = Math.random() * 2 - 1;\n                    b0 = 0.99886 * b0 + white * 0.0555179;\n                    b1 = 0.99332 * b1 + white * 0.0750759;\n                    b2 = 0.96900 * b2 + white * 0.1538520;\n                    b3 = 0.86650 * b3 + white * 0.3104856;\n                    b4 = 0.55000 * b4 + white * 0.5329522;\n                    b5 = -0.7616 * b5 - white * 0.0168980;\n                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n                    channel[i] *= 0.11; // (roughly) compensate for gain\n                    b6 = white * 0.115926;\n                }\n            }\n            _noiseCache.pink = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.pink;\n    },\n    get white() {\n        if (!_noiseCache.white) {\n            const buffer = [];\n            for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                const channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                for (let i = 0; i < BUFFER_LENGTH; i++) {\n                    channel[i] = Math.random() * 2 - 1;\n                }\n            }\n            _noiseCache.white = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.white;\n    },\n};\n//# sourceMappingURL=Noise.js.map","import { __awaiter } from \"tslib\";\nimport { connect, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Volume } from \"../component/channel/Volume\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { isDefined, isNumber } from \"../core/util/TypeCheck\";\n/**\n * UserMedia uses MediaDevices.getUserMedia to open up and external microphone or audio input.\n * Check [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n * to see which browsers are supported. Access to an external input\n * is limited to secure (HTTPS) connections.\n * @example\n * const meter = new Tone.Meter();\n * const mic = new Tone.UserMedia().connect(meter);\n * mic.open().then(() => {\n * \t// promise resolves when input is available\n * \tconsole.log(\"mic open\");\n * \t// print the incoming mic levels in decibels\n * \tsetInterval(() => console.log(meter.getValue()), 100);\n * }).catch(e => {\n * \t// promise is rejected when the user doesn't have or allow mic access\n * \tconsole.log(\"mic not open\");\n * });\n * @category Source\n */\nexport class UserMedia extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"]));\n        this.name = \"UserMedia\";\n        const options = optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"]);\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n        this.mute = options.mute;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0\n        });\n    }\n    /**\n     * Open the media stream. If a string is passed in, it is assumed\n     * to be the label or id of the stream, if a number is passed in,\n     * it is the input number of the stream.\n     * @param  labelOrId The label or id of the audio input media device.\n     *                   With no argument, the default stream is opened.\n     * @return The promise is resolved when the stream is open.\n     */\n    open(labelOrId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            assert(UserMedia.supported, \"UserMedia is not supported\");\n            // close the previous stream\n            if (this.state === \"started\") {\n                this.close();\n            }\n            const devices = yield UserMedia.enumerateDevices();\n            if (isNumber(labelOrId)) {\n                this._device = devices[labelOrId];\n            }\n            else {\n                this._device = devices.find((device) => {\n                    return device.label === labelOrId || device.deviceId === labelOrId;\n                });\n                // didn't find a matching device\n                if (!this._device && devices.length > 0) {\n                    this._device = devices[0];\n                }\n                assert(isDefined(this._device), `No matching device ${labelOrId}`);\n            }\n            // do getUserMedia\n            const constraints = {\n                audio: {\n                    echoCancellation: false,\n                    sampleRate: this.context.sampleRate,\n                    noiseSuppression: false,\n                    mozNoiseSuppression: false,\n                }\n            };\n            if (this._device) {\n                // @ts-ignore\n                constraints.audio.deviceId = this._device.deviceId;\n            }\n            const stream = yield navigator.mediaDevices.getUserMedia(constraints);\n            // start a new source only if the previous one is closed\n            if (!this._stream) {\n                this._stream = stream;\n                // Wrap a MediaStreamSourceNode around the live input stream.\n                const mediaStreamNode = this.context.createMediaStreamSource(stream);\n                // Connect the MediaStreamSourceNode to a gate gain node\n                connect(mediaStreamNode, this.output);\n                this._mediaStream = mediaStreamNode;\n            }\n            return this;\n        });\n    }\n    /**\n     * Close the media stream\n     */\n    close() {\n        if (this._stream && this._mediaStream) {\n            this._stream.getAudioTracks().forEach((track) => {\n                track.stop();\n            });\n            this._stream = undefined;\n            // remove the old media stream\n            this._mediaStream.disconnect();\n            this._mediaStream = undefined;\n        }\n        this._device = undefined;\n        return this;\n    }\n    /**\n     * Returns a promise which resolves with the list of audio input devices available.\n     * @return The promise that is resolved with the devices\n     * @example\n     * Tone.UserMedia.enumerateDevices().then((devices) => {\n     * \t// print the device labels\n     * \tconsole.log(devices.map(device => device.label));\n     * });\n     */\n    static enumerateDevices() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const allDevices = yield navigator.mediaDevices.enumerateDevices();\n            return allDevices.filter(device => {\n                return device.kind === \"audioinput\";\n            });\n        });\n    }\n    /**\n     * Returns the playback state of the source, \"started\" when the microphone is open\n     * and \"stopped\" when the mic is closed.\n     */\n    get state() {\n        return this._stream && this._stream.active ? \"started\" : \"stopped\";\n    }\n    /**\n     * Returns an identifier for the represented device that is\n     * persisted across sessions. It is un-guessable by other applications and\n     * unique to the origin of the calling application. It is reset when the\n     * user clears cookies (for Private Browsing, a different identifier is\n     * used that is not persisted across sessions). Returns undefined when the\n     * device is not open.\n     */\n    get deviceId() {\n        if (this._device) {\n            return this._device.deviceId;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Returns a group identifier. Two devices have the\n     * same group identifier if they belong to the same physical device.\n     * Returns null  when the device is not open.\n     */\n    get groupId() {\n        if (this._device) {\n            return this._device.groupId;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Returns a label describing this device (for example \"Built-in Microphone\").\n     * Returns undefined when the device is not open or label is not available\n     * because of permissions.\n     */\n    get label() {\n        if (this._device) {\n            return this._device.label;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const mic = new Tone.UserMedia();\n     * mic.open().then(() => {\n     * \t// promise resolves when input is available\n     * });\n     * // mute the output\n     * mic.mute = true;\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    dispose() {\n        super.dispose();\n        this.close();\n        this._volume.dispose();\n        this.volume.dispose();\n        return this;\n    }\n    /**\n     * If getUserMedia is supported by the browser.\n     */\n    static get supported() {\n        return isDefined(navigator.mediaDevices) &&\n            isDefined(navigator.mediaDevices.getUserMedia);\n    }\n}\n//# sourceMappingURL=UserMedia.js.map","import { __awaiter } from \"tslib\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\nexport function generateWaveform(instance, length) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const duration = length / instance.context.sampleRate;\n        const context = new OfflineContext(1, duration, instance.context.sampleRate);\n        const clone = new instance.constructor(Object.assign(instance.get(), {\n            // should do 2 iterations\n            frequency: 2 / duration,\n            // zero out the detune\n            detune: 0,\n            context\n        })).toDestination();\n        clone.start(0);\n        const buffer = yield context.render();\n        return buffer.getChannelData(0);\n    });\n}\n//# sourceMappingURL=OscillatorInterface.js.map","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[[Oscillator]] is better for most use-cases***\n * @category Source\n */\nexport class ToneOscillatorNode extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"ToneOscillatorNode\";\n        /**\n         * The oscillator\n         */\n        this._oscillator = this.context.createOscillator();\n        this._internalChannels = [this._oscillator];\n        const options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        connect(this._oscillator, this._gainNode);\n        this.type = options.type;\n        this.frequency = new Param({\n            context: this.context,\n            param: this._oscillator.frequency,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Param({\n            context: this.context,\n            param: this._oscillator.detune,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, [\"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            type: \"sine\",\n        });\n    }\n    /**\n     * Start the oscillator node at the given time\n     * @param  time When to start the oscillator\n     */\n    start(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        this._startGain(computedTime);\n        this._oscillator.start(computedTime);\n        return this;\n    }\n    _stopSource(time) {\n        this._oscillator.stop(time);\n    }\n    /**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n     */\n    setPeriodicWave(periodicWave) {\n        this._oscillator.setPeriodicWave(periodicWave);\n        return this;\n    }\n    /**\n     * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n     */\n    get type() {\n        return this._oscillator.type;\n    }\n    set type(type) {\n        this._oscillator.type = type;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        if (this.state === \"started\") {\n            this.stop();\n        }\n        this._oscillator.disconnect();\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneOscillatorNode.js.map","import { __awaiter } from \"tslib\";\nimport { deepEquals, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { ToneOscillatorNode } from \"./ToneOscillatorNode\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { clamp } from \"../../core/util/Math\";\n/**\n * Oscillator supports a number of features including\n * phase rotation, multiple oscillator types (see Oscillator.type),\n * and Transport syncing (see Oscillator.syncFrequency).\n *\n * @example\n * // make and start a 440hz sine tone\n * const osc = new Tone.Oscillator(440, \"sine\").toDestination().start();\n * @category Source\n */\nexport class Oscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"Oscillator\";\n        /**\n         * the main oscillator\n         */\n        this._oscillator = null;\n        const options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        readOnly(this, \"frequency\");\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, \"detune\");\n        this._partials = options.partials;\n        this._partialCount = options.partialCount;\n        this._type = options.type;\n        if (options.partialCount && options.type !== \"custom\") {\n            this._type = this.baseType + options.partialCount.toString();\n        }\n        this.phase = options.phase;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            partialCount: 0,\n            partials: [],\n            phase: 0,\n            type: \"sine\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        const computedTime = this.toSeconds(time);\n        // new oscillator with previous values\n        const oscillator = new ToneOscillatorNode({\n            context: this.context,\n            onended: () => this.onstop(this),\n        });\n        this._oscillator = oscillator;\n        if (this._wave) {\n            this._oscillator.setPeriodicWave(this._wave);\n        }\n        else {\n            this._oscillator.type = this._type;\n        }\n        // connect the control signal to the oscillator frequency & detune\n        this._oscillator.connect(this.output);\n        this.frequency.connect(this._oscillator.frequency);\n        this.detune.connect(this._oscillator.detune);\n        // start the oscillator\n        this._oscillator.start(computedTime);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._oscillator) {\n            this._oscillator.stop(computedTime);\n        }\n    }\n    /**\n     * Restart the oscillator. Does not stop the oscillator, but instead\n     * just cancels any scheduled 'stop' from being invoked.\n     */\n    _restart(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"restart\", computedTime);\n        if (this._oscillator) {\n            this._oscillator.cancelStop();\n        }\n        this._state.cancel(computedTime);\n        return this;\n    }\n    /**\n     * Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n     * will also affect the oscillators frequency.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * osc.frequency.value = 440;\n     * // the ratio between the bpm and the frequency will be maintained\n     * osc.syncFrequency();\n     * // double the tempo\n     * Tone.Transport.bpm.value *= 2;\n     * // the frequency of the oscillator is doubled to 880\n     */\n    syncFrequency() {\n        this.context.transport.syncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * Unsync the oscillator's frequency from the Transport.\n     * See Oscillator.syncFrequency\n     */\n    unsyncFrequency() {\n        this.context.transport.unsyncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * Get a cached periodic wave. Avoids having to recompute\n     * the oscillator values when they have already been computed\n     * with the same values.\n     */\n    _getCachedPeriodicWave() {\n        if (this._type === \"custom\") {\n            const oscProps = Oscillator._periodicWaveCache.find(description => {\n                return description.phase === this._phase &&\n                    deepEquals(description.partials, this._partials);\n            });\n            return oscProps;\n        }\n        else {\n            const oscProps = Oscillator._periodicWaveCache.find(description => {\n                return description.type === this._type &&\n                    description.phase === this._phase;\n            });\n            this._partialCount = oscProps ? oscProps.partialCount : this._partialCount;\n            return oscProps;\n        }\n    }\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._type = type;\n        const isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n        if (this._phase === 0 && isBasicType) {\n            this._wave = undefined;\n            this._partialCount = 0;\n            // just go with the basic approach\n            if (this._oscillator !== null) {\n                // already tested that it's a basic type\n                this._oscillator.type = type;\n            }\n        }\n        else {\n            // first check if the value is cached\n            const cache = this._getCachedPeriodicWave();\n            if (isDefined(cache)) {\n                const { partials, wave } = cache;\n                this._wave = wave;\n                this._partials = partials;\n                if (this._oscillator !== null) {\n                    this._oscillator.setPeriodicWave(this._wave);\n                }\n            }\n            else {\n                const [real, imag] = this._getRealImaginary(type, this._phase);\n                const periodicWave = this.context.createPeriodicWave(real, imag);\n                this._wave = periodicWave;\n                if (this._oscillator !== null) {\n                    this._oscillator.setPeriodicWave(this._wave);\n                }\n                // set the cache\n                Oscillator._periodicWaveCache.push({\n                    imag,\n                    partialCount: this._partialCount,\n                    partials: this._partials,\n                    phase: this._phase,\n                    real,\n                    type: this._type,\n                    wave: this._wave,\n                });\n                if (Oscillator._periodicWaveCache.length > 100) {\n                    Oscillator._periodicWaveCache.shift();\n                }\n            }\n        }\n    }\n    get baseType() {\n        return this._type.replace(this.partialCount.toString(), \"\");\n    }\n    set baseType(baseType) {\n        if (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n            this.type = baseType + this.partialCount;\n        }\n        else {\n            this.type = baseType;\n        }\n    }\n    get partialCount() {\n        return this._partialCount;\n    }\n    set partialCount(p) {\n        assertRange(p, 0);\n        let type = this._type;\n        const partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n        if (partial) {\n            type = partial[1];\n        }\n        if (this._type !== \"custom\") {\n            if (p === 0) {\n                this.type = type;\n            }\n            else {\n                this.type = type + p.toString();\n            }\n        }\n        else {\n            // extend or shorten the partials array\n            const fullPartials = new Float32Array(p);\n            // copy over the partials array\n            this._partials.forEach((v, i) => fullPartials[i] = v);\n            this._partials = Array.from(fullPartials);\n            this.type = this._type;\n        }\n    }\n    /**\n     * Returns the real and imaginary components based\n     * on the oscillator type.\n     * @returns [real: Float32Array, imaginary: Float32Array]\n     */\n    _getRealImaginary(type, phase) {\n        const fftSize = 4096;\n        let periodicWaveSize = fftSize / 2;\n        const real = new Float32Array(periodicWaveSize);\n        const imag = new Float32Array(periodicWaveSize);\n        let partialCount = 1;\n        if (type === \"custom\") {\n            partialCount = this._partials.length + 1;\n            this._partialCount = this._partials.length;\n            periodicWaveSize = partialCount;\n            // if the partial count is 0, don't bother doing any computation\n            if (this._partials.length === 0) {\n                return [real, imag];\n            }\n        }\n        else {\n            const partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n            if (partial) {\n                partialCount = parseInt(partial[2], 10) + 1;\n                this._partialCount = parseInt(partial[2], 10);\n                type = partial[1];\n                partialCount = Math.max(partialCount, 2);\n                periodicWaveSize = partialCount;\n            }\n            else {\n                this._partialCount = 0;\n            }\n            this._partials = [];\n        }\n        for (let n = 1; n < periodicWaveSize; ++n) {\n            const piFactor = 2 / (n * Math.PI);\n            let b;\n            switch (type) {\n                case \"sine\":\n                    b = (n <= partialCount) ? 1 : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"square\":\n                    b = (n & 1) ? 2 * piFactor : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"sawtooth\":\n                    b = piFactor * ((n & 1) ? 1 : -1);\n                    this._partials[n - 1] = b;\n                    break;\n                case \"triangle\":\n                    if (n & 1) {\n                        b = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n                    }\n                    else {\n                        b = 0;\n                    }\n                    this._partials[n - 1] = b;\n                    break;\n                case \"custom\":\n                    b = this._partials[n - 1];\n                    break;\n                default:\n                    throw new TypeError(\"Oscillator: invalid type: \" + type);\n            }\n            if (b !== 0) {\n                real[n] = -b * Math.sin(phase * n);\n                imag[n] = b * Math.cos(phase * n);\n            }\n            else {\n                real[n] = 0;\n                imag[n] = 0;\n            }\n        }\n        return [real, imag];\n    }\n    /**\n     * Compute the inverse FFT for a given phase.\n     */\n    _inverseFFT(real, imag, phase) {\n        let sum = 0;\n        const len = real.length;\n        for (let i = 0; i < len; i++) {\n            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n        }\n        return sum;\n    }\n    /**\n     * Returns the initial value of the oscillator when stopped.\n     * E.g. a \"sine\" oscillator with phase = 90 would return an initial value of -1.\n     */\n    getInitialValue() {\n        const [real, imag] = this._getRealImaginary(this._type, 0);\n        let maxValue = 0;\n        const twoPi = Math.PI * 2;\n        const testPositions = 32;\n        // check for peaks in 16 places\n        for (let i = 0; i < testPositions; i++) {\n            maxValue = Math.max(this._inverseFFT(real, imag, (i / testPositions) * twoPi), maxValue);\n        }\n        return clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n    }\n    get partials() {\n        return this._partials.slice(0, this.partialCount);\n    }\n    set partials(partials) {\n        this._partials = partials;\n        this._partialCount = this._partials.length;\n        if (partials.length) {\n            this.type = \"custom\";\n        }\n    }\n    get phase() {\n        return this._phase * (180 / Math.PI);\n    }\n    set phase(phase) {\n        this._phase = phase * Math.PI / 180;\n        // reset the type\n        this.type = this._type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    dispose() {\n        super.dispose();\n        if (this._oscillator !== null) {\n            this._oscillator.dispose();\n        }\n        this._wave = undefined;\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    }\n}\n/**\n * Cache the periodic waves to avoid having to redo computations\n */\nOscillator._periodicWaveCache = [];\n//# sourceMappingURL=Oscillator.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n/**\n * A signal operator has an input and output and modifies the signal.\n */\nexport class SignalOperator extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"])));\n    }\n    connect(destination, outputNum = 0, inputNum = 0) {\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    }\n}\n//# sourceMappingURL=SignalOperator.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isFunction } from \"../core/util/TypeCheck\";\nimport { assert } from \"../core/util/Debug\";\nimport { Signal } from \"./Signal\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Wraps the native Web Audio API\n * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // multiply the output of the signal by 2 using the waveshaper's function\n * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);\n * const signal = new Tone.Signal(440).connect(timesTwo);\n * @category Signal\n */\nexport class WaveShaper extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"])));\n        this.name = \"WaveShaper\";\n        /**\n         * the waveshaper node\n         */\n        this._shaper = this.context.createWaveShaper();\n        /**\n         * The input to the waveshaper node.\n         */\n        this.input = this._shaper;\n        /**\n         * The output from the waveshaper node\n         */\n        this.output = this._shaper;\n        const options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n        if (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n            this.curve = Float32Array.from(options.mapping);\n        }\n        else if (isFunction(options.mapping)) {\n            this.setMap(options.mapping, options.length);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            length: 1024,\n        });\n    }\n    /**\n     * Uses a mapping function to set the value of the curve.\n     * @param mapping The function used to define the values.\n     *                The mapping function take two arguments:\n     *                the first is the value at the current position\n     *                which goes from -1 to 1 over the number of elements\n     *                in the curve array. The second argument is the array position.\n     * @example\n     * const shaper = new Tone.WaveShaper();\n     * // map the input signal from [-1, 1] to [0, 10]\n     * shaper.setMap((val, index) => (val + 1) * 5);\n     */\n    setMap(mapping, length = 1024) {\n        const array = new Float32Array(length);\n        for (let i = 0, len = length; i < len; i++) {\n            const normalized = (i / (len - 1)) * 2 - 1;\n            array[i] = mapping(normalized, i);\n        }\n        this.curve = array;\n        return this;\n    }\n    /**\n     * The array to set as the waveshaper curve. For linear curves\n     * array length does not make much difference, but for complex curves\n     * longer arrays will provide smoother interpolation.\n     */\n    get curve() {\n        return this._shaper.curve;\n    }\n    set curve(mapping) {\n        this._shaper.curve = mapping;\n    }\n    /**\n     * Specifies what type of oversampling (if any) should be used when\n     * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get oversample() {\n        return this._shaper.oversample;\n    }\n    set oversample(oversampling) {\n        const isOverSampleType = [\"none\", \"2x\", \"4x\"].some(str => str.includes(oversampling));\n        assert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n        this._shaper.oversample = oversampling;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._shaper.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=WaveShaper.js.map","import { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].\n * See [[GainToAudio]].\n * @category Signal\n */\nexport class AudioToGain extends SignalOperator {\n    constructor() {\n        super(...arguments);\n        this.name = \"AudioToGain\";\n        /**\n         * The node which converts the audio ranges\n         */\n        this._norm = new WaveShaper({\n            context: this.context,\n            mapping: x => (x + 1) / 2,\n        });\n        /**\n         * The AudioRange input [-1, 1]\n         */\n        this.input = this._norm;\n        /**\n         * The GainRange output [0, 1]\n         */\n        this.output = this._norm;\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._norm.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AudioToGain.js.map","import { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * // multiply two signals\n * const mult = new Tone.Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * // multiply a signal and a number\n * const mult = new Tone.Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\nexport class Multiply extends Signal {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"])));\n        this.name = \"Multiply\";\n        /**\n         * Indicates if the value should be overridden on connection\n         */\n        this.override = false;\n        const options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n        this._mult = this.input = this.output = new Gain({\n            context: this.context,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        this.factor = this._param = this._mult.gain;\n        this.factor.setValueAtTime(options.value, 0);\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._mult.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Multiply.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * An amplitude modulated oscillator node. It is implemented with\n * two oscillators, one which modulators the other's amplitude\n * through a gain node.\n * ```\n *    +-------------+       +----------+\n *    | Carrier Osc +>------> GainNode |\n *    +-------------+       |          +--->Output\n *                      +---> gain     |\n * +---------------+    |   +----------+\n * | Modulator Osc +>---+\n * +---------------+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst amOsc = new Tone.AMOscillator(30, \"sine\", \"square\").toDestination().start();\n * }, 0.2, 1);\n * @category Source\n */\nexport class AMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n        this.name = \"AMOscillator\";\n        /**\n         * convert the -1,1 output to 0,1\n         */\n        this._modulationScale = new AudioToGain({ context: this.context });\n        /**\n         * the node where the modulation happens\n         */\n        this._modulationNode = new Gain({\n            context: this.context,\n        });\n        const options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        this._carrier = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: options.type,\n        });\n        this.frequency = this._carrier.frequency,\n            this.detune = this._carrier.detune;\n        this._modulator = new Oscillator({\n            context: this.context,\n            phase: options.phase,\n            type: options.modulationType,\n        });\n        this.harmonicity = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        // connections\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n        this._carrier.chain(this._modulationNode, this.output);\n        readOnly(this, [\"frequency\", \"detune\", \"harmonicity\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationType: \"square\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    }\n    _restart(time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n    }\n    /**\n     * The type of the carrier oscillator\n     */\n    get type() {\n        return this._carrier.type;\n    }\n    set type(type) {\n        this._carrier.type = type;\n    }\n    get baseType() {\n        return this._carrier.baseType;\n    }\n    set baseType(baseType) {\n        this._carrier.baseType = baseType;\n    }\n    get partialCount() {\n        return this._carrier.partialCount;\n    }\n    set partialCount(partialCount) {\n        this._carrier.partialCount = partialCount;\n    }\n    /**\n     * The type of the modulator oscillator\n     */\n    get modulationType() {\n        return this._modulator.type;\n    }\n    set modulationType(type) {\n        this._modulator.type = type;\n    }\n    get phase() {\n        return this._carrier.phase;\n    }\n    set phase(phase) {\n        this._carrier.phase = phase;\n        this._modulator.phase = phase;\n    }\n    get partials() {\n        return this._carrier.partials;\n    }\n    set partials(partials) {\n        this._carrier.partials = partials;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this._modulationScale.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * FMOscillator implements a frequency modulation synthesis\n * ```\n *                                              +-------------+\n * +---------------+        +-------------+     | Carrier Osc |\n * | Modulator Osc +>-------> GainNode    |     |             +--->Output\n * +---------------+        |             +>----> frequency   |\n *                       +--> gain        |     +-------------+\n *                       |  +-------------+\n * +-----------------+   |\n * | modulationIndex +>--+\n * +-----------------+\n * ```\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst fmOsc = new Tone.FMOscillator({\n * \t\tfrequency: 200,\n * \t\ttype: \"square\",\n * \t\tmodulationType: \"triangle\",\n * \t\tharmonicity: 0.2,\n * \t\tmodulationIndex: 3\n * \t}).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class FMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n        this.name = \"FMOscillator\";\n        /**\n         * the node where the modulation happens\n         */\n        this._modulationNode = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        const options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        this._carrier = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: 0,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: options.type,\n        });\n        this.detune = this._carrier.detune;\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this._modulator = new Oscillator({\n            context: this.context,\n            phase: options.phase,\n            type: options.modulationType,\n        });\n        this.harmonicity = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        this.modulationIndex = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.modulationIndex,\n        });\n        // connections\n        this.frequency.connect(this._carrier.frequency);\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this.frequency.chain(this.modulationIndex, this._modulationNode);\n        this._modulator.connect(this._modulationNode.gain);\n        this._modulationNode.connect(this._carrier.frequency);\n        this._carrier.connect(this.output);\n        this.detune.connect(this._modulator.detune);\n        readOnly(this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationIndex: 2,\n            modulationType: \"square\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    }\n    _restart(time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n        return this;\n    }\n    get type() {\n        return this._carrier.type;\n    }\n    set type(type) {\n        this._carrier.type = type;\n    }\n    get baseType() {\n        return this._carrier.baseType;\n    }\n    set baseType(baseType) {\n        this._carrier.baseType = baseType;\n    }\n    get partialCount() {\n        return this._carrier.partialCount;\n    }\n    set partialCount(partialCount) {\n        this._carrier.partialCount = partialCount;\n    }\n    /**\n     * The type of the modulator oscillator\n     */\n    get modulationType() {\n        return this._modulator.type;\n    }\n    set modulationType(type) {\n        this._modulator.type = type;\n    }\n    get phase() {\n        return this._carrier.phase;\n    }\n    set phase(phase) {\n        this._carrier.phase = phase;\n        this._modulator.phase = phase;\n    }\n    get partials() {\n        return this._carrier.partials;\n    }\n    set partials(partials) {\n        this._carrier.partials = partials;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this.modulationIndex.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { WaveShaper } from \"../../signal/WaveShaper\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * PulseOscillator is an oscillator with control over pulse width,\n * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is\n * a square wave.\n * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n * ```\n *    width = -0.25        width = 0.0          width = 0.25\n *\n *   +-----+            +-------+       +    +-------+     +-+\n *   |     |            |       |       |            |     |\n *   |     |            |       |       |            |     |\n * +-+     +-------+    +       +-------+            +-----+\n *\n *\n *    width = -0.5                              width = 0.5\n *\n *     +---+                                 +-------+   +---+\n *     |   |                                         |   |\n *     |   |                                         |   |\n * +---+   +-------+                                 +---+\n *\n *\n *    width = -0.75                             width = 0.75\n *\n *       +-+                                 +-------+ +-----+\n *       | |                                         | |\n *       | |                                         | |\n * +-----+ +-------+                                 +-+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst pulse = new Tone.PulseOscillator(50, 0.4).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PulseOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]));\n        this.name = \"PulseOscillator\";\n        /**\n         * gate the width amount\n         */\n        this._widthGate = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * Threshold the signal to turn it into a square\n         */\n        this._thresh = new WaveShaper({\n            context: this.context,\n            mapping: val => val <= 0 ? -1 : 1,\n        });\n        const options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n        this.width = new Signal({\n            context: this.context,\n            units: \"audioRange\",\n            value: options.width,\n        });\n        this._triangle = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: \"triangle\",\n        });\n        this.frequency = this._triangle.frequency;\n        this.detune = this._triangle.detune;\n        // connections\n        this._triangle.chain(this._thresh, this.output);\n        this.width.chain(this._widthGate, this._thresh);\n        readOnly(this, [\"width\", \"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            phase: 0,\n            type: \"pulse\",\n            width: 0.2,\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._triangle.start(time);\n        this._widthGate.gain.setValueAtTime(1, time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._triangle.stop(time);\n        // the width is still connected to the output.\n        // that needs to be stopped also\n        this._widthGate.gain.cancelScheduledValues(time);\n        this._widthGate.gain.setValueAtTime(0, time);\n    }\n    _restart(time) {\n        this._triangle.restart(time);\n        this._widthGate.gain.cancelScheduledValues(time);\n        this._widthGate.gain.setValueAtTime(1, time);\n    }\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get phase() {\n        return this._triangle.phase;\n    }\n    set phase(phase) {\n        this._triangle.phase = phase;\n    }\n    /**\n     * The type of the oscillator. Always returns \"pulse\".\n     */\n    get type() {\n        return \"pulse\";\n    }\n    /**\n     * The baseType of the oscillator. Always returns \"pulse\".\n     */\n    get baseType() {\n        return \"pulse\";\n    }\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get partials() {\n        return [];\n    }\n    /**\n     * No partials for this waveform type.\n     */\n    get partialCount() {\n        return 0;\n    }\n    /**\n     * *Internal use* The carrier oscillator type is fed through the\n     * waveshaper node to create the pulse. Using different carrier oscillators\n     * changes oscillator's behavior.\n     */\n    set carrierType(type) {\n        this._triangle.type = type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up method.\n     */\n    dispose() {\n        super.dispose();\n        this._triangle.dispose();\n        this.width.dispose();\n        this._widthGate.dispose();\n        this._thresh.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PulseOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FatOscillator is an array of oscillators with detune spread between the oscillators\n * @example\n * const fatOsc = new Tone.FatOscillator(\"Ab3\", \"sawtooth\", 40).toDestination().start();\n * @category Source\n */\nexport class FatOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]));\n        this.name = \"FatOscillator\";\n        /**\n         * The array of oscillators\n         */\n        this._oscillators = [];\n        const options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        this._spread = options.spread;\n        this._type = options.type;\n        this._phase = options.phase;\n        this._partials = options.partials;\n        this._partialCount = options.partialCount;\n        // set the count initially\n        this.count = options.count;\n        readOnly(this, [\"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            count: 3,\n            spread: 20,\n            type: \"sawtooth\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._forEach(osc => osc.start(time));\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._forEach(osc => osc.stop(time));\n    }\n    _restart(time) {\n        this._forEach(osc => osc.restart(time));\n    }\n    /**\n     * Iterate over all of the oscillators\n     */\n    _forEach(iterator) {\n        for (let i = 0; i < this._oscillators.length; i++) {\n            iterator(this._oscillators[i], i);\n        }\n    }\n    /**\n     * The type of the oscillator\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._type = type;\n        this._forEach(osc => osc.type = type);\n    }\n    /**\n     * The detune spread between the oscillators. If \"count\" is\n     * set to 3 oscillators and the \"spread\" is set to 40,\n     * the three oscillators would be detuned like this: [-20, 0, 20]\n     * for a total detune spread of 40 cents.\n     * @example\n     * const fatOsc = new Tone.FatOscillator().toDestination().start();\n     * fatOsc.spread = 70;\n     */\n    get spread() {\n        return this._spread;\n    }\n    set spread(spread) {\n        this._spread = spread;\n        if (this._oscillators.length > 1) {\n            const start = -spread / 2;\n            const step = spread / (this._oscillators.length - 1);\n            this._forEach((osc, i) => osc.detune.value = start + step * i);\n        }\n    }\n    /**\n     * The number of detuned oscillators. Must be an integer greater than 1.\n     * @example\n     * const fatOsc = new Tone.FatOscillator(\"C#3\", \"sawtooth\").toDestination().start();\n     * // use 4 sawtooth oscillators\n     * fatOsc.count = 4;\n     */\n    get count() {\n        return this._oscillators.length;\n    }\n    set count(count) {\n        assertRange(count, 1);\n        if (this._oscillators.length !== count) {\n            // dispose the previous oscillators\n            this._forEach(osc => osc.dispose());\n            this._oscillators = [];\n            for (let i = 0; i < count; i++) {\n                const osc = new Oscillator({\n                    context: this.context,\n                    volume: -6 - count * 1.1,\n                    type: this._type,\n                    phase: this._phase + (i / count) * 360,\n                    partialCount: this._partialCount,\n                    onstop: i === 0 ? () => this.onstop(this) : noOp,\n                });\n                if (this.type === \"custom\") {\n                    osc.partials = this._partials;\n                }\n                this.frequency.connect(osc.frequency);\n                this.detune.connect(osc.detune);\n                osc.detune.overridden = false;\n                osc.connect(this.output);\n                this._oscillators[i] = osc;\n            }\n            // set the spread\n            this.spread = this._spread;\n            if (this.state === \"started\") {\n                this._forEach(osc => osc.start());\n            }\n        }\n    }\n    get phase() {\n        return this._phase;\n    }\n    set phase(phase) {\n        this._phase = phase;\n        this._forEach(osc => osc.phase = phase);\n    }\n    get baseType() {\n        return this._oscillators[0].baseType;\n    }\n    set baseType(baseType) {\n        this._forEach(osc => osc.baseType = baseType);\n        this._type = this._oscillators[0].type;\n    }\n    get partials() {\n        return this._oscillators[0].partials;\n    }\n    set partials(partials) {\n        this._partials = partials;\n        this._partialCount = this._partials.length;\n        if (partials.length) {\n            this._type = \"custom\";\n            this._forEach(osc => osc.partials = partials);\n        }\n    }\n    get partialCount() {\n        return this._oscillators[0].partialCount;\n    }\n    set partialCount(partialCount) {\n        this._partialCount = partialCount;\n        this._forEach(osc => osc.partialCount = partialCount);\n        this._type = this._oscillators[0].type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this._forEach(osc => osc.dispose());\n        return this;\n    }\n}\n//# sourceMappingURL=FatOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\n/**\n * PWMOscillator modulates the width of a Tone.PulseOscillator\n * at the modulationFrequency. This has the effect of continuously\n * changing the timbre of the oscillator by altering the harmonics\n * generated.\n * @example\n * return Tone.Offline(() => {\n * \tconst pwm = new Tone.PWMOscillator(60, 0.3).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PWMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]));\n        this.name = \"PWMOscillator\";\n        this.sourceType = \"pwm\";\n        /**\n         * Scale the oscillator so it doesn't go silent\n         * at the extreme values.\n         */\n        this._scale = new Multiply({\n            context: this.context,\n            value: 2,\n        });\n        const options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n        this._pulse = new PulseOscillator({\n            context: this.context,\n            frequency: options.modulationFrequency,\n        });\n        // change the pulse oscillator type\n        this._pulse.carrierType = \"sine\";\n        this.modulationFrequency = this._pulse.frequency;\n        this._modulator = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n        });\n        this.frequency = this._modulator.frequency;\n        this.detune = this._modulator.detune;\n        // connections\n        this._modulator.chain(this._scale, this._pulse.width);\n        this._pulse.connect(this.output);\n        readOnly(this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            modulationFrequency: 0.4,\n            phase: 0,\n            type: \"pwm\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._modulator.start(time);\n        this._pulse.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._modulator.stop(time);\n        this._pulse.stop(time);\n    }\n    /**\n     * restart the oscillator\n     */\n    _restart(time) {\n        this._modulator.restart(time);\n        this._pulse.restart(time);\n    }\n    /**\n     * The type of the oscillator. Always returns \"pwm\".\n     */\n    get type() {\n        return \"pwm\";\n    }\n    /**\n     * The baseType of the oscillator. Always returns \"pwm\".\n     */\n    get baseType() {\n        return \"pwm\";\n    }\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get partials() {\n        return [];\n    }\n    /**\n     * No partials for this waveform type.\n     */\n    get partialCount() {\n        return 0;\n    }\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get phase() {\n        return this._modulator.phase;\n    }\n    set phase(phase) {\n        this._modulator.phase = phase;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._pulse.dispose();\n        this._scale.dispose();\n        this._modulator.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PWMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isNumber, isString } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { AMOscillator } from \"./AMOscillator\";\nimport { FatOscillator } from \"./FatOscillator\";\nimport { FMOscillator } from \"./FMOscillator\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\nimport { PWMOscillator } from \"./PWMOscillator\";\nconst OmniOscillatorSourceMap = {\n    am: AMOscillator,\n    fat: FatOscillator,\n    fm: FMOscillator,\n    oscillator: Oscillator,\n    pulse: PulseOscillator,\n    pwm: PWMOscillator,\n};\n/**\n * OmniOscillator aggregates all of the oscillator types into one.\n * @example\n * return Tone.Offline(() => {\n * \tconst omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\").toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class OmniOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"OmniOscillator\";\n        const options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, [\"frequency\", \"detune\"]);\n        // set the options\n        this.set(options);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), FMOscillator.getDefaults(), AMOscillator.getDefaults(), FatOscillator.getDefaults(), PulseOscillator.getDefaults(), PWMOscillator.getDefaults());\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._oscillator.start(time);\n    }\n    /**\n     * start the oscillator\n     */\n    _stop(time) {\n        this._oscillator.stop(time);\n    }\n    _restart(time) {\n        this._oscillator.restart(time);\n        return this;\n    }\n    /**\n     * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n     * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n     * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n     * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n     * when it's not.\n     * @example\n     * const omniOsc = new Tone.OmniOscillator().toDestination().start();\n     * omniOsc.type = \"pwm\";\n     * // modulationFrequency is parameter which is available\n     * // only when the type is \"pwm\".\n     * omniOsc.modulationFrequency.value = 0.5;\n     */\n    get type() {\n        let prefix = \"\";\n        if ([\"am\", \"fm\", \"fat\"].some(p => this._sourceType === p)) {\n            prefix = this._sourceType;\n        }\n        return prefix + this._oscillator.type;\n    }\n    set type(type) {\n        if (type.substr(0, 2) === \"fm\") {\n            this._createNewOscillator(\"fm\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(2);\n        }\n        else if (type.substr(0, 2) === \"am\") {\n            this._createNewOscillator(\"am\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(2);\n        }\n        else if (type.substr(0, 3) === \"fat\") {\n            this._createNewOscillator(\"fat\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(3);\n        }\n        else if (type === \"pwm\") {\n            this._createNewOscillator(\"pwm\");\n            this._oscillator = this._oscillator;\n        }\n        else if (type === \"pulse\") {\n            this._createNewOscillator(\"pulse\");\n        }\n        else {\n            this._createNewOscillator(\"oscillator\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type;\n        }\n    }\n    /**\n     * The value is an empty array when the type is not \"custom\".\n     * This is not available on \"pwm\" and \"pulse\" oscillator types.\n     * See [[Oscillator.partials]]\n     */\n    get partials() {\n        return this._oscillator.partials;\n    }\n    set partials(partials) {\n        if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n            this._oscillator.partials = partials;\n        }\n    }\n    get partialCount() {\n        return this._oscillator.partialCount;\n    }\n    set partialCount(partialCount) {\n        if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n            this._oscillator.partialCount = partialCount;\n        }\n    }\n    set(props) {\n        // make sure the type is set first\n        if (Reflect.has(props, \"type\") && props.type) {\n            this.type = props.type;\n        }\n        // then set the rest\n        super.set(props);\n        return this;\n    }\n    /**\n     * connect the oscillator to the frequency and detune signals\n     */\n    _createNewOscillator(oscType) {\n        if (oscType !== this._sourceType) {\n            this._sourceType = oscType;\n            const OscConstructor = OmniOscillatorSourceMap[oscType];\n            // short delay to avoid clicks on the change\n            const now = this.now();\n            if (this._oscillator) {\n                const oldOsc = this._oscillator;\n                oldOsc.stop(now);\n                // dispose the old one\n                this.context.setTimeout(() => oldOsc.dispose(), this.blockTime);\n            }\n            this._oscillator = new OscConstructor({\n                context: this.context,\n            });\n            this.frequency.connect(this._oscillator.frequency);\n            this.detune.connect(this._oscillator.detune);\n            this._oscillator.connect(this.output);\n            this._oscillator.onstop = () => this.onstop(this);\n            if (this.state === \"started\") {\n                this._oscillator.start(now);\n            }\n        }\n    }\n    get phase() {\n        return this._oscillator.phase;\n    }\n    set phase(phase) {\n        this._oscillator.phase = phase;\n    }\n    /**\n     * The source type of the oscillator.\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n     * console.log(omniOsc.sourceType); // 'fm'\n     */\n    get sourceType() {\n        return this._sourceType;\n    }\n    set sourceType(sType) {\n        // the basetype defaults to sine\n        let baseType = \"sine\";\n        if (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n            baseType = this._oscillator.type;\n        }\n        // set the type\n        if (sType === \"fm\") {\n            this.type = \"fm\" + baseType;\n        }\n        else if (sType === \"am\") {\n            this.type = \"am\" + baseType;\n        }\n        else if (sType === \"fat\") {\n            this.type = \"fat\" + baseType;\n        }\n        else if (sType === \"oscillator\") {\n            this.type = baseType;\n        }\n        else if (sType === \"pulse\") {\n            this.type = \"pulse\";\n        }\n        else if (sType === \"pwm\") {\n            this.type = \"pwm\";\n        }\n    }\n    _getOscType(osc, sourceType) {\n        return osc instanceof OmniOscillatorSourceMap[sourceType];\n    }\n    /**\n     * The base type of the oscillator. See [[Oscillator.baseType]]\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n     * console.log(omniOsc.sourceType, omniOsc.baseType, omniOsc.partialCount);\n     */\n    get baseType() {\n        return this._oscillator.baseType;\n    }\n    set baseType(baseType) {\n        if (!this._getOscType(this._oscillator, \"pulse\") &&\n            !this._getOscType(this._oscillator, \"pwm\") &&\n            baseType !== \"pulse\" && baseType !== \"pwm\") {\n            this._oscillator.baseType = baseType;\n        }\n    }\n    /**\n     * The width of the oscillator when sourceType === \"pulse\".\n     * See [[PWMOscillator.width]]\n     */\n    get width() {\n        if (this._getOscType(this._oscillator, \"pulse\")) {\n            return this._oscillator.width;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * The number of detuned oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get count() {\n        if (this._getOscType(this._oscillator, \"fat\")) {\n            return this._oscillator.count;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set count(count) {\n        if (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n            this._oscillator.count = count;\n        }\n    }\n    /**\n     * The detune spread between the oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get spread() {\n        if (this._getOscType(this._oscillator, \"fat\")) {\n            return this._oscillator.spread;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set spread(spread) {\n        if (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n            this._oscillator.spread = spread;\n        }\n    }\n    /**\n     * The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get modulationType() {\n        if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n            return this._oscillator.modulationType;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set modulationType(mType) {\n        if ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n            this._oscillator.modulationType = mType;\n        }\n    }\n    /**\n     * The modulation index when the sourceType === \"fm\"\n     * See [[FMOscillator]].\n     */\n    get modulationIndex() {\n        if (this._getOscType(this._oscillator, \"fm\")) {\n            return this._oscillator.modulationIndex;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get harmonicity() {\n        if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n            return this._oscillator.harmonicity;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * The modulationFrequency Signal of the oscillator when sourceType === \"pwm\"\n     * see [[PWMOscillator]]\n     * @min 0.1\n     * @max 5\n     */\n    get modulationFrequency() {\n        if (this._getOscType(this._oscillator, \"pwm\")) {\n            return this._oscillator.modulationFrequency;\n        }\n        else {\n            return undefined;\n        }\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.detune.dispose();\n        this.frequency.dispose();\n        this._oscillator.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=OmniOscillator.js.map","import { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Add a signal and a number or two signals. When no value is\n * passed into the constructor, Tone.Add will sum input and `addend`\n * If a value is passed into the constructor, the it will be added to the input.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst add = new Tone.Add(2).toDestination();\n * \tadd.addend.setValueAtTime(1, 0.2);\n * \tconst signal = new Tone.Signal(2);\n * \t// add a signal and a scalar\n * \tsignal.connect(add);\n * \tsignal.setValueAtTime(1, 0.1);\n * }, 0.5, 1);\n * @category Signal\n */\nexport class Add extends Signal {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Add.getDefaults(), arguments, [\"value\"])));\n        this.override = false;\n        this.name = \"Add\";\n        /**\n         * the summing node\n         */\n        this._sum = new Gain({ context: this.context });\n        this.input = this._sum;\n        this.output = this._sum;\n        /**\n         * The value which is added to the input signal\n         */\n        this.addend = this._param;\n        connectSeries(this._constantSource, this._sum);\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._sum.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Add.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * const scale = new Tone.Scale(50, 100);\n * const signal = new Tone.Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\nexport class Scale extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"])));\n        this.name = \"Scale\";\n        const options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n        this._mult = this.input = new Multiply({\n            context: this.context,\n            value: options.max - options.min,\n        });\n        this._add = this.output = new Add({\n            context: this.context,\n            value: options.min,\n        });\n        this._min = options.min;\n        this._max = options.max;\n        this.input.connect(this.output);\n    }\n    static getDefaults() {\n        return Object.assign(SignalOperator.getDefaults(), {\n            max: 1,\n            min: 0,\n        });\n    }\n    /**\n     * The minimum output value. This number is output when the value input value is 0.\n     */\n    get min() {\n        return this._min;\n    }\n    set min(min) {\n        this._min = min;\n        this._setRange();\n    }\n    /**\n     * The maximum output value. This number is output when the value input value is 1.\n     */\n    get max() {\n        return this._max;\n    }\n    set max(max) {\n        this._max = max;\n        this._setRange();\n    }\n    /**\n     * set the values\n     */\n    _setRange() {\n        this._add.value = this._min;\n        this._mult.value = this._max - this._min;\n    }\n    dispose() {\n        super.dispose();\n        this._add.dispose();\n        this._mult.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Scale.js.map","import { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport class Zero extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n        this.name = \"Zero\";\n        /**\n         * The gain node which connects the constant source to the output\n         */\n        this._gain = new Gain({ context: this.context });\n        /**\n         * Only outputs 0\n         */\n        this.output = this._gain;\n        /**\n         * no input node\n         */\n        this.input = undefined;\n        connect(this.context.getConstant(0), this._gain);\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        disconnect(this.context.getConstant(0), this._gain);\n        return this;\n    }\n}\n//# sourceMappingURL=Zero.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Scale } from \"../../signal/Scale\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { Zero } from \"../../signal/Zero\";\nimport { Oscillator } from \"./Oscillator\";\n/**\n * LFO stands for low frequency oscillator. LFO produces an output signal\n * which can be attached to an AudioParam or Tone.Signal\n * in order to modulate that parameter with an oscillator. The LFO can\n * also be synced to the transport to start/stop and change when the tempo changes.\n * @example\n * return Tone.Offline(() => {\n * \tconst lfo = new Tone.LFO(\"4n\", 400, 4000).start().toDestination();\n * }, 0.5, 1);\n * @category Source\n */\nexport class LFO extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]));\n        this.name = \"LFO\";\n        /**\n         * The value that the LFO outputs when it's stopped\n         */\n        this._stoppedValue = 0;\n        /**\n         * A private placeholder for the units\n         */\n        this._units = \"number\";\n        /**\n         * If the input value is converted using the [[units]]\n         */\n        this.convert = true;\n        /**\n         * Private methods borrowed from Param\n         */\n        // @ts-ignore\n        this._fromType = Param.prototype._fromType;\n        // @ts-ignore\n        this._toType = Param.prototype._toType;\n        // @ts-ignore\n        this._is = Param.prototype._is;\n        // @ts-ignore\n        this._clampValue = Param.prototype._clampValue;\n        const options = optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]);\n        // @ts-ignore\n        this._oscillator = new Oscillator({\n            context: this.context,\n            frequency: options.frequency,\n            type: options.type,\n        });\n        this.frequency = this._oscillator.frequency;\n        this._amplitudeGain = new Gain({\n            context: this.context,\n            gain: options.amplitude,\n            units: \"normalRange\",\n        });\n        this.amplitude = this._amplitudeGain.gain;\n        this._stoppedSignal = new Signal({\n            context: this.context,\n            units: \"audioRange\",\n            value: 0,\n        });\n        this._zeros = new Zero({ context: this.context });\n        this._a2g = new AudioToGain({ context: this.context });\n        this._scaler = this.output = new Scale({\n            context: this.context,\n            max: options.max,\n            min: options.min,\n        });\n        this.units = options.units;\n        this.min = options.min;\n        this.max = options.max;\n        // connect it up\n        this._oscillator.chain(this._a2g, this._amplitudeGain, this._scaler);\n        this._zeros.connect(this._a2g);\n        this._stoppedSignal.connect(this._a2g);\n        readOnly(this, [\"amplitude\", \"frequency\"]);\n        this.phase = options.phase;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            amplitude: 1,\n            frequency: \"4n\",\n            max: 1,\n            min: 0,\n            phase: 0,\n            type: \"sine\",\n            units: \"number\",\n        });\n    }\n    /**\n     * Start the LFO.\n     * @param time The time the LFO will start\n     */\n    start(time) {\n        time = this.toSeconds(time);\n        this._stoppedSignal.setValueAtTime(0, time);\n        this._oscillator.start(time);\n        return this;\n    }\n    /**\n     * Stop the LFO.\n     * @param  time The time the LFO will stop\n     */\n    stop(time) {\n        time = this.toSeconds(time);\n        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n        this._oscillator.stop(time);\n        return this;\n    }\n    /**\n     * Sync the start/stop/pause to the transport\n     * and the frequency to the bpm of the transport\n     * @example\n     * const lfo = new Tone.LFO(\"8n\");\n     * lfo.sync().start(0);\n     * // the rate of the LFO will always be an eighth note, even as the tempo changes\n     */\n    sync() {\n        this._oscillator.sync();\n        this._oscillator.syncFrequency();\n        return this;\n    }\n    /**\n     * unsync the LFO from transport control\n     */\n    unsync() {\n        this._oscillator.unsync();\n        this._oscillator.unsyncFrequency();\n        return this;\n    }\n    /**\n     * The minimum output of the LFO.\n     */\n    get min() {\n        return this._toType(this._scaler.min);\n    }\n    set min(min) {\n        min = this._fromType(min);\n        this._scaler.min = min;\n    }\n    /**\n     * The maximum output of the LFO.\n     */\n    get max() {\n        return this._toType(this._scaler.max);\n    }\n    set max(max) {\n        max = this._fromType(max);\n        this._scaler.max = max;\n    }\n    /**\n     * The type of the oscillator: See [[Oscillator.type]]\n     */\n    get type() {\n        return this._oscillator.type;\n    }\n    set type(type) {\n        this._oscillator.type = type;\n        this._stoppedValue = this._oscillator.getInitialValue();\n        this._stoppedSignal.value = this._stoppedValue;\n    }\n    /**\n     * The phase of the LFO.\n     */\n    get phase() {\n        return this._oscillator.phase;\n    }\n    set phase(phase) {\n        this._oscillator.phase = phase;\n        this._stoppedValue = this._oscillator.getInitialValue();\n        this._stoppedSignal.value = this._stoppedValue;\n    }\n    /**\n     * The output units of the LFO.\n     */\n    get units() {\n        return this._units;\n    }\n    set units(val) {\n        const currentMin = this.min;\n        const currentMax = this.max;\n        // convert the min and the max\n        this._units = val;\n        this.min = currentMin;\n        this.max = currentMax;\n    }\n    /**\n     * Returns the playback state of the source, either \"started\" or \"stopped\".\n     */\n    get state() {\n        return this._oscillator.state;\n    }\n    /**\n     * @param node the destination to connect to\n     * @param outputNum the optional output number\n     * @param inputNum the input number\n     */\n    connect(node, outputNum, inputNum) {\n        if (node instanceof Param || node instanceof Signal) {\n            this.convert = node.convert;\n            this.units = node.units;\n        }\n        connectSignal(this, node, outputNum, inputNum);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._oscillator.dispose();\n        this._stoppedSignal.dispose();\n        this._zeros.dispose();\n        this._scaler.dispose();\n        this._a2g.dispose();\n        this._amplitudeGain.dispose();\n        this.amplitude.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=LFO.js.map","import { assertRange } from \"./Debug\";\n/**\n * Assert that the number is in the given range.\n */\nexport function range(min, max = Infinity) {\n    const valueMap = new WeakMap();\n    return function (target, propertyKey) {\n        Reflect.defineProperty(target, propertyKey, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return valueMap.get(this);\n            },\n            set: function (newValue) {\n                assertRange(newValue, min, max);\n                valueMap.set(this, newValue);\n            }\n        });\n    };\n}\n/**\n * Convert the time to seconds and assert that the time is in between the two\n * values when being set.\n */\nexport function timeRange(min, max = Infinity) {\n    const valueMap = new WeakMap();\n    return function (target, propertyKey) {\n        Reflect.defineProperty(target, propertyKey, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return valueMap.get(this);\n            },\n            set: function (newValue) {\n                assertRange(this.toSeconds(newValue), min, max);\n                valueMap.set(this, newValue);\n            }\n        });\n    };\n}\n//# sourceMappingURL=Decorator.js.map","import { __awaiter, __decorate } from \"tslib\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isUndef } from \"../../core/util/TypeCheck\";\nimport { Source } from \"../Source\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { timeRange } from \"../../core/util/Decorator\";\n/**\n * Player is an audio file player with start, loop, and stop functions.\n * @example\n * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gong_1.mp3\").toDestination();\n * // play as soon as the buffer is loaded\n * player.autostart = true;\n * @category Source\n */\nexport class Player extends Source {\n    constructor() {\n        super(optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]));\n        this.name = \"Player\";\n        /**\n         * All of the active buffer source nodes\n         */\n        this._activeSources = new Set();\n        const options = optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]);\n        this._buffer = new ToneAudioBuffer({\n            onload: this._onload.bind(this, options.onload),\n            onerror: options.onerror,\n            reverse: options.reverse,\n            url: options.url,\n        });\n        this.autostart = options.autostart;\n        this._loop = options.loop;\n        this._loopStart = options.loopStart;\n        this._loopEnd = options.loopEnd;\n        this._playbackRate = options.playbackRate;\n        this.fadeIn = options.fadeIn;\n        this.fadeOut = options.fadeOut;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            autostart: false,\n            fadeIn: 0,\n            fadeOut: 0,\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            onerror: noOp,\n            playbackRate: 1,\n            reverse: false,\n        });\n    }\n    /**\n     * Load the audio file as an audio buffer.\n     * Decodes the audio asynchronously and invokes\n     * the callback once the audio buffer loads.\n     * Note: this does not need to be called if a url\n     * was passed in to the constructor. Only use this\n     * if you want to manually load a new url.\n     * @param url The url of the buffer to load. Filetype support depends on the browser.\n     */\n    load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._buffer.load(url);\n            this._onload();\n            return this;\n        });\n    }\n    /**\n     * Internal callback when the buffer is loaded.\n     */\n    _onload(callback = noOp) {\n        callback();\n        if (this.autostart) {\n            this.start();\n        }\n    }\n    /**\n     * Internal callback when the buffer is done playing.\n     */\n    _onSourceEnd(source) {\n        // invoke the onstop function\n        this.onstop(this);\n        // delete the source from the active sources\n        this._activeSources.delete(source);\n        if (this._activeSources.size === 0 && !this._synced &&\n            this._state.getValueAtTime(this.now()) === \"started\") {\n            this._state.setStateAtTime(\"stopped\", this.now());\n        }\n    }\n    /**\n     * Play the buffer at the given startTime. Optionally add an offset\n     * and/or duration which will play the buffer from a position\n     * within the buffer for the given duration.\n     *\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n     */\n    start(time, offset, duration) {\n        super.start(time, offset, duration);\n        return this;\n    }\n    /**\n     * Internal start method\n     */\n    _start(startTime, offset, duration) {\n        // if it's a loop the default offset is the loopStart point\n        if (this._loop) {\n            offset = defaultArg(offset, this._loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // compute the values in seconds\n        let computedOffset = this.toSeconds(offset);\n        // if it's synced, it should factor in the playback rate for computing the offset\n        if (this._synced) {\n            computedOffset *= this._playbackRate;\n        }\n        // compute the duration which is either the passed in duration of the buffer.duration - offset\n        const origDuration = duration;\n        duration = defaultArg(duration, Math.max(this._buffer.duration - computedOffset, 0));\n        let computedDuration = this.toSeconds(duration);\n        // scale it by the playback rate\n        computedDuration = computedDuration / this._playbackRate;\n        // get the start time\n        startTime = this.toSeconds(startTime);\n        // make the source\n        const source = new ToneBufferSource({\n            url: this._buffer,\n            context: this.context,\n            fadeIn: this.fadeIn,\n            fadeOut: this.fadeOut,\n            loop: this._loop,\n            loopEnd: this._loopEnd,\n            loopStart: this._loopStart,\n            onended: this._onSourceEnd.bind(this),\n            playbackRate: this._playbackRate,\n        }).connect(this.output);\n        // set the looping properties\n        if (!this._loop && !this._synced) {\n            // cancel the previous stop\n            this._state.cancel(startTime + computedDuration);\n            // if it's not looping, set the state change at the end of the sample\n            this._state.setStateAtTime(\"stopped\", startTime + computedDuration, {\n                implicitEnd: true,\n            });\n        }\n        // add it to the array of active sources\n        this._activeSources.add(source);\n        // start it\n        if (this._loop && isUndef(origDuration)) {\n            source.start(startTime, computedOffset);\n        }\n        else {\n            // subtract the fade out time\n            source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));\n        }\n    }\n    /**\n     * Stop playback.\n     */\n    _stop(time) {\n        const computedTime = this.toSeconds(time);\n        this._activeSources.forEach(source => source.stop(computedTime));\n    }\n    /**\n     * Stop and then restart the player from the beginning (or offset)\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given,\n     * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n     */\n    restart(time, offset, duration) {\n        super.restart(time, offset, duration);\n        return this;\n    }\n    _restart(time, offset, duration) {\n        this._stop(time);\n        this._start(time, offset, duration);\n    }\n    /**\n     * Seek to a specific time in the player's buffer. If the\n     * source is no longer playing at that time, it will stop.\n     * @param offset The time to seek to.\n     * @param when The time for the seek event to occur.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gurgling_theremin_1.mp3\", () => {\n     * \tplayer.start();\n     * \t// seek to the offset in 1 second from now\n     * \tplayer.seek(0.4, \"+1\");\n     * }).toDestination();\n     */\n    seek(offset, when) {\n        const computedTime = this.toSeconds(when);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            const computedOffset = this.toSeconds(offset);\n            // if it's currently playing, stop it\n            this._stop(computedTime);\n            // restart it at the given time\n            this._start(computedTime, computedOffset);\n        }\n        return this;\n    }\n    /**\n     * Set the loop start and end. Will only loop if loop is set to true.\n     * @param loopStart The loop start time\n     * @param loopEnd The loop end time\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/malevoices_aa2_F3.mp3\").toDestination();\n     * // loop between the given points\n     * player.setLoopPoints(0.2, 0.3);\n     * player.loop = true;\n     * player.autostart = true;\n     */\n    setLoopPoints(loopStart, loopEnd) {\n        this.loopStart = loopStart;\n        this.loopEnd = loopEnd;\n        return this;\n    }\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get loopStart() {\n        return this._loopStart;\n    }\n    set loopStart(loopStart) {\n        this._loopStart = loopStart;\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(loopStart), 0, this.buffer.duration);\n        }\n        // get the current source\n        this._activeSources.forEach(source => {\n            source.loopStart = loopStart;\n        });\n    }\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get loopEnd() {\n        return this._loopEnd;\n    }\n    set loopEnd(loopEnd) {\n        this._loopEnd = loopEnd;\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);\n        }\n        // get the current source\n        this._activeSources.forEach(source => {\n            source.loopEnd = loopEnd;\n        });\n    }\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get buffer() {\n        return this._buffer;\n    }\n    set buffer(buffer) {\n        this._buffer.set(buffer);\n    }\n    /**\n     * If the buffer should loop once it's over.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/breakbeat.mp3\").toDestination();\n     * player.loop = true;\n     * player.autostart = true;\n     */\n    get loop() {\n        return this._loop;\n    }\n    set loop(loop) {\n        // if no change, do nothing\n        if (this._loop === loop) {\n            return;\n        }\n        this._loop = loop;\n        // set the loop of all of the sources\n        this._activeSources.forEach(source => {\n            source.loop = loop;\n        });\n        if (loop) {\n            // remove the next stopEvent\n            const stopEvent = this._state.getNextState(\"stopped\", this.now());\n            if (stopEvent) {\n                this._state.cancel(stopEvent.time);\n            }\n        }\n    }\n    /**\n     * Normal speed is 1. The pitch will change with the playback rate.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/femalevoices_aa2_A5.mp3\").toDestination();\n     * // play at 1/4 speed\n     * player.playbackRate = 0.25;\n     * // play as soon as the buffer is loaded\n     * player.autostart = true;\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        this._playbackRate = rate;\n        const now = this.now();\n        // cancel the stop event since it's at a different time now\n        const stopEvent = this._state.getNextState(\"stopped\", now);\n        if (stopEvent && stopEvent.implicitEnd) {\n            this._state.cancel(stopEvent.time);\n            this._activeSources.forEach(source => source.cancelStop());\n        }\n        // set all the sources\n        this._activeSources.forEach(source => {\n            source.playbackRate.setValueAtTime(rate, now);\n        });\n    }\n    /**\n     * If the buffer should be reversed\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/chime_1.mp3\").toDestination();\n     * player.autostart = true;\n     * player.reverse = true;\n     */\n    get reverse() {\n        return this._buffer.reverse;\n    }\n    set reverse(rev) {\n        this._buffer.reverse = rev;\n    }\n    /**\n     * If the buffer is loaded\n     */\n    get loaded() {\n        return this._buffer.loaded;\n    }\n    dispose() {\n        super.dispose();\n        // disconnect all of the players\n        this._activeSources.forEach(source => source.dispose());\n        this._activeSources.clear();\n        this._buffer.dispose();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Player.prototype, \"fadeIn\", void 0);\n__decorate([\n    timeRange(0)\n], Player.prototype, \"fadeOut\", void 0);\n//# sourceMappingURL=Player.js.map","import { Volume } from \"../../component/channel/Volume\";\nimport { ToneAudioBuffers } from \"../../core/context/ToneAudioBuffers\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { assert } from \"../../core/util/Debug\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Source } from \"../Source\";\nimport { Player } from \"./Player\";\n/**\n * Players combines multiple [[Player]] objects.\n * @category Source\n */\nexport class Players extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\"));\n        this.name = \"Players\";\n        /**\n         * Players has no input.\n         */\n        this.input = undefined;\n        /**\n         * The container of all of the players\n         */\n        this._players = new Map();\n        const options = optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\");\n        /**\n         * The output volume node\n         */\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n        this._buffers = new ToneAudioBuffers({\n            urls: options.urls,\n            onload: options.onload,\n            baseUrl: options.baseUrl,\n            onerror: options.onerror\n        });\n        // mute initially\n        this.mute = options.mute;\n        this._fadeIn = options.fadeIn;\n        this._fadeOut = options.fadeOut;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            baseUrl: \"\",\n            fadeIn: 0,\n            fadeOut: 0,\n            mute: false,\n            onload: noOp,\n            onerror: noOp,\n            urls: {},\n            volume: 0,\n        });\n    }\n    /**\n     * Mute the output.\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    /**\n     * The fadeIn time of the envelope applied to the source.\n     */\n    get fadeIn() {\n        return this._fadeIn;\n    }\n    set fadeIn(fadeIn) {\n        this._fadeIn = fadeIn;\n        this._players.forEach(player => {\n            player.fadeIn = fadeIn;\n        });\n    }\n    /**\n     * The fadeOut time of the each of the sources.\n     */\n    get fadeOut() {\n        return this._fadeOut;\n    }\n    set fadeOut(fadeOut) {\n        this._fadeOut = fadeOut;\n        this._players.forEach(player => {\n            player.fadeOut = fadeOut;\n        });\n    }\n    /**\n     * The state of the players object. Returns \"started\" if any of the players are playing.\n     */\n    get state() {\n        const playing = Array.from(this._players).some(([_, player]) => player.state === \"started\");\n        return playing ? \"started\" : \"stopped\";\n    }\n    /**\n     * True if the buffers object has a buffer by that name.\n     * @param name  The key or index of the buffer.\n     */\n    has(name) {\n        return this._buffers.has(name);\n    }\n    /**\n     * Get a player by name.\n     * @param  name  The players name as defined in the constructor object or `add` method.\n     */\n    player(name) {\n        assert(this.has(name), `No Player with the name ${name} exists on this object`);\n        if (!this._players.has(name)) {\n            const player = new Player({\n                context: this.context,\n                fadeIn: this._fadeIn,\n                fadeOut: this._fadeOut,\n                url: this._buffers.get(name),\n            }).connect(this.output);\n            this._players.set(name, player);\n        }\n        return this._players.get(name);\n    }\n    /**\n     * If all the buffers are loaded or not\n     */\n    get loaded() {\n        return this._buffers.loaded;\n    }\n    /**\n     * Add a player by name and url to the Players\n     * @param  name A unique name to give the player\n     * @param  url  Either the url of the bufer or a buffer which will be added with the given name.\n     * @param callback  The callback to invoke when the url is loaded.\n     */\n    add(name, url, callback) {\n        assert(!this._buffers.has(name), \"A buffer with that name already exists on this object\");\n        this._buffers.add(name, url, callback);\n        return this;\n    }\n    /**\n     * Stop all of the players at the given time\n     * @param time The time to stop all of the players.\n     */\n    stopAll(time) {\n        this._players.forEach(player => player.stop(time));\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._volume.dispose();\n        this.volume.dispose();\n        this._players.forEach(player => player.dispose());\n        this._buffers.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Players.js.map","import { Source } from \"../Source\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Clock } from \"../../core/clock/Clock\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { intervalToFrequencyRatio } from \"../../core/type/Conversions\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n * Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the\n * amount of time each small chunk of audio is played for and the overlap is the\n * amount of crossfading transition time between successive grains.\n * @category Source\n */\nexport class GrainPlayer extends Source {\n    constructor() {\n        super(optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"]));\n        this.name = \"GrainPlayer\";\n        /**\n         * Internal loopStart value\n         */\n        this._loopStart = 0;\n        /**\n         * Internal loopStart value\n         */\n        this._loopEnd = 0;\n        /**\n         * All of the currently playing BufferSources\n         */\n        this._activeSources = [];\n        const options = optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"]);\n        this.buffer = new ToneAudioBuffer({\n            onload: options.onload,\n            onerror: options.onerror,\n            reverse: options.reverse,\n            url: options.url,\n        });\n        this._clock = new Clock({\n            context: this.context,\n            callback: this._tick.bind(this),\n            frequency: 1 / options.grainSize\n        });\n        this._playbackRate = options.playbackRate;\n        this._grainSize = options.grainSize;\n        this._overlap = options.overlap;\n        this.detune = options.detune;\n        // setup\n        this.overlap = options.overlap;\n        this.loop = options.loop;\n        this.playbackRate = options.playbackRate;\n        this.grainSize = options.grainSize;\n        this.loopStart = options.loopStart;\n        this.loopEnd = options.loopEnd;\n        this.reverse = options.reverse;\n        this._clock.on(\"stop\", this._onstop.bind(this));\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            onload: noOp,\n            onerror: noOp,\n            overlap: 0.1,\n            grainSize: 0.2,\n            playbackRate: 1,\n            detune: 0,\n            loop: false,\n            loopStart: 0,\n            loopEnd: 0,\n            reverse: false\n        });\n    }\n    /**\n     * Internal start method\n     */\n    _start(time, offset, duration) {\n        offset = defaultArg(offset, 0);\n        offset = this.toSeconds(offset);\n        time = this.toSeconds(time);\n        const grainSize = 1 / this._clock.frequency.getValueAtTime(time);\n        this._clock.start(time, offset / grainSize);\n        if (duration) {\n            this.stop(time + this.toSeconds(duration));\n        }\n    }\n    /**\n     * Stop and then restart the player from the beginning (or offset)\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given,\n     * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n     */\n    restart(time, offset, duration) {\n        super.restart(time, offset, duration);\n        return this;\n    }\n    _restart(time, offset, duration) {\n        this._stop(time);\n        this._start(time, offset, duration);\n    }\n    /**\n     * Internal stop method\n     */\n    _stop(time) {\n        this._clock.stop(time);\n    }\n    /**\n     * Invoked when the clock is stopped\n     */\n    _onstop(time) {\n        // stop the players\n        this._activeSources.forEach((source) => {\n            source.fadeOut = 0;\n            source.stop(time);\n        });\n        this.onstop(this);\n    }\n    /**\n     * Invoked on each clock tick. scheduled a new grain at this time.\n     */\n    _tick(time) {\n        // check if it should stop looping\n        const ticks = this._clock.getTicksAtTime(time);\n        const offset = ticks * this._grainSize;\n        this.log(\"offset\", offset);\n        if (!this.loop && offset > this.buffer.duration) {\n            this.stop(time);\n            return;\n        }\n        // at the beginning of the file, the fade in should be 0\n        const fadeIn = offset < this._overlap ? 0 : this._overlap;\n        // create a buffer source\n        const source = new ToneBufferSource({\n            context: this.context,\n            url: this.buffer,\n            fadeIn: fadeIn,\n            fadeOut: this._overlap,\n            loop: this.loop,\n            loopStart: this._loopStart,\n            loopEnd: this._loopEnd,\n            // compute the playbackRate based on the detune\n            playbackRate: intervalToFrequencyRatio(this.detune / 100)\n        }).connect(this.output);\n        source.start(time, this._grainSize * ticks);\n        source.stop(time + this._grainSize / this.playbackRate);\n        // add it to the active sources\n        this._activeSources.push(source);\n        // remove it when it's done\n        source.onended = () => {\n            const index = this._activeSources.indexOf(source);\n            if (index !== -1) {\n                this._activeSources.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * The playback rate of the sample\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        assertRange(rate, 0.001);\n        this._playbackRate = rate;\n        this.grainSize = this._grainSize;\n    }\n    /**\n     * The loop start time.\n     */\n    get loopStart() {\n        return this._loopStart;\n    }\n    set loopStart(time) {\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(time), 0, this.buffer.duration);\n        }\n        this._loopStart = this.toSeconds(time);\n    }\n    /**\n     * The loop end time.\n     */\n    get loopEnd() {\n        return this._loopEnd;\n    }\n    set loopEnd(time) {\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(time), 0, this.buffer.duration);\n        }\n        this._loopEnd = this.toSeconds(time);\n    }\n    /**\n     * The direction the buffer should play in\n     */\n    get reverse() {\n        return this.buffer.reverse;\n    }\n    set reverse(rev) {\n        this.buffer.reverse = rev;\n    }\n    /**\n     * The size of each chunk of audio that the\n     * buffer is chopped into and played back at.\n     */\n    get grainSize() {\n        return this._grainSize;\n    }\n    set grainSize(size) {\n        this._grainSize = this.toSeconds(size);\n        this._clock.frequency.setValueAtTime(this._playbackRate / this._grainSize, this.now());\n    }\n    /**\n     * The duration of the cross-fade between successive grains.\n     */\n    get overlap() {\n        return this._overlap;\n    }\n    set overlap(time) {\n        const computedTime = this.toSeconds(time);\n        assertRange(computedTime, 0);\n        this._overlap = computedTime;\n    }\n    /**\n     * If all the buffer is loaded\n     */\n    get loaded() {\n        return this.buffer.loaded;\n    }\n    dispose() {\n        super.dispose();\n        this.buffer.dispose();\n        this._clock.dispose();\n        this._activeSources.forEach((source) => source.dispose());\n        return this;\n    }\n}\n//# sourceMappingURL=GrainPlayer.js.map","import { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * Return the absolute value of an incoming signal.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst abs = new Tone.Abs().toDestination();\n * \tconst signal = new Tone.Signal(1);\n * \tsignal.rampTo(-1, 0.5);\n * \tsignal.connect(abs);\n * }, 0.5, 1);\n * @category Signal\n */\nexport class Abs extends SignalOperator {\n    constructor() {\n        super(...arguments);\n        this.name = \"Abs\";\n        /**\n         * The node which converts the audio ranges\n         */\n        this._abs = new WaveShaper({\n            context: this.context,\n            mapping: val => {\n                if (Math.abs(val) < 0.001) {\n                    return 0;\n                }\n                else {\n                    return Math.abs(val);\n                }\n            },\n        });\n        /**\n         * The AudioRange input [-1, 1]\n         */\n        this.input = this._abs;\n        /**\n         * The output range [0, 1]\n         */\n        this.output = this._abs;\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._abs.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Abs.js.map","import { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See [[AudioToGain]].\n * @category Signal\n */\nexport class GainToAudio extends SignalOperator {\n    constructor() {\n        super(...arguments);\n        this.name = \"GainToAudio\";\n        /**\n         * The node which converts the audio ranges\n         */\n        this._norm = new WaveShaper({\n            context: this.context,\n            mapping: x => Math.abs(x) * 2 - 1,\n        });\n        /**\n         * The NormalRange input [0, 1]\n         */\n        this.input = this._norm;\n        /**\n         * The AudioRange output [-1, 1]\n         */\n        this.output = this._norm;\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._norm.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=GainToAudio.js.map","import { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Negate the incoming signal. i.e. an input signal of 10 will output -10\n *\n * @example\n * const neg = new Tone.Negate();\n * const sig = new Tone.Signal(-2).connect(neg);\n * // output of neg is positive 2.\n * @category Signal\n */\nexport class Negate extends SignalOperator {\n    constructor() {\n        super(...arguments);\n        this.name = \"Negate\";\n        /**\n         * negation is done by multiplying by -1\n         */\n        this._multiply = new Multiply({\n            context: this.context,\n            value: -1,\n        });\n        /**\n         * The input and output are equal to the multiply node\n         */\n        this.input = this._multiply;\n        this.output = this._multiply;\n    }\n    /**\n     * clean up\n     * @returns {Negate} this\n     */\n    dispose() {\n        super.dispose();\n        this._multiply.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Negate.js.map","import { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\n/**\n * Subtract the signal connected to the input is subtracted from the signal connected\n * The subtrahend.\n *\n * @example\n * // subtract a scalar from a signal\n * const sub = new Tone.Subtract(1);\n * const sig = new Tone.Signal(4).connect(sub);\n * // the output of sub is 3.\n * @example\n * // subtract two signals\n * const sub = new Tone.Subtract();\n * const sigA = new Tone.Signal(10);\n * const sigB = new Tone.Signal(2.5);\n * sigA.connect(sub);\n * sigB.connect(sub.subtrahend);\n * // output of sub is 7.5\n * @category Signal\n */\nexport class Subtract extends Signal {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Subtract.getDefaults(), arguments, [\"value\"])));\n        this.override = false;\n        this.name = \"Subtract\";\n        /**\n         * the summing node\n         */\n        this._sum = new Gain({ context: this.context });\n        this.input = this._sum;\n        this.output = this._sum;\n        /**\n         * Negate the input of the second input before connecting it to the summing node.\n         */\n        this._neg = new Negate({ context: this.context });\n        /**\n         * The value which is subtracted from the main signal\n         */\n        this.subtrahend = this._param;\n        connectSeries(this._constantSource, this._neg, this._sum);\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._neg.dispose();\n        this._sum.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Subtract.js.map","import { SignalOperator } from \"./SignalOperator\";\nimport { Multiply } from \"./Multiply\";\nimport { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * GreaterThanZero outputs 1 when the input is strictly greater than zero\n * @example\n * return Tone.Offline(() => {\n * \tconst gt0 = new Tone.GreaterThanZero().toDestination();\n * \tconst sig = new Tone.Signal(0.5).connect(gt0);\n * \tsig.setValueAtTime(-1, 0.05);\n * }, 0.1, 1);\n */\nexport class GreaterThanZero extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(), arguments)));\n        this.name = \"GreaterThanZero\";\n        this._thresh = this.output = new WaveShaper({\n            context: this.context,\n            length: 127,\n            mapping: (val) => {\n                if (val <= 0) {\n                    return 0;\n                }\n                else {\n                    return 1;\n                }\n            },\n        });\n        this._scale = this.input = new Multiply({\n            context: this.context,\n            value: 10000\n        });\n        // connections\n        this._scale.connect(this._thresh);\n    }\n    dispose() {\n        super.dispose();\n        this._scale.dispose();\n        this._thresh.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=GreaterThanZero.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Subtract } from \"./Subtract\";\nimport { Signal } from \"./Signal\";\nimport { GreaterThanZero } from \"./GreaterThanZero\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Output 1 if the signal is greater than the value, otherwise outputs 0.\n * can compare two signals or a signal and a number.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst gt = new Tone.GreaterThan(2).toDestination();\n * \tconst sig = new Tone.Signal(4).connect(gt);\n * }, 0.1, 1);\n */\nexport class GreaterThan extends Signal {\n    constructor() {\n        super(Object.assign(optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"])));\n        this.name = \"GreaterThan\";\n        this.override = false;\n        const options = optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]);\n        this._subtract = this.input = new Subtract({\n            context: this.context,\n            value: options.value\n        });\n        this._gtz = this.output = new GreaterThanZero({ context: this.context });\n        this.comparator = this._param = this._subtract.subtrahend;\n        readOnly(this, \"comparator\");\n        // connect\n        this._subtract.connect(this._gtz);\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._gtz.dispose();\n        this._subtract.dispose();\n        this.comparator.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=GreaterThan.js.map","import { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Pow applies an exponent to the incoming signal. The incoming signal must be AudioRange [-1, 1]\n *\n * @example\n * const pow = new Tone.Pow(2);\n * const sig = new Tone.Signal(0.5).connect(pow);\n * // output of pow is 0.25.\n * @category Signal\n */\nexport class Pow extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"])));\n        this.name = \"Pow\";\n        const options = optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"]);\n        this._exponentScaler = this.input = this.output = new WaveShaper({\n            context: this.context,\n            mapping: this._expFunc(options.value),\n            length: 8192,\n        });\n        this._exponent = options.value;\n    }\n    static getDefaults() {\n        return Object.assign(SignalOperator.getDefaults(), {\n            value: 1,\n        });\n    }\n    /**\n     * the function which maps the waveshaper\n     * @param exponent exponent value\n     */\n    _expFunc(exponent) {\n        return (val) => {\n            return Math.pow(Math.abs(val), exponent);\n        };\n    }\n    /**\n     * The value of the exponent.\n     */\n    get value() {\n        return this._exponent;\n    }\n    set value(exponent) {\n        this._exponent = exponent;\n        this._exponentScaler.setMap(this._expFunc(this._exponent));\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._exponentScaler.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Pow.js.map","import { Scale } from \"./Scale\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Pow } from \"./Pow\";\n/**\n * Performs an exponential scaling on an input signal.\n * Scales a NormalRange value [0,1] exponentially\n * to the output range of outputMin to outputMax.\n * @example\n * const scaleExp = new Tone.ScaleExp(0, 100, 2);\n * const signal = new Tone.Signal(0.5).connect(scaleExp);\n */\nexport class ScaleExp extends Scale {\n    constructor() {\n        super(Object.assign(optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"])));\n        this.name = \"ScaleExp\";\n        const options = optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]);\n        this.input = this._exp = new Pow({\n            context: this.context,\n            value: options.exponent,\n        });\n        this._exp.connect(this._mult);\n    }\n    static getDefaults() {\n        return Object.assign(Scale.getDefaults(), {\n            exponent: 1,\n        });\n    }\n    /**\n     * Instead of interpolating linearly between the [[min]] and\n     * [[max]] values, setting the exponent will interpolate between\n     * the two values with an exponential curve.\n     */\n    get exponent() {\n        return this._exp.value;\n    }\n    set exponent(exp) {\n        this._exp.value = exp;\n    }\n    dispose() {\n        super.dispose();\n        this._exp.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ScaleExp.js.map","import { Signal } from \"./Signal\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * Adds the ability to synchronize the signal to the [[Transport]]\n */\nexport class SyncedSignal extends Signal {\n    constructor() {\n        super(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n        this.name = \"SyncedSignal\";\n        /**\n         * Don't override when something is connected to the input\n         */\n        this.override = false;\n        const options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n        this._lastVal = options.value;\n        this._synced = this.context.transport.scheduleRepeat(this._onTick.bind(this), \"1i\");\n        this._syncedCallback = this._anchorValue.bind(this);\n        this.context.transport.on(\"start\", this._syncedCallback);\n        this.context.transport.on(\"pause\", this._syncedCallback);\n        this.context.transport.on(\"stop\", this._syncedCallback);\n        // disconnect the constant source from the output and replace it with another one\n        this._constantSource.disconnect();\n        this._constantSource.stop(0);\n        // create a new one\n        this._constantSource = this.output = new ToneConstantSource({\n            context: this.context,\n            offset: options.value,\n            units: options.units,\n        }).start(0);\n        this.setValueAtTime(options.value, 0);\n    }\n    /**\n     * Callback which is invoked every tick.\n     */\n    _onTick(time) {\n        const val = super.getValueAtTime(this.context.transport.seconds);\n        // approximate ramp curves with linear ramps\n        if (this._lastVal !== val) {\n            this._lastVal = val;\n            this._constantSource.offset.setValueAtTime(val, time);\n        }\n    }\n    /**\n     * Anchor the value at the start and stop of the Transport\n     */\n    _anchorValue(time) {\n        const val = super.getValueAtTime(this.context.transport.seconds);\n        this._lastVal = val;\n        this._constantSource.offset.cancelAndHoldAtTime(time);\n        this._constantSource.offset.setValueAtTime(val, time);\n    }\n    getValueAtTime(time) {\n        const computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        return super.getValueAtTime(computedTime);\n    }\n    setValueAtTime(value, time) {\n        const computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        super.setValueAtTime(value, computedTime);\n        return this;\n    }\n    linearRampToValueAtTime(value, time) {\n        const computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        super.linearRampToValueAtTime(value, computedTime);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, time) {\n        const computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        super.exponentialRampToValueAtTime(value, computedTime);\n        return this;\n    }\n    setTargetAtTime(value, startTime, timeConstant) {\n        const computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        super.setTargetAtTime(value, computedTime, timeConstant);\n        return this;\n    }\n    cancelScheduledValues(startTime) {\n        const computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        super.cancelScheduledValues(computedTime);\n        return this;\n    }\n    setValueCurveAtTime(values, startTime, duration, scaling) {\n        const computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        duration = this.toSeconds(duration);\n        super.setValueCurveAtTime(values, computedTime, duration, scaling);\n        return this;\n    }\n    cancelAndHoldAtTime(time) {\n        const computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        super.cancelAndHoldAtTime(computedTime);\n        return this;\n    }\n    setRampPoint(time) {\n        const computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        super.setRampPoint(computedTime);\n        return this;\n    }\n    exponentialRampTo(value, rampTime, startTime) {\n        const computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        super.exponentialRampTo(value, rampTime, computedTime);\n        return this;\n    }\n    linearRampTo(value, rampTime, startTime) {\n        const computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        super.linearRampTo(value, rampTime, computedTime);\n        return this;\n    }\n    targetRampTo(value, rampTime, startTime) {\n        const computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        super.targetRampTo(value, rampTime, computedTime);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this.context.transport.clear(this._synced);\n        this.context.transport.off(\"start\", this._syncedCallback);\n        this.context.transport.off(\"pause\", this._syncedCallback);\n        this.context.transport.off(\"stop\", this._syncedCallback);\n        this._constantSource.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=SyncedSignal.js.map","import { __awaiter, __decorate } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { isArray, isObject, isString } from \"../../core/util/TypeCheck\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\nimport { assert } from \"../../core/util/Debug\";\nimport { range, timeRange } from \"../../core/util/Decorator\";\n/**\n * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n * envelope generator. Envelope outputs a signal which\n * can be connected to an AudioParam or Tone.Signal.\n * ```\n *           /\\\n *          /  \\\n *         /    \\\n *        /      \\\n *       /        \\___________\n *      /                     \\\n *     /                       \\\n *    /                         \\\n *   /                           \\\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst env = new Tone.Envelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 0.5,\n * \t\trelease: 0.8,\n * \t}).toDestination();\n * \tenv.triggerAttackRelease(0.5);\n * }, 1.5, 1);\n * @category Component\n */\nexport class Envelope extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n        this.name = \"Envelope\";\n        /**\n         * the signal which is output.\n         */\n        this._sig = new Signal({\n            context: this.context,\n            value: 0,\n        });\n        /**\n         * The output signal of the envelope\n         */\n        this.output = this._sig;\n        /**\n         * Envelope has no input\n         */\n        this.input = undefined;\n        const options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n        this.attack = options.attack;\n        this.decay = options.decay;\n        this.sustain = options.sustain;\n        this.release = options.release;\n        this.attackCurve = options.attackCurve;\n        this.releaseCurve = options.releaseCurve;\n        this.decayCurve = options.decayCurve;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            attack: 0.01,\n            attackCurve: \"linear\",\n            decay: 0.1,\n            decayCurve: \"exponential\",\n            release: 1,\n            releaseCurve: \"exponential\",\n            sustain: 0.5,\n        });\n    }\n    /**\n     * Read the current value of the envelope. Useful for\n     * synchronizing visual output to the envelope.\n     */\n    get value() {\n        return this.getValueAtTime(this.now());\n    }\n    /**\n     * Get the curve\n     * @param  curve\n     * @param  direction  In/Out\n     * @return The curve name\n     */\n    _getCurve(curve, direction) {\n        if (isString(curve)) {\n            return curve;\n        }\n        else {\n            // look up the name in the curves array\n            let curveName;\n            for (curveName in EnvelopeCurves) {\n                if (EnvelopeCurves[curveName][direction] === curve) {\n                    return curveName;\n                }\n            }\n            // return the custom curve\n            return curve;\n        }\n    }\n    /**\n     * Assign a the curve to the given name using the direction\n     * @param  name\n     * @param  direction In/Out\n     * @param  curve\n     */\n    _setCurve(name, direction, curve) {\n        // check if it's a valid type\n        if (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n            const curveDef = EnvelopeCurves[curve];\n            if (isObject(curveDef)) {\n                if (name !== \"_decayCurve\") {\n                    this[name] = curveDef[direction];\n                }\n            }\n            else {\n                this[name] = curveDef;\n            }\n        }\n        else if (isArray(curve) && name !== \"_decayCurve\") {\n            this[name] = curve;\n        }\n        else {\n            throw new Error(\"Envelope: invalid curve: \" + curve);\n        }\n    }\n    /**\n     * The shape of the attack.\n     * Can be any of these strings:\n     * * \"linear\"\n     * * \"exponential\"\n     * * \"sine\"\n     * * \"cosine\"\n     * * \"bounce\"\n     * * \"ripple\"\n     * * \"step\"\n     *\n     * Can also be an array which describes the curve. Values\n     * in the array are evenly subdivided and linearly\n     * interpolated over the duration of the attack.\n     * @example\n     * return Tone.Offline(() => {\n     * \tconst env = new Tone.Envelope(0.4).toDestination();\n     * \tenv.attackCurve = \"linear\";\n     * \tenv.triggerAttack();\n     * }, 1, 1);\n     */\n    get attackCurve() {\n        return this._getCurve(this._attackCurve, \"In\");\n    }\n    set attackCurve(curve) {\n        this._setCurve(\"_attackCurve\", \"In\", curve);\n    }\n    /**\n     * The shape of the release. See the attack curve types.\n     * @example\n     * return Tone.Offline(() => {\n     * \tconst env = new Tone.Envelope({\n     * \t\trelease: 0.8\n     * \t}).toDestination();\n     * \tenv.triggerAttack();\n     * \t// release curve could also be defined by an array\n     * \tenv.releaseCurve = [1, 0.3, 0.4, 0.2, 0.7, 0];\n     * \tenv.triggerRelease(0.2);\n     * }, 1, 1);\n     */\n    get releaseCurve() {\n        return this._getCurve(this._releaseCurve, \"Out\");\n    }\n    set releaseCurve(curve) {\n        this._setCurve(\"_releaseCurve\", \"Out\", curve);\n    }\n    /**\n     * The shape of the decay either \"linear\" or \"exponential\"\n     * @example\n     * return Tone.Offline(() => {\n     * \tconst env = new Tone.Envelope({\n     * \t\tsustain: 0.1,\n     * \t\tdecay: 0.5\n     * \t}).toDestination();\n     * \tenv.decayCurve = \"linear\";\n     * \tenv.triggerAttack();\n     * }, 1, 1);\n     */\n    get decayCurve() {\n        return this._decayCurve;\n    }\n    set decayCurve(curve) {\n        assert([\"linear\", \"exponential\"].some(c => c === curve), `Invalid envelope curve: ${curve}`);\n        this._decayCurve = curve;\n    }\n    /**\n     * Trigger the attack/decay portion of the ADSR envelope.\n     * @param  time When the attack should start.\n     * @param velocity The velocity of the envelope scales the vales.\n     *                             number between 0-1\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator().connect(env).start();\n     * // trigger the attack 0.5 seconds from now with a velocity of 0.2\n     * env.triggerAttack(\"+0.5\", 0.2);\n     */\n    triggerAttack(time, velocity = 1) {\n        this.log(\"triggerAttack\", time, velocity);\n        time = this.toSeconds(time);\n        const originalAttack = this.toSeconds(this.attack);\n        let attack = originalAttack;\n        const decay = this.toSeconds(this.decay);\n        // check if it's not a complete attack\n        const currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            // subtract the current value from the attack time\n            const attackRate = 1 / attack;\n            const remainingDistance = 1 - currentValue;\n            // the attack is now the remaining time\n            attack = remainingDistance / attackRate;\n        }\n        // attack\n        if (attack < this.sampleTime) {\n            this._sig.cancelScheduledValues(time);\n            // case where the attack time is 0 should set instantly\n            this._sig.setValueAtTime(velocity, time);\n        }\n        else if (this._attackCurve === \"linear\") {\n            this._sig.linearRampTo(velocity, attack, time);\n        }\n        else if (this._attackCurve === \"exponential\") {\n            this._sig.targetRampTo(velocity, attack, time);\n        }\n        else {\n            this._sig.cancelAndHoldAtTime(time);\n            let curve = this._attackCurve;\n            // find the starting position in the curve\n            for (let i = 1; i < curve.length; i++) {\n                // the starting index is between the two values\n                if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n                    curve = this._attackCurve.slice(i);\n                    // the first index is the current value\n                    curve[0] = currentValue;\n                    break;\n                }\n            }\n            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n        }\n        // decay\n        if (decay && this.sustain < 1) {\n            const decayValue = velocity * this.sustain;\n            const decayStart = time + attack;\n            this.log(\"decay\", decayStart);\n            if (this._decayCurve === \"linear\") {\n                this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);\n            }\n            else {\n                this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n            }\n        }\n        return this;\n    }\n    /**\n     * Triggers the release of the envelope.\n     * @param  time When the release portion of the envelope should start.\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator({\n     * \ttype: \"sawtooth\"\n     * }).connect(env).start();\n     * env.triggerAttack();\n     * // trigger the release half a second after the attack\n     * env.triggerRelease(\"+0.5\");\n     */\n    triggerRelease(time) {\n        this.log(\"triggerRelease\", time);\n        time = this.toSeconds(time);\n        const currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            const release = this.toSeconds(this.release);\n            if (release < this.sampleTime) {\n                this._sig.setValueAtTime(0, time);\n            }\n            else if (this._releaseCurve === \"linear\") {\n                this._sig.linearRampTo(0, release, time);\n            }\n            else if (this._releaseCurve === \"exponential\") {\n                this._sig.targetRampTo(0, release, time);\n            }\n            else {\n                assert(isArray(this._releaseCurve), \"releaseCurve must be either 'linear', 'exponential' or an array\");\n                this._sig.cancelAndHoldAtTime(time);\n                this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n            }\n        }\n        return this;\n    }\n    /**\n     * Get the scheduled value at the given time. This will\n     * return the unconverted (raw) value.\n     * @example\n     * const env = new Tone.Envelope(0.5, 1, 0.4, 2);\n     * env.triggerAttackRelease(2);\n     * setInterval(() => console.log(env.getValueAtTime), 100);\n     */\n    getValueAtTime(time) {\n        return this._sig.getValueAtTime(time);\n    }\n    /**\n     * triggerAttackRelease is shorthand for triggerAttack, then waiting\n     * some duration, then triggerRelease.\n     * @param duration The duration of the sustain.\n     * @param time When the attack should be triggered.\n     * @param velocity The velocity of the envelope.\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator().connect(env).start();\n     * // trigger the release 0.5 seconds after the attack\n     * env.triggerAttackRelease(0.5);\n     */\n    triggerAttackRelease(duration, time, velocity = 1) {\n        time = this.toSeconds(time);\n        this.triggerAttack(time, velocity);\n        this.triggerRelease(time + this.toSeconds(duration));\n        return this;\n    }\n    /**\n     * Cancels all scheduled envelope changes after the given time.\n     */\n    cancel(after) {\n        this._sig.cancelScheduledValues(this.toSeconds(after));\n        return this;\n    }\n    /**\n     * Connect the envelope to a destination node.\n     */\n    connect(destination, outputNumber = 0, inputNumber = 0) {\n        connectSignal(this, destination, outputNumber, inputNumber);\n        return this;\n    }\n    /**\n     * Render the envelope curve to an array of the given length.\n     * Good for visualizing the envelope curve. Rescales the duration of the\n     * envelope to fit the length.\n     */\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const duration = length / this.context.sampleRate;\n            const context = new OfflineContext(1, duration, this.context.sampleRate);\n            // normalize the ADSR for the given duration with 20% sustain time\n            const attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);\n            const envelopeDuration = attackPortion + this.toSeconds(this.release);\n            const sustainTime = envelopeDuration * 0.1;\n            const totalDuration = envelopeDuration + sustainTime;\n            // @ts-ignore\n            const clone = new this.constructor(Object.assign(this.get(), {\n                attack: duration * this.toSeconds(this.attack) / totalDuration,\n                decay: duration * this.toSeconds(this.decay) / totalDuration,\n                release: duration * this.toSeconds(this.release) / totalDuration,\n                context\n            }));\n            clone._sig.toDestination();\n            clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);\n            const buffer = yield context.render();\n            return buffer.getChannelData(0);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._sig.dispose();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"attack\", void 0);\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"decay\", void 0);\n__decorate([\n    range(0, 1)\n], Envelope.prototype, \"sustain\", void 0);\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"release\", void 0);\n/**\n * Generate some complex envelope curves.\n */\nconst EnvelopeCurves = (() => {\n    const curveLen = 128;\n    let i;\n    let k;\n    // cosine curve\n    const cosineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        cosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n    }\n    // ripple curve\n    const rippleCurve = [];\n    const rippleCurveFreq = 6.4;\n    for (i = 0; i < curveLen - 1; i++) {\n        k = (i / (curveLen - 1));\n        const sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n        rippleCurve[i] = sineWave / 10 + k * 0.83;\n    }\n    rippleCurve[curveLen - 1] = 1;\n    // stairs curve\n    const stairsCurve = [];\n    const steps = 5;\n    for (i = 0; i < curveLen; i++) {\n        stairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n    }\n    // in-out easing curve\n    const sineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n    // a bounce curve\n    const bounceCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        const freq = Math.pow(k, 3) * 4 + 0.2;\n        const val = Math.cos(freq * Math.PI * 2 * k);\n        bounceCurve[i] = Math.abs(val * (1 - k));\n    }\n    /**\n     * Invert a value curve to make it work for the release\n     */\n    function invertCurve(curve) {\n        const out = new Array(curve.length);\n        for (let j = 0; j < curve.length; j++) {\n            out[j] = 1 - curve[j];\n        }\n        return out;\n    }\n    /**\n     * reverse the curve\n     */\n    function reverseCurve(curve) {\n        return curve.slice(0).reverse();\n    }\n    /**\n     * attack and release curve arrays\n     */\n    return {\n        bounce: {\n            In: invertCurve(bounceCurve),\n            Out: bounceCurve,\n        },\n        cosine: {\n            In: cosineCurve,\n            Out: reverseCurve(cosineCurve),\n        },\n        exponential: \"exponential\",\n        linear: \"linear\",\n        ripple: {\n            In: rippleCurve,\n            Out: invertCurve(rippleCurve),\n        },\n        sine: {\n            In: sineCurve,\n            Out: invertCurve(sineCurve),\n        },\n        step: {\n            In: stairsCurve,\n            Out: invertCurve(stairsCurve),\n        },\n    };\n})();\n//# sourceMappingURL=Envelope.js.map","import { Volume } from \"../component/channel/Volume\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base-class for all instruments\n */\nexport class Instrument extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Instrument.getDefaults(), arguments));\n        /**\n         * Keep track of all events scheduled to the transport\n         * when the instrument is 'synced'\n         */\n        this._scheduledEvents = [];\n        /**\n         * If the instrument is currently synced\n         */\n        this._synced = false;\n        this._original_triggerAttack = this.triggerAttack;\n        this._original_triggerRelease = this.triggerRelease;\n        const options = optionsFromArguments(Instrument.getDefaults(), arguments);\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            volume: 0,\n        });\n    }\n    /**\n     * Sync the instrument to the Transport. All subsequent calls of\n     * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.\n     * @example\n     * const fmSynth = new Tone.FMSynth().toDestination();\n     * fmSynth.volume.value = -6;\n     * fmSynth.sync();\n     * // schedule 3 notes when the transport first starts\n     * fmSynth.triggerAttackRelease(\"C4\", \"8n\", 0);\n     * fmSynth.triggerAttackRelease(\"E4\", \"8n\", \"8n\");\n     * fmSynth.triggerAttackRelease(\"G4\", \"8n\", \"4n\");\n     * // start the transport to hear the notes\n     * Tone.Transport.start();\n     */\n    sync() {\n        if (!this._synced) {\n            this._synced = true;\n            this._syncMethod(\"triggerAttack\", 1);\n            this._syncMethod(\"triggerRelease\", 0);\n        }\n        return this;\n    }\n    /**\n     * Wrap the given method so that it can be synchronized\n     * @param method Which method to wrap and sync\n     * @param  timePosition What position the time argument appears in\n     */\n    _syncMethod(method, timePosition) {\n        const originalMethod = this[\"_original_\" + method] = this[method];\n        this[method] = (...args) => {\n            const time = args[timePosition];\n            const id = this.context.transport.schedule((t) => {\n                args[timePosition] = t;\n                originalMethod.apply(this, args);\n            }, time);\n            this._scheduledEvents.push(id);\n        };\n    }\n    /**\n     * Unsync the instrument from the Transport\n     */\n    unsync() {\n        this._scheduledEvents.forEach(id => this.context.transport.clear(id));\n        this._scheduledEvents = [];\n        if (this._synced) {\n            this._synced = false;\n            this.triggerAttack = this._original_triggerAttack;\n            this.triggerRelease = this._original_triggerRelease;\n        }\n        return this;\n    }\n    /**\n     * Trigger the attack and then the release after the duration.\n     * @param  note     The note to trigger.\n     * @param  duration How long the note should be held for before\n     *                         triggering the release. This value must be greater than 0.\n     * @param time  When the note should be triggered.\n     * @param  velocity The velocity the note should be triggered at.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * // trigger \"C4\" for the duration of an 8th note\n     * synth.triggerAttackRelease(\"C4\", \"8n\");\n     */\n    triggerAttackRelease(note, duration, time, velocity) {\n        const computedTime = this.toSeconds(time);\n        const computedDuration = this.toSeconds(duration);\n        this.triggerAttack(note, computedTime, velocity);\n        this.triggerRelease(computedTime + computedDuration);\n        return this;\n    }\n    /**\n     * clean up\n     * @returns {Instrument} this\n     */\n    dispose() {\n        super.dispose();\n        this._volume.dispose();\n        this.unsync();\n        this._scheduledEvents = [];\n        return this;\n    }\n}\n//# sourceMappingURL=Instrument.js.map","import { __decorate } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { timeRange } from \"../core/util/Decorator\";\n/**\n * Abstract base class for other monophonic instruments to extend.\n */\nexport class Monophonic extends Instrument {\n    constructor() {\n        super(optionsFromArguments(Monophonic.getDefaults(), arguments));\n        const options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n        this.portamento = options.portamento;\n        this.onsilence = options.onsilence;\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            detune: 0,\n            onsilence: noOp,\n            portamento: 0,\n        });\n    }\n    /**\n     * Trigger the attack of the note optionally with a given velocity.\n     * @param  note The note to trigger.\n     * @param  time When the note should start.\n     * @param  velocity The velocity scaler determines how \"loud\" the note will be triggered.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * // trigger the note a half second from now at half velocity\n     * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n     */\n    triggerAttack(note, time, velocity = 1) {\n        this.log(\"triggerAttack\", note, time, velocity);\n        const seconds = this.toSeconds(time);\n        this._triggerEnvelopeAttack(seconds, velocity);\n        this.setNote(note, seconds);\n        return this;\n    }\n    /**\n     * Trigger the release portion of the envelope\n     * @param  time If no time is given, the release happens immediatly\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * synth.triggerAttack(\"C4\");\n     * // trigger the release a second from now\n     * synth.triggerRelease(\"+1\");\n     */\n    triggerRelease(time) {\n        this.log(\"triggerRelease\", time);\n        const seconds = this.toSeconds(time);\n        this._triggerEnvelopeRelease(seconds);\n        return this;\n    }\n    /**\n     * Set the note at the given time. If no time is given, the note\n     * will set immediately.\n     * @param note The note to change to.\n     * @param  time The time when the note should be set.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * synth.triggerAttack(\"C4\");\n     * // change to F#6 in one quarter note from now.\n     * synth.setNote(\"F#6\", \"+4n\");\n     */\n    setNote(note, time) {\n        const computedTime = this.toSeconds(time);\n        const computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n        if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n            const portTime = this.toSeconds(this.portamento);\n            this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n        }\n        else {\n            this.frequency.setValueAtTime(computedFrequency, computedTime);\n        }\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Monophonic.prototype, \"portamento\", void 0);\n//# sourceMappingURL=Monophonic.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\n/**\n * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts\n * an audio signal as the input and will apply the envelope to the amplitude\n * of the signal.\n * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst ampEnv = new Tone.AmplitudeEnvelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 1.0,\n * \t\trelease: 0.8\n * \t}).toDestination();\n * \t// create an oscillator and connect it\n * \tconst osc = new Tone.Oscillator().connect(ampEnv).start();\n * \t// trigger the envelopes attack and release \"8t\" apart\n * \tampEnv.triggerAttackRelease(\"8t\");\n * }, 1.5, 1);\n * @category Component\n */\nexport class AmplitudeEnvelope extends Envelope {\n    constructor() {\n        super(optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n        this.name = \"AmplitudeEnvelope\";\n        this._gainNode = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        this.output = this._gainNode;\n        this.input = this._gainNode;\n        this._sig.connect(this._gainNode.gain);\n        this.output = this._gainNode;\n        this.input = this._gainNode;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._gainNode.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AmplitudeEnvelope.js.map","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Synth is composed simply of a [[OmniOscillator]] routed through an [[AmplitudeEnvelope]].\n * ```\n * +----------------+   +-------------------+\n * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output\n * +----------------+   +-------------------+\n * ```\n * @example\n * const synth = new Tone.Synth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class Synth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(Synth.getDefaults(), arguments));\n        this.name = \"Synth\";\n        const options = optionsFromArguments(Synth.getDefaults(), arguments);\n        this.oscillator = new OmniOscillator(Object.assign({\n            context: this.context,\n            detune: options.detune,\n            onstop: () => this.onsilence(this),\n        }, options.oscillator));\n        this.frequency = this.oscillator.frequency;\n        this.detune = this.oscillator.detune;\n        this.envelope = new AmplitudeEnvelope(Object.assign({\n            context: this.context,\n        }, options.envelope));\n        // connect the oscillators to the output\n        this.oscillator.chain(this.envelope, this.output);\n        readOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.005,\n                decay: 0.1,\n                release: 1,\n                sustain: 0.3,\n            }),\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), [...Object.keys(Source.getDefaults()), \"frequency\", \"detune\"]), {\n                type: \"triangle\",\n            }),\n        });\n    }\n    /**\n     * start the attack portion of the envelope\n     * @param time the time the attack should start\n     * @param velocity the velocity of the note (0-1)\n     */\n    _triggerEnvelopeAttack(time, velocity) {\n        // the envelopes\n        this.envelope.triggerAttack(time, velocity);\n        this.oscillator.start(time);\n        // if there is no release portion, stop the oscillator\n        if (this.envelope.sustain === 0) {\n            const computedAttack = this.toSeconds(this.envelope.attack);\n            const computedDecay = this.toSeconds(this.envelope.decay);\n            this.oscillator.stop(time + computedAttack + computedDecay);\n        }\n    }\n    /**\n     * start the release portion of the envelope\n     * @param time the time the release should start\n     */\n    _triggerEnvelopeRelease(time) {\n        this.envelope.triggerRelease(time);\n        this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this.oscillator.dispose();\n        this.envelope.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Synth.js.map","import { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Monophonic } from \"./Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Synth } from \"./Synth\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * Base class for both AM and FM synths\n */\nexport class ModulationSynth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(ModulationSynth.getDefaults(), arguments));\n        this.name = \"ModulationSynth\";\n        const options = optionsFromArguments(ModulationSynth.getDefaults(), arguments);\n        this._carrier = new Synth({\n            context: this.context,\n            oscillator: options.oscillator,\n            envelope: options.envelope,\n            onsilence: () => this.onsilence(this),\n            volume: -10,\n        });\n        this._modulator = new Synth({\n            context: this.context,\n            oscillator: options.modulation,\n            envelope: options.modulationEnvelope,\n            volume: -10,\n        });\n        this.oscillator = this._carrier.oscillator;\n        this.envelope = this._carrier.envelope;\n        this.modulation = this._modulator.oscillator;\n        this.modulationEnvelope = this._modulator.envelope;\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n        });\n        this.detune = new Signal({\n            context: this.context,\n            value: options.detune,\n            units: \"cents\"\n        });\n        this.harmonicity = new Multiply({\n            context: this.context,\n            value: options.harmonicity,\n            minValue: 0,\n        });\n        this._modulationNode = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        readOnly(this, [\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Monophonic.getDefaults(), {\n            harmonicity: 3,\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), [\n                ...Object.keys(Source.getDefaults()),\n                \"frequency\",\n                \"detune\"\n            ]), {\n                type: \"sine\"\n            }),\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.01,\n                decay: 0.01,\n                sustain: 1,\n                release: 0.5\n            }),\n            modulation: Object.assign(omitFromObject(OmniOscillator.getDefaults(), [\n                ...Object.keys(Source.getDefaults()),\n                \"frequency\",\n                \"detune\"\n            ]), {\n                type: \"square\"\n            }),\n            modulationEnvelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.5,\n                decay: 0.0,\n                sustain: 1,\n                release: 0.5\n            })\n        });\n    }\n    /**\n     * Trigger the attack portion of the note\n     */\n    _triggerEnvelopeAttack(time, velocity) {\n        // @ts-ignore\n        this._carrier._triggerEnvelopeAttack(time, velocity);\n        // @ts-ignore\n        this._modulator._triggerEnvelopeAttack(time, velocity);\n    }\n    /**\n     * Trigger the release portion of the note\n     */\n    _triggerEnvelopeRelease(time) {\n        // @ts-ignore\n        this._carrier._triggerEnvelopeRelease(time);\n        // @ts-ignore\n        this._modulator._triggerEnvelopeRelease(time);\n        return this;\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    }\n    dispose() {\n        super.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this.harmonicity.dispose();\n        this._modulationNode.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ModulationSynth.js.map","import { AudioToGain } from \"../signal/AudioToGain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ModulationSynth } from \"./ModulationSynth\";\n/**\n * AMSynth uses the output of one Tone.Synth to modulate the\n * amplitude of another Tone.Synth. The harmonicity (the ratio between\n * the two signals) affects the timbre of the output signal greatly.\n * Read more about Amplitude Modulation Synthesis on\n * [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n *\n * @example\n * const synth = new Tone.AMSynth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"4n\");\n *\n * @category Instrument\n */\nexport class AMSynth extends ModulationSynth {\n    constructor() {\n        super(optionsFromArguments(AMSynth.getDefaults(), arguments));\n        this.name = \"AMSynth\";\n        this._modulationScale = new AudioToGain({\n            context: this.context,\n        });\n        // control the two voices frequency\n        this.frequency.connect(this._carrier.frequency);\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this.detune.fan(this._carrier.detune, this._modulator.detune);\n        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n        this._carrier.chain(this._modulationNode, this.output);\n    }\n    dispose() {\n        super.dispose();\n        this._modulationScale.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AMSynth.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Param } from \"../../core/context/Param\";\nimport { assert } from \"../../core/util/Debug\";\n/**\n * Thin wrapper around the native Web Audio [BiquadFilterNode](https://webaudio.github.io/web-audio-api/#biquadfilternode).\n * BiquadFilter is similar to [[Filter]] but doesn't have the option to set the \"rolloff\" value.\n * @category Component\n */\nexport class BiquadFilter extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(BiquadFilter.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"BiquadFilter\";\n        const options = optionsFromArguments(BiquadFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this._filter = this.context.createBiquadFilter();\n        this.input = this.output = this._filter;\n        this.Q = new Param({\n            context: this.context,\n            units: \"number\",\n            value: options.Q,\n            param: this._filter.Q,\n        });\n        this.frequency = new Param({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n            param: this._filter.frequency,\n        });\n        this.detune = new Param({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n            param: this._filter.detune,\n        });\n        this.gain = new Param({\n            context: this.context,\n            units: \"gain\",\n            value: options.gain,\n            param: this._filter.gain,\n        });\n        this.type = options.type;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            Q: 1,\n            type: \"lowpass\",\n            frequency: 350,\n            detune: 0,\n            gain: 0,\n        });\n    }\n    /**\n     * The type of this BiquadFilterNode. For a complete list of types and their attributes, see the\n     * [Web Audio API](https://webaudio.github.io/web-audio-api/#dom-biquadfiltertype-lowpass)\n     */\n    get type() {\n        return this._filter.type;\n    }\n    set type(type) {\n        const types = [\"lowpass\", \"highpass\", \"bandpass\",\n            \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n        assert(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);\n        this._filter.type = type;\n    }\n    /**\n     * Get the frequency response curve. This curve represents how the filter\n     * responses to frequencies between 20hz-20khz.\n     * @param  len The number of values to return\n     * @return The frequency response curve between 20-20kHz\n     */\n    getFrequencyResponse(len = 128) {\n        // start with all 1s\n        const freqValues = new Float32Array(len);\n        for (let i = 0; i < len; i++) {\n            const norm = Math.pow(i / len, 2);\n            const freq = norm * (20000 - 20) + 20;\n            freqValues[i] = freq;\n        }\n        const magValues = new Float32Array(len);\n        const phaseValues = new Float32Array(len);\n        // clone the filter to remove any connections which may be changing the value\n        const filterClone = this.context.createBiquadFilter();\n        filterClone.type = this.type;\n        filterClone.Q.value = this.Q.value;\n        filterClone.frequency.value = this.frequency.value;\n        filterClone.gain.value = this.gain.value;\n        filterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n        return magValues;\n    }\n    dispose() {\n        super.dispose();\n        this._filter.disconnect();\n        this.Q.dispose();\n        this.frequency.dispose();\n        this.gain.dispose();\n        this.detune.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=BiquadFilter.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { isNumber } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { assert } from \"../../core/util/Debug\";\nimport { BiquadFilter } from \"./BiquadFilter\";\n/**\n * Tone.Filter is a filter which allows for all of the same native methods\n * as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n * Tone.Filter has the added ability to set the filter rolloff at -12\n * (default), -24 and -48.\n * @example\n * const filter = new Tone.Filter(1500, \"highpass\").toDestination();\n * filter.frequency.rampTo(20000, 10);\n * const noise = new Tone.Noise().connect(filter).start();\n * @category Component\n */\nexport class Filter extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]));\n        this.name = \"Filter\";\n        this.input = new Gain({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        this._filters = [];\n        const options = optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]);\n        this._filters = [];\n        this.Q = new Signal({\n            context: this.context,\n            units: \"positive\",\n            value: options.Q,\n        });\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        this.gain = new Signal({\n            context: this.context,\n            units: \"decibels\",\n            value: options.gain,\n        });\n        this._type = options.type;\n        this.rolloff = options.rolloff;\n        readOnly(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            Q: 1,\n            detune: 0,\n            frequency: 350,\n            gain: 0,\n            rolloff: -12,\n            type: \"lowpass\",\n        });\n    }\n    /**\n     * The type of the filter. Types: \"lowpass\", \"highpass\",\n     * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        const types = [\"lowpass\", \"highpass\", \"bandpass\",\n            \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n        assert(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);\n        this._type = type;\n        this._filters.forEach(filter => filter.type = type);\n    }\n    /**\n     * The rolloff of the filter which is the drop in db\n     * per octave. Implemented internally by cascading filters.\n     * Only accepts the values -12, -24, -48 and -96.\n     */\n    get rolloff() {\n        return this._rolloff;\n    }\n    set rolloff(rolloff) {\n        const rolloffNum = isNumber(rolloff) ? rolloff : parseInt(rolloff, 10);\n        const possibilities = [-12, -24, -48, -96];\n        let cascadingCount = possibilities.indexOf(rolloffNum);\n        // check the rolloff is valid\n        assert(cascadingCount !== -1, `rolloff can only be ${possibilities.join(\", \")}`);\n        cascadingCount += 1;\n        this._rolloff = rolloffNum;\n        this.input.disconnect();\n        this._filters.forEach(filter => filter.disconnect());\n        this._filters = new Array(cascadingCount);\n        for (let count = 0; count < cascadingCount; count++) {\n            const filter = new BiquadFilter({\n                context: this.context,\n            });\n            filter.type = this._type;\n            this.frequency.connect(filter.frequency);\n            this.detune.connect(filter.detune);\n            this.Q.connect(filter.Q);\n            this.gain.connect(filter.gain);\n            this._filters[count] = filter;\n        }\n        this._internalChannels = this._filters;\n        connectSeries(this.input, ...this._internalChannels, this.output);\n    }\n    /**\n     * Get the frequency response curve. This curve represents how the filter\n     * responses to frequencies between 20hz-20khz.\n     * @param  len The number of values to return\n     * @return The frequency response curve between 20-20kHz\n     */\n    getFrequencyResponse(len = 128) {\n        const filterClone = new BiquadFilter({\n            frequency: this.frequency.value,\n            gain: this.gain.value,\n            Q: this.Q.value,\n            type: this._type,\n            detune: this.detune.value,\n        });\n        // start with all 1s\n        const totalResponse = new Float32Array(len).map(() => 1);\n        this._filters.forEach(() => {\n            const response = filterClone.getFrequencyResponse(len);\n            response.forEach((val, i) => totalResponse[i] *= val);\n        });\n        filterClone.dispose();\n        return totalResponse;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._filters.forEach(filter => {\n            filter.dispose();\n        });\n        writable(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n        this.frequency.dispose();\n        this.Q.dispose();\n        this.detune.dispose();\n        this.gain.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Filter.js.map","import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\nimport { Scale } from \"../../signal/Scale\";\nimport { Pow } from \"../../signal/Pow\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FrequencyEnvelope is an [[Envelope]] which ramps between [[baseFrequency]]\n * and [[octaves]]. It can also have an optional [[exponent]] to adjust the curve\n * which it ramps.\n * @example\n * const oscillator = new Tone.Oscillator().toDestination().start();\n * const freqEnv = new Tone.FrequencyEnvelope({\n * \tattack: 0.2,\n * \tbaseFrequency: \"C2\",\n * \toctaves: 4\n * });\n * freqEnv.connect(oscillator.frequency);\n * freqEnv.triggerAttack();\n */\nexport class FrequencyEnvelope extends Envelope {\n    constructor() {\n        super(optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n        this.name = \"FrequencyEnvelope\";\n        const options = optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n        this._octaves = options.octaves;\n        this._baseFrequency = this.toFrequency(options.baseFrequency);\n        this._exponent = this.input = new Pow({\n            context: this.context,\n            value: options.exponent\n        });\n        this._scale = this.output = new Scale({\n            context: this.context,\n            min: this._baseFrequency,\n            max: this._baseFrequency * Math.pow(2, this._octaves),\n        });\n        this._sig.chain(this._exponent, this._scale);\n    }\n    static getDefaults() {\n        return Object.assign(Envelope.getDefaults(), {\n            baseFrequency: 200,\n            exponent: 1,\n            octaves: 4,\n        });\n    }\n    /**\n     * The envelope's minimum output value. This is the value which it\n     * starts at.\n     */\n    get baseFrequency() {\n        return this._baseFrequency;\n    }\n    set baseFrequency(min) {\n        const freq = this.toFrequency(min);\n        assertRange(freq, 0);\n        this._baseFrequency = freq;\n        this._scale.min = this._baseFrequency;\n        // update the max value when the min changes\n        this.octaves = this._octaves;\n    }\n    /**\n     * The number of octaves above the baseFrequency that the\n     * envelope will scale to.\n     */\n    get octaves() {\n        return this._octaves;\n    }\n    set octaves(octaves) {\n        assertRange(octaves, 0);\n        this._octaves = octaves;\n        this._scale.max = this._baseFrequency * Math.pow(2, octaves);\n    }\n    /**\n     * The envelope's exponent value.\n     */\n    get exponent() {\n        return this._exponent.value;\n    }\n    set exponent(exponent) {\n        this._exponent.value = exponent;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._exponent.dispose();\n        this._scale.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FrequencyEnvelope.js.map","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"../instrument/Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { FrequencyEnvelope } from \"../component/envelope/FrequencyEnvelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\n/**\n * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.\n * The amplitude of the Oscillator and the cutoff frequency of the\n * Filter are controlled by Envelopes.\n * <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n * @example\n * const synth = new Tone.MonoSynth({\n * \toscillator: {\n * \t\ttype: \"square\"\n * \t},\n * \tenvelope: {\n * \t\tattack: 0.1\n * \t}\n * }).toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class MonoSynth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(MonoSynth.getDefaults(), arguments));\n        this.name = \"MonoSynth\";\n        const options = optionsFromArguments(MonoSynth.getDefaults(), arguments);\n        this.oscillator = new OmniOscillator(Object.assign(options.oscillator, {\n            context: this.context,\n            detune: options.detune,\n            onstop: () => this.onsilence(this),\n        }));\n        this.frequency = this.oscillator.frequency;\n        this.detune = this.oscillator.detune;\n        this.filter = new Filter(Object.assign(options.filter, { context: this.context }));\n        this.filterEnvelope = new FrequencyEnvelope(Object.assign(options.filterEnvelope, { context: this.context }));\n        this.envelope = new AmplitudeEnvelope(Object.assign(options.envelope, { context: this.context }));\n        // connect the oscillators to the output\n        this.oscillator.chain(this.filter, this.envelope, this.output);\n        // connect the filter envelope\n        this.filterEnvelope.connect(this.filter.frequency);\n        readOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.005,\n                decay: 0.1,\n                release: 1,\n                sustain: 0.9,\n            }),\n            filter: Object.assign(omitFromObject(Filter.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                Q: 1,\n                rolloff: -12,\n                type: \"lowpass\",\n            }),\n            filterEnvelope: Object.assign(omitFromObject(FrequencyEnvelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.6,\n                baseFrequency: 200,\n                decay: 0.2,\n                exponent: 2,\n                octaves: 3,\n                release: 2,\n                sustain: 0.5,\n            }),\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), Object.keys(Source.getDefaults())), {\n                type: \"sawtooth\",\n            }),\n        });\n    }\n    /**\n     * start the attack portion of the envelope\n     * @param time the time the attack should start\n     * @param velocity the velocity of the note (0-1)\n     */\n    _triggerEnvelopeAttack(time, velocity = 1) {\n        this.envelope.triggerAttack(time, velocity);\n        this.filterEnvelope.triggerAttack(time);\n        this.oscillator.start(time);\n        if (this.envelope.sustain === 0) {\n            const computedAttack = this.toSeconds(this.envelope.attack);\n            const computedDecay = this.toSeconds(this.envelope.decay);\n            this.oscillator.stop(time + computedAttack + computedDecay);\n        }\n    }\n    /**\n     * start the release portion of the envelope\n     * @param time the time the release should start\n     */\n    _triggerEnvelopeRelease(time) {\n        this.envelope.triggerRelease(time);\n        this.filterEnvelope.triggerRelease(time);\n        this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    }\n    dispose() {\n        super.dispose();\n        this.oscillator.dispose();\n        this.envelope.dispose();\n        this.filterEnvelope.dispose();\n        this.filter.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MonoSynth.js.map","import { Monophonic } from \"./Monophonic\";\nimport { MonoSynth } from \"./MonoSynth\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain, } from \"../core/context/Gain\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * DuoSynth is a monophonic synth composed of two [[MonoSynths]] run in parallel with control over the\n * frequency ratio between the two voices and vibrato effect.\n * @example\n * const duoSynth = new Tone.DuoSynth().toDestination();\n * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n * @category Instrument\n */\nexport class DuoSynth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(DuoSynth.getDefaults(), arguments));\n        this.name = \"DuoSynth\";\n        const options = optionsFromArguments(DuoSynth.getDefaults(), arguments);\n        this.voice0 = new MonoSynth(Object.assign(options.voice0, {\n            context: this.context,\n            onsilence: () => this.onsilence(this)\n        }));\n        this.voice1 = new MonoSynth(Object.assign(options.voice1, {\n            context: this.context,\n        }));\n        this.harmonicity = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        this._vibrato = new LFO({\n            frequency: options.vibratoRate,\n            context: this.context,\n            min: -50,\n            max: 50\n        });\n        // start the vibrato immediately\n        this._vibrato.start();\n        this.vibratoRate = this._vibrato.frequency;\n        this._vibratoGain = new Gain({\n            context: this.context,\n            units: \"normalRange\",\n            gain: options.vibratoAmount\n        });\n        this.vibratoAmount = this._vibratoGain.gain;\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: 440\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune\n        });\n        // control the two voices frequency\n        this.frequency.connect(this.voice0.frequency);\n        this.frequency.chain(this.harmonicity, this.voice1.frequency);\n        this._vibrato.connect(this._vibratoGain);\n        this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n        this.detune.fan(this.voice0.detune, this.voice1.detune);\n        this.voice0.connect(this.output);\n        this.voice1.connect(this.output);\n        readOnly(this, [\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.voice0.envelope.getValueAtTime(time) + this.voice1.envelope.getValueAtTime(time);\n    }\n    static getDefaults() {\n        return deepMerge(Monophonic.getDefaults(), {\n            vibratoAmount: 0.5,\n            vibratoRate: 5,\n            harmonicity: 1.5,\n            voice0: deepMerge(omitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())), {\n                filterEnvelope: {\n                    attack: 0.01,\n                    decay: 0.0,\n                    sustain: 1,\n                    release: 0.5\n                },\n                envelope: {\n                    attack: 0.01,\n                    decay: 0.0,\n                    sustain: 1,\n                    release: 0.5\n                }\n            }),\n            voice1: deepMerge(omitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())), {\n                filterEnvelope: {\n                    attack: 0.01,\n                    decay: 0.0,\n                    sustain: 1,\n                    release: 0.5\n                },\n                envelope: {\n                    attack: 0.01,\n                    decay: 0.0,\n                    sustain: 1,\n                    release: 0.5\n                }\n            }),\n        });\n    }\n    /**\n     * Trigger the attack portion of the note\n     */\n    _triggerEnvelopeAttack(time, velocity) {\n        // @ts-ignore\n        this.voice0._triggerEnvelopeAttack(time, velocity);\n        // @ts-ignore\n        this.voice1._triggerEnvelopeAttack(time, velocity);\n    }\n    /**\n     * Trigger the release portion of the note\n     */\n    _triggerEnvelopeRelease(time) {\n        // @ts-ignore\n        this.voice0._triggerEnvelopeRelease(time);\n        // @ts-ignore\n        this.voice1._triggerEnvelopeRelease(time);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this.voice0.dispose();\n        this.voice1.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this._vibrato.dispose();\n        this.vibratoRate.dispose();\n        this._vibratoGain.dispose();\n        this.harmonicity.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=DuoSynth.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { ModulationSynth } from \"./ModulationSynth\";\n/**\n * FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n * the frequency of a second Tone.Synth. A lot of spectral content\n * can be explored using the modulationIndex parameter. Read more about\n * frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n *\n * @example\n * const fmSynth = new Tone.FMSynth().toDestination();\n * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n *\n * @category Instrument\n */\nexport class FMSynth extends ModulationSynth {\n    constructor() {\n        super(optionsFromArguments(FMSynth.getDefaults(), arguments));\n        this.name = \"FMSynth\";\n        const options = optionsFromArguments(FMSynth.getDefaults(), arguments);\n        this.modulationIndex = new Multiply({\n            context: this.context,\n            value: options.modulationIndex,\n        });\n        // control the two voices frequency\n        this.frequency.connect(this._carrier.frequency);\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this.frequency.chain(this.modulationIndex, this._modulationNode);\n        this.detune.fan(this._carrier.detune, this._modulator.detune);\n        this._modulator.connect(this._modulationNode.gain);\n        this._modulationNode.connect(this._carrier.frequency);\n        this._carrier.connect(this.output);\n    }\n    static getDefaults() {\n        return Object.assign(ModulationSynth.getDefaults(), {\n            modulationIndex: 10,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.modulationIndex.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FMSynth.js.map","import { Envelope } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FMOscillator } from \"../source/oscillator/FMOscillator\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Inharmonic ratio of frequencies based on the Roland TR-808\n * Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n */\nconst inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.630, 3.897];\n/**\n * A highly inharmonic and spectrally complex source with a highpass filter\n * and amplitude envelope which is good for making metallophone sounds.\n * Based on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n * Inspiration from [Sound on Sound](https://shorturl.at/rSZ12).\n * @category Instrument\n */\nexport class MetalSynth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(MetalSynth.getDefaults(), arguments));\n        this.name = \"MetalSynth\";\n        /**\n         * The array of FMOscillators\n         */\n        this._oscillators = [];\n        /**\n         * The frequency multipliers\n         */\n        this._freqMultipliers = [];\n        const options = optionsFromArguments(MetalSynth.getDefaults(), arguments);\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n        });\n        this._amplitude = new Gain({\n            context: this.context,\n            gain: 0,\n        }).connect(this.output);\n        this._highpass = new Filter({\n            // Q: -3.0102999566398125,\n            Q: 0,\n            context: this.context,\n            type: \"highpass\",\n        }).connect(this._amplitude);\n        for (let i = 0; i < inharmRatios.length; i++) {\n            const osc = new FMOscillator({\n                context: this.context,\n                harmonicity: options.harmonicity,\n                modulationIndex: options.modulationIndex,\n                modulationType: \"square\",\n                onstop: i === 0 ? () => this.onsilence(this) : noOp,\n                type: \"square\",\n            });\n            osc.connect(this._highpass);\n            this._oscillators[i] = osc;\n            const mult = new Multiply({\n                context: this.context,\n                value: inharmRatios[i],\n            });\n            this._freqMultipliers[i] = mult;\n            this.frequency.chain(mult, osc.frequency);\n            this.detune.connect(osc.detune);\n        }\n        this._filterFreqScaler = new Scale({\n            context: this.context,\n            max: 7000,\n            min: this.toFrequency(options.resonance),\n        });\n        this.envelope = new Envelope({\n            attack: options.envelope.attack,\n            attackCurve: \"linear\",\n            context: this.context,\n            decay: options.envelope.decay,\n            release: options.envelope.release,\n            sustain: 0,\n        });\n        this.envelope.chain(this._filterFreqScaler, this._highpass.frequency);\n        this.envelope.connect(this._amplitude.gain);\n        // set the octaves\n        this._octaves = options.octaves;\n        this.octaves = options.octaves;\n    }\n    static getDefaults() {\n        return deepMerge(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.001,\n                decay: 1.4,\n                release: 0.2,\n            }),\n            harmonicity: 5.1,\n            modulationIndex: 32,\n            octaves: 1.5,\n            resonance: 4000,\n        });\n    }\n    /**\n     * Trigger the attack.\n     * @param time When the attack should be triggered.\n     * @param velocity The velocity that the envelope should be triggered at.\n     */\n    _triggerEnvelopeAttack(time, velocity = 1) {\n        this.envelope.triggerAttack(time, velocity);\n        this._oscillators.forEach(osc => osc.start(time));\n        if (this.envelope.sustain === 0) {\n            this._oscillators.forEach(osc => {\n                osc.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n            });\n        }\n        return this;\n    }\n    /**\n     * Trigger the release of the envelope.\n     * @param time When the release should be triggered.\n     */\n    _triggerEnvelopeRelease(time) {\n        this.envelope.triggerRelease(time);\n        this._oscillators.forEach(osc => osc.stop(time + this.toSeconds(this.envelope.release)));\n        return this;\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    }\n    /**\n     * The modulationIndex of the oscillators which make up the source.\n     * see [[FMOscillator.modulationIndex]]\n     * @min 1\n     * @max 100\n     */\n    get modulationIndex() {\n        return this._oscillators[0].modulationIndex.value;\n    }\n    set modulationIndex(val) {\n        this._oscillators.forEach(osc => (osc.modulationIndex.value = val));\n    }\n    /**\n     * The harmonicity of the oscillators which make up the source.\n     * see Tone.FMOscillator.harmonicity\n     * @min 0.1\n     * @max 10\n     */\n    get harmonicity() {\n        return this._oscillators[0].harmonicity.value;\n    }\n    set harmonicity(val) {\n        this._oscillators.forEach(osc => (osc.harmonicity.value = val));\n    }\n    /**\n     * The lower level of the highpass filter which is attached to the envelope.\n     * This value should be between [0, 7000]\n     * @min 0\n     * @max 7000\n     */\n    get resonance() {\n        return this._filterFreqScaler.min;\n    }\n    set resonance(val) {\n        this._filterFreqScaler.min = this.toFrequency(val);\n        this.octaves = this._octaves;\n    }\n    /**\n     * The number of octaves above the \"resonance\" frequency\n     * that the filter ramps during the attack/decay envelope\n     * @min 0\n     * @max 8\n     */\n    get octaves() {\n        return this._octaves;\n    }\n    set octaves(val) {\n        this._octaves = val;\n        this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, val);\n    }\n    dispose() {\n        super.dispose();\n        this._oscillators.forEach(osc => osc.dispose());\n        this._freqMultipliers.forEach(freqMult => freqMult.dispose());\n        this.frequency.dispose();\n        this.detune.dispose();\n        this._filterFreqScaler.dispose();\n        this._amplitude.dispose();\n        this.envelope.dispose();\n        this._highpass.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MetalSynth.js.map","import { __decorate } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { deepMerge, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth } from \"./Synth\";\nimport { range, timeRange } from \"../core/util/Decorator\";\n/**\n * MembraneSynth makes kick and tom sounds using a single oscillator\n * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n * is routed through a Tone.AmplitudeEnvelope to the output. The drum\n * quality of the sound comes from the frequency envelope applied\n * during MembraneSynth.triggerAttack(note). The frequency envelope\n * starts at <code>note * .octaves</code> and ramps to <code>note</code>\n * over the duration of <code>.pitchDecay</code>.\n * @example\n * const synth = new Tone.MembraneSynth().toDestination();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n * @category Instrument\n */\nexport class MembraneSynth extends Synth {\n    constructor() {\n        super(optionsFromArguments(MembraneSynth.getDefaults(), arguments));\n        this.name = \"MembraneSynth\";\n        /**\n         * Portamento is ignored in this synth. use pitch decay instead.\n         */\n        this.portamento = 0;\n        const options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);\n        this.pitchDecay = options.pitchDecay;\n        this.octaves = options.octaves;\n        readOnly(this, [\"oscillator\", \"envelope\"]);\n    }\n    static getDefaults() {\n        return deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {\n            envelope: {\n                attack: 0.001,\n                attackCurve: \"exponential\",\n                decay: 0.4,\n                release: 1.4,\n                sustain: 0.01,\n            },\n            octaves: 10,\n            oscillator: {\n                type: \"sine\",\n            },\n            pitchDecay: 0.05,\n        });\n    }\n    setNote(note, time) {\n        const seconds = this.toSeconds(time);\n        const hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);\n        const maxNote = hertz * this.octaves;\n        this.oscillator.frequency.setValueAtTime(maxNote, seconds);\n        this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        return this;\n    }\n}\n__decorate([\n    range(0)\n], MembraneSynth.prototype, \"octaves\", void 0);\n__decorate([\n    timeRange(0)\n], MembraneSynth.prototype, \"pitchDecay\", void 0);\n//# sourceMappingURL=MembraneSynth.js.map","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Instrument } from \"./Instrument\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Source } from \"../source/Source\";\n/**\n * Tone.NoiseSynth is composed of [[Noise]] through an [[AmplitudeEnvelope]].\n * ```\n * +-------+   +-------------------+\n * | Noise +>--> AmplitudeEnvelope +>--> Output\n * +-------+   +-------------------+\n * ```\n * @example\n * const noiseSynth = new Tone.NoiseSynth().toDestination();\n * noiseSynth.triggerAttackRelease(\"8n\", 0.05);\n * @category Instrument\n */\nexport class NoiseSynth extends Instrument {\n    constructor() {\n        super(optionsFromArguments(NoiseSynth.getDefaults(), arguments));\n        this.name = \"NoiseSynth\";\n        const options = optionsFromArguments(NoiseSynth.getDefaults(), arguments);\n        this.noise = new Noise(Object.assign({\n            context: this.context,\n        }, options.noise));\n        this.envelope = new AmplitudeEnvelope(Object.assign({\n            context: this.context,\n        }, options.envelope));\n        // connect the noise to the output\n        this.noise.chain(this.envelope, this.output);\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                decay: 0.1,\n                sustain: 0.0,\n            }),\n            noise: Object.assign(omitFromObject(Noise.getDefaults(), Object.keys(Source.getDefaults())), {\n                type: \"white\",\n            }),\n        });\n    }\n    /**\n     * Start the attack portion of the envelopes. Unlike other\n     * instruments, Tone.NoiseSynth doesn't have a note.\n     * @example\n     * const noiseSynth = new Tone.NoiseSynth().toDestination();\n     * noiseSynth.triggerAttack();\n     */\n    triggerAttack(time, velocity = 1) {\n        time = this.toSeconds(time);\n        // the envelopes\n        this.envelope.triggerAttack(time, velocity);\n        // start the noise\n        this.noise.start(time);\n        if (this.envelope.sustain === 0) {\n            this.noise.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n        }\n        return this;\n    }\n    /**\n     * Start the release portion of the envelopes.\n     */\n    triggerRelease(time) {\n        time = this.toSeconds(time);\n        this.envelope.triggerRelease(time);\n        this.noise.stop(time + this.toSeconds(this.envelope.release));\n        return this;\n    }\n    sync() {\n        this._syncMethod(\"triggerAttack\", 0);\n        this._syncMethod(\"triggerRelease\", 0);\n        return this;\n    }\n    triggerAttackRelease(duration, time, velocity = 1) {\n        time = this.toSeconds(time);\n        duration = this.toSeconds(duration);\n        this.triggerAttack(time, velocity);\n        this.triggerRelease(time + duration);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this.noise.dispose();\n        this.envelope.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=NoiseSynth.js.map","/**\n * All of the classes or functions which are loaded into the AudioWorkletGlobalScope\n */\nconst workletContext = new Set();\n/**\n * Add a class to the AudioWorkletGlobalScope\n */\nexport function addToWorklet(classOrFunction) {\n    workletContext.add(classOrFunction);\n}\n/**\n * Register a processor in the AudioWorkletGlobalScope with the given name\n */\nexport function registerProcessor(name, classDesc) {\n    const processor = /* javascript */ `registerProcessor(\"${name}\", ${classDesc})`;\n    workletContext.add(processor);\n}\n/**\n * Get all of the modules which have been registered to the AudioWorkletGlobalScope\n */\nexport function getWorkletGlobalScope() {\n    return Array.from(workletContext).join(\"\\n\");\n}\n//# sourceMappingURL=WorkletGlobalScope.js.map","import { ToneAudioNode } from \"../context/ToneAudioNode\";\nimport { noOp } from \"../util/Interface\";\nimport { getWorkletGlobalScope } from \"./WorkletGlobalScope\";\nexport class ToneAudioWorklet extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        this.name = \"ToneAudioWorklet\";\n        /**\n         * The constructor options for the node\n         */\n        this.workletOptions = {};\n        /**\n         * Callback which is invoked when there is an error in the processing\n         */\n        this.onprocessorerror = noOp;\n        const blobUrl = URL.createObjectURL(new Blob([getWorkletGlobalScope()], { type: \"text/javascript\" }));\n        const name = this._audioWorkletName();\n        this._dummyGain = this.context.createGain();\n        this._dummyParam = this._dummyGain.gain;\n        // Register the processor\n        this.context.addAudioWorkletModule(blobUrl, name).then(() => {\n            // create the worklet when it's read\n            if (!this.disposed) {\n                this._worklet = this.context.createAudioWorkletNode(name, this.workletOptions);\n                this._worklet.onprocessorerror = this.onprocessorerror.bind(this);\n                this.onReady(this._worklet);\n            }\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._dummyGain.disconnect();\n        if (this._worklet) {\n            this._worklet.port.postMessage(\"dispose\");\n            this._worklet.disconnect();\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=ToneAudioWorklet.js.map","import { addToWorklet } from \"./WorkletGlobalScope\";\nconst toneAudioWorkletProcessor = /* javascript */ `\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n`;\naddToWorklet(toneAudioWorkletProcessor);\n//# sourceMappingURL=ToneAudioWorkletProcessor.worklet.js.map","import \"./ToneAudioWorkletProcessor.worklet\";\nimport { addToWorklet } from \"./WorkletGlobalScope\";\nexport const singleIOProcess = /* javascript */ `\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n`;\naddToWorklet(singleIOProcess);\n//# sourceMappingURL=SingleIOProcessor.worklet.js.map","import { addToWorklet } from \"./WorkletGlobalScope\";\nconst delayLine = /* javascript */ `\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n`;\naddToWorklet(delayLine);\n//# sourceMappingURL=DelayLine.worklet.js.map","import \"../../core/worklet/SingleIOProcessor.worklet\";\nimport \"../../core/worklet/DelayLine.worklet\";\nimport { registerProcessor } from \"../../core/worklet/WorkletGlobalScope\";\nexport const workletName = \"feedback-comb-filter\";\nconst feedbackCombFilter = /* javascript */ `\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"delayTime\",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}, {\n\t\t\t\tname: \"feedback\",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n`;\nregisterProcessor(workletName, feedbackCombFilter);\n//# sourceMappingURL=FeedbackCombFilter.worklet.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioWorklet } from \"../../core/worklet/ToneAudioWorklet\";\nimport { workletName } from \"./FeedbackCombFilter.worklet\";\n/**\n * Comb filters are basic building blocks for physical modeling. Read more\n * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n *\n * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the\n * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the\n * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode.\n * @category Component\n */\nexport class FeedbackCombFilter extends ToneAudioWorklet {\n    constructor() {\n        super(optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]));\n        this.name = \"FeedbackCombFilter\";\n        const options = optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]);\n        this.input = new Gain({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        this.delayTime = new Param({\n            context: this.context,\n            value: options.delayTime,\n            units: \"time\",\n            minValue: 0,\n            maxValue: 1,\n            param: this._dummyParam,\n            swappable: true,\n        });\n        this.resonance = new Param({\n            context: this.context,\n            value: options.resonance,\n            units: \"normalRange\",\n            param: this._dummyParam,\n            swappable: true,\n        });\n        readOnly(this, [\"resonance\", \"delayTime\"]);\n    }\n    _audioWorkletName() {\n        return workletName;\n    }\n    /**\n     * The default parameters\n     */\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            delayTime: 0.1,\n            resonance: 0.5,\n        });\n    }\n    onReady(node) {\n        connectSeries(this.input, node, this.output);\n        const delayTime = node.parameters.get(\"delayTime\");\n        ;\n        this.delayTime.setParam(delayTime);\n        const feedback = node.parameters.get(\"feedback\");\n        ;\n        this.resonance.setParam(feedback);\n    }\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this.output.dispose();\n        this.delayTime.dispose();\n        this.resonance.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FeedbackCombFilter.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * A one pole filter with 6db-per-octave rolloff. Either \"highpass\" or \"lowpass\".\n * Note that changing the type or frequency may result in a discontinuity which\n * can sound like a click or pop.\n * References:\n * * http://www.earlevel.com/main/2012/12/15/a-one-pole-filter/\n * * http://www.dspguide.com/ch19/2.htm\n * * https://github.com/vitaliy-bobrov/js-rocks/blob/master/src/app/audio/effects/one-pole-filters.ts\n * @category Component\n */\nexport class OnePoleFilter extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"OnePoleFilter\";\n        const options = optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this._frequency = options.frequency;\n        this._type = options.type;\n        this.input = new Gain({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        this._createFilter();\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            frequency: 880,\n            type: \"lowpass\"\n        });\n    }\n    /**\n     * Create a filter and dispose the old one\n     */\n    _createFilter() {\n        const oldFilter = this._filter;\n        const freq = this.toFrequency(this._frequency);\n        const t = 1 / (2 * Math.PI * freq);\n        if (this._type === \"lowpass\") {\n            const a0 = 1 / (t * this.context.sampleRate);\n            const b1 = a0 - 1;\n            this._filter = this.context.createIIRFilter([a0, 0], [1, b1]);\n        }\n        else {\n            const b1 = 1 / (t * this.context.sampleRate) - 1;\n            this._filter = this.context.createIIRFilter([1, -1], [1, b1]);\n        }\n        this.input.chain(this._filter, this.output);\n        if (oldFilter) {\n            // dispose it on the next block\n            this.context.setTimeout(() => {\n                if (!this.disposed) {\n                    this.input.disconnect(oldFilter);\n                    oldFilter.disconnect();\n                }\n            }, this.blockTime);\n        }\n    }\n    /**\n     * The frequency value.\n     */\n    get frequency() {\n        return this._frequency;\n    }\n    set frequency(fq) {\n        this._frequency = fq;\n        this._createFilter();\n    }\n    /**\n     * The OnePole Filter type, either \"highpass\" or \"lowpass\"\n     */\n    get type() {\n        return this._type;\n    }\n    set type(t) {\n        this._type = t;\n        this._createFilter();\n    }\n    /**\n     * Get the frequency response curve. This curve represents how the filter\n     * responses to frequencies between 20hz-20khz.\n     * @param  len The number of values to return\n     * @return The frequency response curve between 20-20kHz\n     */\n    getFrequencyResponse(len = 128) {\n        const freqValues = new Float32Array(len);\n        for (let i = 0; i < len; i++) {\n            const norm = Math.pow(i / len, 2);\n            const freq = norm * (20000 - 20) + 20;\n            freqValues[i] = freq;\n        }\n        const magValues = new Float32Array(len);\n        const phaseValues = new Float32Array(len);\n        this._filter.getFrequencyResponse(freqValues, magValues, phaseValues);\n        return magValues;\n    }\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this.output.dispose();\n        this._filter.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=OnePoleFilter.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { FeedbackCombFilter } from \"./FeedbackCombFilter\";\nimport { OnePoleFilter } from \"./OnePoleFilter\";\n/**\n * A lowpass feedback comb filter. It is similar to\n * [[FeedbackCombFilter]], but includes a lowpass filter.\n * @category Component\n */\nexport class LowpassCombFilter extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]));\n        this.name = \"LowpassCombFilter\";\n        const options = optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]);\n        this._combFilter = this.output = new FeedbackCombFilter({\n            context: this.context,\n            delayTime: options.delayTime,\n            resonance: options.resonance,\n        });\n        this.delayTime = this._combFilter.delayTime;\n        this.resonance = this._combFilter.resonance;\n        this._lowpass = this.input = new OnePoleFilter({\n            context: this.context,\n            frequency: options.dampening,\n            type: \"lowpass\",\n        });\n        // connections\n        this._lowpass.connect(this._combFilter);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            dampening: 3000,\n            delayTime: 0.1,\n            resonance: 0.5,\n        });\n    }\n    /**\n     * The dampening control of the feedback\n     */\n    get dampening() {\n        return this._lowpass.frequency;\n    }\n    set dampening(fq) {\n        this._lowpass.frequency = fq;\n    }\n    dispose() {\n        super.dispose();\n        this._combFilter.dispose();\n        this._lowpass.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=LowpassCombFilter.js.map","import { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\nimport { deepMerge } from \"../core/util/Defaults\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Instrument } from \"./Instrument\";\n/**\n * Karplus-String string synthesis.\n * @example\n * const plucky = new Tone.PluckSynth().toDestination();\n * plucky.triggerAttack(\"C4\", \"+0.5\");\n * plucky.triggerAttack(\"C3\", \"+1\");\n * plucky.triggerAttack(\"C2\", \"+1.5\");\n * plucky.triggerAttack(\"C1\", \"+2\");\n * @category Instrument\n */\nexport class PluckSynth extends Instrument {\n    constructor() {\n        super(optionsFromArguments(PluckSynth.getDefaults(), arguments));\n        this.name = \"PluckSynth\";\n        const options = optionsFromArguments(PluckSynth.getDefaults(), arguments);\n        this._noise = new Noise({\n            context: this.context,\n            type: \"pink\"\n        });\n        this.attackNoise = options.attackNoise;\n        this._lfcf = new LowpassCombFilter({\n            context: this.context,\n            dampening: options.dampening,\n            resonance: options.resonance,\n        });\n        this.resonance = options.resonance;\n        this.release = options.release;\n        this._noise.connect(this._lfcf);\n        this._lfcf.connect(this.output);\n    }\n    static getDefaults() {\n        return deepMerge(Instrument.getDefaults(), {\n            attackNoise: 1,\n            dampening: 4000,\n            resonance: 0.7,\n            release: 1,\n        });\n    }\n    /**\n     * The dampening control. i.e. the lowpass filter frequency of the comb filter\n     * @min 0\n     * @max 7000\n     */\n    get dampening() {\n        return this._lfcf.dampening;\n    }\n    set dampening(fq) {\n        this._lfcf.dampening = fq;\n    }\n    triggerAttack(note, time) {\n        const freq = this.toFrequency(note);\n        time = this.toSeconds(time);\n        const delayAmount = 1 / freq;\n        this._lfcf.delayTime.setValueAtTime(delayAmount, time);\n        this._noise.start(time);\n        this._noise.stop(time + delayAmount * this.attackNoise);\n        this._lfcf.resonance.cancelScheduledValues(time);\n        this._lfcf.resonance.setValueAtTime(this.resonance, time);\n        return this;\n    }\n    /**\n     * Ramp down the [[resonance]] to 0 over the duration of the release time.\n     */\n    triggerRelease(time) {\n        this._lfcf.resonance.linearRampTo(0, this.release, time);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._noise.dispose();\n        this._lfcf.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PluckSynth.js.map","import { MidiClass } from \"../core/type/Midi\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"./Instrument\";\nimport { Synth } from \"./Synth\";\nimport { assert, warn } from \"../core/util/Debug\";\n/**\n * PolySynth handles voice creation and allocation for any\n * instruments passed in as the second paramter. PolySynth is\n * not a synthesizer by itself, it merely manages voices of\n * one of the other types of synths, allowing any of the\n * monophonic synthesizers to be polyphonic.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * // set the attributes across all the voices using 'set'\n * synth.set({ detune: -1200 });\n * // play a chord\n * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], 1);\n * @category Instrument\n */\nexport class PolySynth extends Instrument {\n    constructor() {\n        super(optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]));\n        this.name = \"PolySynth\";\n        /**\n         * The voices which are not currently in use\n         */\n        this._availableVoices = [];\n        /**\n         * The currently active voices\n         */\n        this._activeVoices = [];\n        /**\n         * All of the allocated voices for this synth.\n         */\n        this._voices = [];\n        /**\n         * The GC timeout. Held so that it could be cancelled when the node is disposed.\n         */\n        this._gcTimeout = -1;\n        /**\n         * A moving average of the number of active voices\n         */\n        this._averageActiveVoices = 0;\n        const options = optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]);\n        // check against the old API (pre 14.3.0)\n        assert(!isNumber(options.voice), \"DEPRECATED: The polyphony count is no longer the first argument.\");\n        const defaults = options.voice.getDefaults();\n        this.options = Object.assign(defaults, options.options);\n        this.voice = options.voice;\n        this.maxPolyphony = options.maxPolyphony;\n        // create the first voice\n        this._dummyVoice = this._getNextAvailableVoice();\n        // remove it from the voices list\n        const index = this._voices.indexOf(this._dummyVoice);\n        this._voices.splice(index, 1);\n        // kick off the GC interval\n        this._gcTimeout = this.context.setInterval(this._collectGarbage.bind(this), 1);\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            maxPolyphony: 32,\n            options: {},\n            voice: Synth,\n        });\n    }\n    /**\n     * The number of active voices.\n     */\n    get activeVoices() {\n        return this._activeVoices.length;\n    }\n    /**\n     * Invoked when the source is done making sound, so that it can be\n     * readded to the pool of available voices\n     */\n    _makeVoiceAvailable(voice) {\n        this._availableVoices.push(voice);\n        // remove the midi note from 'active voices'\n        const activeVoiceIndex = this._activeVoices.findIndex((e) => e.voice === voice);\n        this._activeVoices.splice(activeVoiceIndex, 1);\n    }\n    /**\n     * Get an available voice from the pool of available voices.\n     * If one is not available and the maxPolyphony limit is reached,\n     * steal a voice, otherwise return null.\n     */\n    _getNextAvailableVoice() {\n        // if there are available voices, return the first one\n        if (this._availableVoices.length) {\n            return this._availableVoices.shift();\n        }\n        else if (this._voices.length < this.maxPolyphony) {\n            // otherwise if there is still more maxPolyphony, make a new voice\n            const voice = new this.voice(Object.assign(this.options, {\n                context: this.context,\n                onsilence: this._makeVoiceAvailable.bind(this),\n            }));\n            voice.connect(this.output);\n            this._voices.push(voice);\n            return voice;\n        }\n        else {\n            warn(\"Max polyphony exceeded. Note dropped.\");\n        }\n    }\n    /**\n     * Occasionally check if there are any allocated voices which can be cleaned up.\n     */\n    _collectGarbage() {\n        this._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);\n        if (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {\n            // take off an available note\n            const firstAvail = this._availableVoices.shift();\n            const index = this._voices.indexOf(firstAvail);\n            this._voices.splice(index, 1);\n            if (!this.context.isOffline) {\n                firstAvail.dispose();\n            }\n        }\n    }\n    /**\n     * Internal method which triggers the attack\n     */\n    _triggerAttack(notes, time, velocity) {\n        notes.forEach(note => {\n            const midiNote = new MidiClass(this.context, note).toMidi();\n            const voice = this._getNextAvailableVoice();\n            if (voice) {\n                voice.triggerAttack(note, time, velocity);\n                this._activeVoices.push({\n                    midi: midiNote, voice, released: false,\n                });\n                this.log(\"triggerAttack\", note, time);\n            }\n        });\n    }\n    /**\n     * Internal method which triggers the release\n     */\n    _triggerRelease(notes, time) {\n        notes.forEach(note => {\n            const midiNote = new MidiClass(this.context, note).toMidi();\n            const event = this._activeVoices.find(({ midi, released }) => midi === midiNote && !released);\n            if (event) {\n                // trigger release on that note\n                event.voice.triggerRelease(time);\n                // mark it as released\n                event.released = true;\n                this.log(\"triggerRelease\", note, time);\n            }\n        });\n    }\n    /**\n     * Schedule the attack/release events. If the time is in the future, then it should set a timeout\n     * to wait for just-in-time scheduling\n     */\n    _scheduleEvent(type, notes, time, velocity) {\n        assert(!this.disposed, \"Synth was already disposed\");\n        // if the notes are greater than this amount of time in the future, they should be scheduled with setTimeout\n        if (time <= this.now()) {\n            // do it immediately\n            if (type === \"attack\") {\n                this._triggerAttack(notes, time, velocity);\n            }\n            else {\n                this._triggerRelease(notes, time);\n            }\n        }\n        else {\n            // schedule it to start in the future\n            this.context.setTimeout(() => {\n                this._scheduleEvent(type, notes, time, velocity);\n            }, time - this.now());\n        }\n    }\n    /**\n     * Trigger the attack portion of the note\n     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n     * @param  time  The start time of the note.\n     * @param velocity The velocity of the note.\n     * @example\n     * const synth = new Tone.PolySynth(Tone.FMSynth).toDestination();\n     * // trigger a chord immediately with a velocity of 0.2\n     * synth.triggerAttack([\"Ab3\", \"C4\", \"F5\"], Tone.now(), 0.2);\n     */\n    triggerAttack(notes, time, velocity) {\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        const computedTime = this.toSeconds(time);\n        this._scheduleEvent(\"attack\", notes, computedTime, velocity);\n        return this;\n    }\n    /**\n     * Trigger the release of the note. Unlike monophonic instruments,\n     * a note (or array of notes) needs to be passed in as the first argument.\n     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n     * @param  time  When the release will be triggered.\n     * @example\n     * @example\n     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n     * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"]);\n     * // trigger the release of the given notes.\n     * poly.triggerRelease([\"Ab3\", \"C4\"], \"+1\");\n     * poly.triggerRelease(\"F5\", \"+3\");\n     */\n    triggerRelease(notes, time) {\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        const computedTime = this.toSeconds(time);\n        this._scheduleEvent(\"release\", notes, computedTime);\n        return this;\n    }\n    /**\n     * Trigger the attack and release after the specified duration\n     * @param  notes The notes to play. Accepts a single  Frequency or an array of frequencies.\n     * @param  duration the duration of the note\n     * @param  time  if no time is given, defaults to now\n     * @param  velocity the velocity of the attack (0-1)\n     * @example\n     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n     * // can pass in an array of durations as well\n     * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"Bb4\", \"D5\"], [4, 3, 2, 1]);\n     */\n    triggerAttackRelease(notes, duration, time, velocity) {\n        const computedTime = this.toSeconds(time);\n        this.triggerAttack(notes, computedTime, velocity);\n        if (isArray(duration)) {\n            assert(isArray(notes), \"If the duration is an array, the notes must also be an array\");\n            notes = notes;\n            for (let i = 0; i < notes.length; i++) {\n                const d = duration[Math.min(i, duration.length - 1)];\n                const durationSeconds = this.toSeconds(d);\n                assert(durationSeconds > 0, \"The duration must be greater than 0\");\n                this.triggerRelease(notes[i], computedTime + durationSeconds);\n            }\n        }\n        else {\n            const durationSeconds = this.toSeconds(duration);\n            assert(durationSeconds > 0, \"The duration must be greater than 0\");\n            this.triggerRelease(notes, computedTime + durationSeconds);\n        }\n        return this;\n    }\n    sync() {\n        this._syncMethod(\"triggerAttack\", 1);\n        this._syncMethod(\"triggerRelease\", 1);\n        return this;\n    }\n    /**\n     * Set a member/attribute of the voices\n     * @example\n     * const poly = new Tone.PolySynth().toDestination();\n     * // set all of the voices using an options object for the synth type\n     * poly.set({\n     * \tenvelope: {\n     * \t\tattack: 0.25\n     * \t}\n     * });\n     * poly.triggerAttackRelease(\"Bb3\", 0.2);\n     */\n    set(options) {\n        // remove options which are controlled by the PolySynth\n        const sanitizedOptions = omitFromObject(options, [\"onsilence\", \"context\"]);\n        // store all of the options\n        this.options = deepMerge(this.options, sanitizedOptions);\n        this._voices.forEach(voice => voice.set(sanitizedOptions));\n        this._dummyVoice.set(sanitizedOptions);\n        return this;\n    }\n    get() {\n        return this._dummyVoice.get();\n    }\n    /**\n     * Trigger the release portion of all the currently active voices immediately.\n     * Useful for silencing the synth.\n     */\n    releaseAll(time) {\n        const computedTime = this.toSeconds(time);\n        this._activeVoices.forEach(({ voice }) => {\n            voice.triggerRelease(computedTime);\n        });\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._dummyVoice.dispose();\n        this._voices.forEach(v => v.dispose());\n        this._activeVoices = [];\n        this._availableVoices = [];\n        this.context.clearInterval(this._gcTimeout);\n        return this;\n    }\n}\n//# sourceMappingURL=PolySynth.js.map","import { __decorate } from \"tslib\";\nimport { ToneAudioBuffers } from \"../core/context/ToneAudioBuffers\";\nimport { ftomf, intervalToFrequencyRatio } from \"../core/type/Conversions\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { isArray, isNote, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { ToneBufferSource } from \"../source/buffer/ToneBufferSource\";\nimport { timeRange } from \"../core/util/Decorator\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Pass in an object which maps the note's pitch or midi value to the url,\n * then you can trigger the attack and release of that note like other instruments.\n * By automatically repitching the samples, it is possible to play pitches which\n * were not explicitly included which can save loading time.\n *\n * For sample or buffer playback where repitching is not necessary,\n * use [[Player]].\n * @example\n * const sampler = new Tone.Sampler({\n * \turls: {\n * \t\tA1: \"A1.mp3\",\n * \t\tA2: \"A2.mp3\",\n * \t},\n * \tbaseUrl: \"https://tonejs.github.io/audio/casio/\",\n * \tonload: () => {\n * \t\tsampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n * \t}\n * }).toDestination();\n * @category Instrument\n */\nexport class Sampler extends Instrument {\n    constructor() {\n        super(optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\"));\n        this.name = \"Sampler\";\n        /**\n         * The object of all currently playing BufferSources\n         */\n        this._activeSources = new Map();\n        const options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        const urlMap = {};\n        Object.keys(options.urls).forEach((note) => {\n            const noteNumber = parseInt(note, 10);\n            assert(isNote(note)\n                || (isNumber(noteNumber) && isFinite(noteNumber)), `url key is neither a note or midi pitch: ${note}`);\n            if (isNote(note)) {\n                // convert the note name to MIDI\n                const mid = new FrequencyClass(this.context, note).toMidi();\n                urlMap[mid] = options.urls[note];\n            }\n            else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n                // otherwise if it's numbers assume it's midi\n                urlMap[noteNumber] = options.urls[noteNumber];\n            }\n        });\n        this._buffers = new ToneAudioBuffers({\n            urls: urlMap,\n            onload: options.onload,\n            baseUrl: options.baseUrl,\n            onerror: options.onerror,\n        });\n        this.attack = options.attack;\n        this.release = options.release;\n        this.curve = options.curve;\n        // invoke the callback if it's already loaded\n        if (this._buffers.loaded) {\n            // invoke onload deferred\n            Promise.resolve().then(options.onload);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            attack: 0,\n            baseUrl: \"\",\n            curve: \"exponential\",\n            onload: noOp,\n            onerror: noOp,\n            release: 0.1,\n            urls: {},\n        });\n    }\n    /**\n     * Returns the difference in steps between the given midi note at the closets sample.\n     */\n    _findClosest(midi) {\n        // searches within 8 octaves of the given midi note\n        const MAX_INTERVAL = 96;\n        let interval = 0;\n        while (interval < MAX_INTERVAL) {\n            // check above and below\n            if (this._buffers.has(midi + interval)) {\n                return -interval;\n            }\n            else if (this._buffers.has(midi - interval)) {\n                return interval;\n            }\n            interval++;\n        }\n        throw new Error(`No available buffers for note: ${midi}`);\n    }\n    /**\n     * @param  notes\tThe note to play, or an array of notes.\n     * @param  time     When to play the note\n     * @param  velocity The velocity to play the sample back.\n     */\n    triggerAttack(notes, time, velocity = 1) {\n        this.log(\"triggerAttack\", notes, time, velocity);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(note => {\n            const midiFloat = ftomf(new FrequencyClass(this.context, note).toFrequency());\n            const midi = Math.round(midiFloat);\n            const remainder = midiFloat - midi;\n            // find the closest note pitch\n            const difference = this._findClosest(midi);\n            const closestNote = midi - difference;\n            const buffer = this._buffers.get(closestNote);\n            const playbackRate = intervalToFrequencyRatio(difference + remainder);\n            // play that note\n            const source = new ToneBufferSource({\n                url: buffer,\n                context: this.context,\n                curve: this.curve,\n                fadeIn: this.attack,\n                fadeOut: this.release,\n                playbackRate,\n            }).connect(this.output);\n            source.start(time, 0, buffer.duration / playbackRate, velocity);\n            // add it to the active sources\n            if (!isArray(this._activeSources.get(midi))) {\n                this._activeSources.set(midi, []);\n            }\n            this._activeSources.get(midi).push(source);\n            // remove it when it's done\n            source.onended = () => {\n                if (this._activeSources && this._activeSources.has(midi)) {\n                    const sources = this._activeSources.get(midi);\n                    const index = sources.indexOf(source);\n                    if (index !== -1) {\n                        sources.splice(index, 1);\n                    }\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * @param  notes\tThe note to release, or an array of notes.\n     * @param  time     \tWhen to release the note.\n     */\n    triggerRelease(notes, time) {\n        this.log(\"triggerRelease\", notes, time);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(note => {\n            const midi = new FrequencyClass(this.context, note).toMidi();\n            // find the note\n            if (this._activeSources.has(midi) && this._activeSources.get(midi).length) {\n                const sources = this._activeSources.get(midi);\n                time = this.toSeconds(time);\n                sources.forEach(source => {\n                    source.stop(time);\n                });\n                this._activeSources.set(midi, []);\n            }\n        });\n        return this;\n    }\n    /**\n     * Release all currently active notes.\n     * @param  time     \tWhen to release the notes.\n     */\n    releaseAll(time) {\n        const computedTime = this.toSeconds(time);\n        this._activeSources.forEach(sources => {\n            while (sources.length) {\n                const source = sources.shift();\n                source.stop(computedTime);\n            }\n        });\n        return this;\n    }\n    sync() {\n        this._syncMethod(\"triggerAttack\", 1);\n        this._syncMethod(\"triggerRelease\", 1);\n        return this;\n    }\n    /**\n     * Invoke the attack phase, then after the duration, invoke the release.\n     * @param  notes\tThe note to play and release, or an array of notes.\n     * @param  duration The time the note should be held\n     * @param  time     When to start the attack\n     * @param  velocity The velocity of the attack\n     */\n    triggerAttackRelease(notes, duration, time, velocity = 1) {\n        const computedTime = this.toSeconds(time);\n        this.triggerAttack(notes, computedTime, velocity);\n        if (isArray(duration)) {\n            assert(isArray(notes), \"notes must be an array when duration is array\");\n            notes.forEach((note, index) => {\n                const d = duration[Math.min(index, duration.length - 1)];\n                this.triggerRelease(note, computedTime + this.toSeconds(d));\n            });\n        }\n        else {\n            this.triggerRelease(notes, computedTime + this.toSeconds(duration));\n        }\n        return this;\n    }\n    /**\n     * Add a note to the sampler.\n     * @param  note      The buffer's pitch.\n     * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     */\n    add(note, url, callback) {\n        assert(isNote(note) || isFinite(note), `note must be a pitch or midi: ${note}`);\n        if (isNote(note)) {\n            // convert the note name to MIDI\n            const mid = new FrequencyClass(this.context, note).toMidi();\n            this._buffers.add(mid, url, callback);\n        }\n        else {\n            // otherwise if it's numbers assume it's midi\n            this._buffers.add(note, url, callback);\n        }\n        return this;\n    }\n    /**\n     * If the buffers are loaded or not\n     */\n    get loaded() {\n        return this._buffers.loaded;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._buffers.dispose();\n        this._activeSources.forEach(sources => {\n            sources.forEach(source => source.dispose());\n        });\n        this._activeSources.clear();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Sampler.prototype, \"attack\", void 0);\n__decorate([\n    timeRange(0)\n], Sampler.prototype, \"release\", void 0);\n//# sourceMappingURL=Sampler.js.map","import \"../core/clock/Transport\";\nimport { ToneWithContext } from \"../core/context/ToneWithContext\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isBoolean, isNumber } from \"../core/util/TypeCheck\";\n/**\n * ToneEvent abstracts away this.context.transport.schedule and provides a schedulable\n * callback for a single or repeatable events along the timeline.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * const chordEvent = new Tone.ToneEvent(((time, chord) => {\n * \t// the chord as well as the exact time of the event\n * \t// are passed in as arguments to the callback function\n * \tsynth.triggerAttackRelease(chord, 0.5, time);\n * }), [\"D4\", \"E4\", \"F4\"]);\n * // start the chord at the beginning of the transport timeline\n * chordEvent.start();\n * // loop it every measure for 8 measures\n * chordEvent.loop = 8;\n * chordEvent.loopEnd = \"1m\";\n * @category Event\n */\nexport class ToneEvent extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]));\n        this.name = \"ToneEvent\";\n        /**\n         * Tracks the scheduled events\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * A delay time from when the event is scheduled to start\n         */\n        this._startOffset = 0;\n        const options = optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]);\n        this._loop = options.loop;\n        this.callback = options.callback;\n        this.value = options.value;\n        this._loopStart = this.toTicks(options.loopStart);\n        this._loopEnd = this.toTicks(options.loopEnd);\n        this._playbackRate = options.playbackRate;\n        this._probability = options.probability;\n        this._humanize = options.humanize;\n        this.mute = options.mute;\n        this._playbackRate = options.playbackRate;\n        this._state.increasing = true;\n        // schedule the events for the first time\n        this._rescheduleEvents();\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            callback: noOp,\n            humanize: false,\n            loop: false,\n            loopEnd: \"1m\",\n            loopStart: 0,\n            mute: false,\n            playbackRate: 1,\n            probability: 1,\n            value: null,\n        });\n    }\n    /**\n     * Reschedule all of the events along the timeline\n     * with the updated values.\n     * @param after Only reschedules events after the given time.\n     */\n    _rescheduleEvents(after = -1) {\n        // if no argument is given, schedules all of the events\n        this._state.forEachFrom(after, event => {\n            let duration;\n            if (event.state === \"started\") {\n                if (event.id !== -1) {\n                    this.context.transport.clear(event.id);\n                }\n                const startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n                if (this._loop === true || isNumber(this._loop) && this._loop > 1) {\n                    duration = Infinity;\n                    if (isNumber(this._loop)) {\n                        duration = (this._loop) * this._getLoopDuration();\n                    }\n                    const nextEvent = this._state.getAfter(startTick);\n                    if (nextEvent !== null) {\n                        duration = Math.min(duration, nextEvent.time - startTick);\n                    }\n                    if (duration !== Infinity) {\n                        // schedule a stop since it's finite duration\n                        this._state.setStateAtTime(\"stopped\", startTick + duration + 1, { id: -1 });\n                        duration = new TicksClass(this.context, duration);\n                    }\n                    const interval = new TicksClass(this.context, this._getLoopDuration());\n                    event.id = this.context.transport.scheduleRepeat(this._tick.bind(this), interval, new TicksClass(this.context, startTick), duration);\n                }\n                else {\n                    event.id = this.context.transport.schedule(this._tick.bind(this), new TicksClass(this.context, startTick));\n                }\n            }\n        });\n    }\n    /**\n     * Returns the playback state of the note, either \"started\" or \"stopped\".\n     */\n    get state() {\n        return this._state.getValueAtTime(this.context.transport.ticks);\n    }\n    /**\n     * The start from the scheduled start time.\n     */\n    get startOffset() {\n        return this._startOffset;\n    }\n    set startOffset(offset) {\n        this._startOffset = offset;\n    }\n    /**\n     * The probability of the notes being triggered.\n     */\n    get probability() {\n        return this._probability;\n    }\n    set probability(prob) {\n        this._probability = prob;\n    }\n    /**\n     * If set to true, will apply small random variation\n     * to the callback time. If the value is given as a time, it will randomize\n     * by that amount.\n     * @example\n     * const event = new Tone.ToneEvent();\n     * event.humanize = true;\n     */\n    get humanize() {\n        return this._humanize;\n    }\n    set humanize(variation) {\n        this._humanize = variation;\n    }\n    /**\n     * Start the note at the given time.\n     * @param  time  When the event should start.\n     */\n    start(time) {\n        const ticks = this.toTicks(time);\n        if (this._state.getValueAtTime(ticks) === \"stopped\") {\n            this._state.add({\n                id: -1,\n                state: \"started\",\n                time: ticks,\n            });\n            this._rescheduleEvents(ticks);\n        }\n        return this;\n    }\n    /**\n     * Stop the Event at the given time.\n     * @param  time  When the event should stop.\n     */\n    stop(time) {\n        this.cancel(time);\n        const ticks = this.toTicks(time);\n        if (this._state.getValueAtTime(ticks) === \"started\") {\n            this._state.setStateAtTime(\"stopped\", ticks, { id: -1 });\n            const previousEvent = this._state.getBefore(ticks);\n            let reschedulTime = ticks;\n            if (previousEvent !== null) {\n                reschedulTime = previousEvent.time;\n            }\n            this._rescheduleEvents(reschedulTime);\n        }\n        return this;\n    }\n    /**\n     * Cancel all scheduled events greater than or equal to the given time\n     * @param  time  The time after which events will be cancel.\n     */\n    cancel(time) {\n        time = defaultArg(time, -Infinity);\n        const ticks = this.toTicks(time);\n        this._state.forEachFrom(ticks, event => {\n            this.context.transport.clear(event.id);\n        });\n        this._state.cancel(ticks);\n        return this;\n    }\n    /**\n     * The callback function invoker. Also\n     * checks if the Event is done playing\n     * @param  time  The time of the event in seconds\n     */\n    _tick(time) {\n        const ticks = this.context.transport.getTicksAtTime(time);\n        if (!this.mute && this._state.getValueAtTime(ticks) === \"started\") {\n            if (this.probability < 1 && Math.random() > this.probability) {\n                return;\n            }\n            if (this.humanize) {\n                let variation = 0.02;\n                if (!isBoolean(this.humanize)) {\n                    variation = this.toSeconds(this.humanize);\n                }\n                time += (Math.random() * 2 - 1) * variation;\n            }\n            this.callback(time, this.value);\n        }\n    }\n    /**\n     * Get the duration of the loop.\n     */\n    _getLoopDuration() {\n        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n    }\n    /**\n     * If the note should loop or not\n     * between ToneEvent.loopStart and\n     * ToneEvent.loopEnd. If set to true,\n     * the event will loop indefinitely,\n     * if set to a number greater than 1\n     * it will play a specific number of\n     * times, if set to false, 0 or 1, the\n     * part will only play once.\n     */\n    get loop() {\n        return this._loop;\n    }\n    set loop(loop) {\n        this._loop = loop;\n        this._rescheduleEvents();\n    }\n    /**\n     * The playback rate of the note. Defaults to 1.\n     * @example\n     * const note = new Tone.ToneEvent();\n     * note.loop = true;\n     * // repeat the note twice as fast\n     * note.playbackRate = 2;\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        this._playbackRate = rate;\n        this._rescheduleEvents();\n    }\n    /**\n     * The loopEnd point is the time the event will loop\n     * if ToneEvent.loop is true.\n     */\n    get loopEnd() {\n        return new TicksClass(this.context, this._loopEnd).toSeconds();\n    }\n    set loopEnd(loopEnd) {\n        this._loopEnd = this.toTicks(loopEnd);\n        if (this._loop) {\n            this._rescheduleEvents();\n        }\n    }\n    /**\n     * The time when the loop should start.\n     */\n    get loopStart() {\n        return new TicksClass(this.context, this._loopStart).toSeconds();\n    }\n    set loopStart(loopStart) {\n        this._loopStart = this.toTicks(loopStart);\n        if (this._loop) {\n            this._rescheduleEvents();\n        }\n    }\n    /**\n     * The current progress of the loop interval.\n     * Returns 0 if the event is not started yet or\n     * it is not set to loop.\n     */\n    get progress() {\n        if (this._loop) {\n            const ticks = this.context.transport.ticks;\n            const lastEvent = this._state.get(ticks);\n            if (lastEvent !== null && lastEvent.state === \"started\") {\n                const loopDuration = this._getLoopDuration();\n                const progress = (ticks - lastEvent.time) % loopDuration;\n                return progress / loopDuration;\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            return 0;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.cancel();\n        this._state.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneEvent.js.map","import { ToneEvent } from \"./ToneEvent\";\nimport { ToneWithContext } from \"../core/context/ToneWithContext\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\n/**\n * Loop creates a looped callback at the\n * specified interval. The callback can be\n * started, stopped and scheduled along\n * the Transport's timeline.\n * @example\n * const loop = new Tone.Loop((time) => {\n * \t// triggered every eighth note.\n * \tconsole.log(time);\n * }, \"8n\").start(0);\n * Tone.Transport.start();\n * @category Event\n */\nexport class Loop extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"]));\n        this.name = \"Loop\";\n        const options = optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"]);\n        this._event = new ToneEvent({\n            context: this.context,\n            callback: this._tick.bind(this),\n            loop: true,\n            loopEnd: options.interval,\n            playbackRate: options.playbackRate,\n            probability: options.probability\n        });\n        this.callback = options.callback;\n        // set the iterations\n        this.iterations = options.iterations;\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            interval: \"4n\",\n            callback: noOp,\n            playbackRate: 1,\n            iterations: Infinity,\n            probability: 1,\n            mute: false,\n            humanize: false\n        });\n    }\n    /**\n     * Start the loop at the specified time along the Transport's timeline.\n     * @param  time  When to start the Loop.\n     */\n    start(time) {\n        this._event.start(time);\n        return this;\n    }\n    /**\n     * Stop the loop at the given time.\n     * @param  time  When to stop the Loop.\n     */\n    stop(time) {\n        this._event.stop(time);\n        return this;\n    }\n    /**\n     * Cancel all scheduled events greater than or equal to the given time\n     * @param  time  The time after which events will be cancel.\n     */\n    cancel(time) {\n        this._event.cancel(time);\n        return this;\n    }\n    /**\n     * Internal function called when the notes should be called\n     * @param time  The time the event occurs\n     */\n    _tick(time) {\n        this.callback(time);\n    }\n    /**\n     * The state of the Loop, either started or stopped.\n     */\n    get state() {\n        return this._event.state;\n    }\n    /**\n     * The progress of the loop as a value between 0-1. 0, when the loop is stopped or done iterating.\n     */\n    get progress() {\n        return this._event.progress;\n    }\n    /**\n     * The time between successive callbacks.\n     * @example\n     * const loop = new Tone.Loop();\n     * loop.interval = \"8n\"; // loop every 8n\n     */\n    get interval() {\n        return this._event.loopEnd;\n    }\n    set interval(interval) {\n        this._event.loopEnd = interval;\n    }\n    /**\n     * The playback rate of the loop. The normal playback rate is 1 (no change).\n     * A `playbackRate` of 2 would be twice as fast.\n     */\n    get playbackRate() {\n        return this._event.playbackRate;\n    }\n    set playbackRate(rate) {\n        this._event.playbackRate = rate;\n    }\n    /**\n     * Random variation +/-0.01s to the scheduled time.\n     * Or give it a time value which it will randomize by.\n     */\n    get humanize() {\n        return this._event.humanize;\n    }\n    set humanize(variation) {\n        this._event.humanize = variation;\n    }\n    /**\n     * The probably of the callback being invoked.\n     */\n    get probability() {\n        return this._event.probability;\n    }\n    set probability(prob) {\n        this._event.probability = prob;\n    }\n    /**\n     * Muting the Loop means that no callbacks are invoked.\n     */\n    get mute() {\n        return this._event.mute;\n    }\n    set mute(mute) {\n        this._event.mute = mute;\n    }\n    /**\n     * The number of iterations of the loop. The default value is `Infinity` (loop forever).\n     */\n    get iterations() {\n        if (this._event.loop === true) {\n            return Infinity;\n        }\n        else {\n            return this._event.loop;\n        }\n    }\n    set iterations(iters) {\n        if (iters === Infinity) {\n            this._event.loop = true;\n        }\n        else {\n            this._event.loop = iters;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this._event.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Loop.js.map","import { TicksClass } from \"../core/type/Ticks\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isArray, isDefined, isObject, isUndef } from \"../core/util/TypeCheck\";\nimport { ToneEvent } from \"./ToneEvent\";\n/**\n * Part is a collection ToneEvents which can be started/stopped and looped as a single unit.\n *\n * @example\n * const synth = new Tone.Synth().toDestination();\n * const part = new Tone.Part(((time, note) => {\n * \t// the notes given as the second element in the array\n * \t// will be passed in as the second argument\n * \tsynth.triggerAttackRelease(note, \"8n\", time);\n * }), [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n * @example\n * const synth = new Tone.Synth().toDestination();\n * // use an array of objects as long as the object has a \"time\" attribute\n * const part = new Tone.Part(((time, value) => {\n * \t// the value is an object which contains both the note and the velocity\n * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n * }), [{ time: 0, note: \"C3\", velocity: 0.9 },\n * \t{ time: \"0:2\", note: \"C4\", velocity: 0.5 }\n * ]).start(0);\n * @category Event\n */\nexport class Part extends ToneEvent {\n    constructor() {\n        super(optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]));\n        this.name = \"Part\";\n        /**\n         * Tracks the scheduled events\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * The events that belong to this part\n         */\n        this._events = new Set();\n        const options = optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]);\n        // make sure things are assigned in the right order\n        this._state.increasing = true;\n        // add the events\n        options.events.forEach(event => {\n            if (isArray(event)) {\n                this.add(event[0], event[1]);\n            }\n            else {\n                this.add(event);\n            }\n        });\n    }\n    static getDefaults() {\n        return Object.assign(ToneEvent.getDefaults(), {\n            events: [],\n        });\n    }\n    /**\n     * Start the part at the given time.\n     * @param  time    When to start the part.\n     * @param  offset  The offset from the start of the part to begin playing at.\n     */\n    start(time, offset) {\n        const ticks = this.toTicks(time);\n        if (this._state.getValueAtTime(ticks) !== \"started\") {\n            offset = defaultArg(offset, this._loop ? this._loopStart : 0);\n            if (this._loop) {\n                offset = defaultArg(offset, this._loopStart);\n            }\n            else {\n                offset = defaultArg(offset, 0);\n            }\n            const computedOffset = this.toTicks(offset);\n            this._state.add({\n                id: -1,\n                offset: computedOffset,\n                state: \"started\",\n                time: ticks,\n            });\n            this._forEach(event => {\n                this._startNote(event, ticks, computedOffset);\n            });\n        }\n        return this;\n    }\n    /**\n     * Start the event in the given event at the correct time given\n     * the ticks and offset and looping.\n     * @param  event\n     * @param  ticks\n     * @param  offset\n     */\n    _startNote(event, ticks, offset) {\n        ticks -= offset;\n        if (this._loop) {\n            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n                if (event.startOffset < offset) {\n                    // start it on the next loop\n                    ticks += this._getLoopDuration();\n                }\n                event.start(new TicksClass(this.context, ticks));\n            }\n            else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n                event.loop = false;\n                event.start(new TicksClass(this.context, ticks));\n            }\n        }\n        else if (event.startOffset >= offset) {\n            event.start(new TicksClass(this.context, ticks));\n        }\n    }\n    get startOffset() {\n        return this._startOffset;\n    }\n    set startOffset(offset) {\n        this._startOffset = offset;\n        this._forEach(event => {\n            event.startOffset += this._startOffset;\n        });\n    }\n    /**\n     * Stop the part at the given time.\n     * @param  time  When to stop the part.\n     */\n    stop(time) {\n        const ticks = this.toTicks(time);\n        this._state.cancel(ticks);\n        this._state.setStateAtTime(\"stopped\", ticks);\n        this._forEach(event => {\n            event.stop(time);\n        });\n        return this;\n    }\n    /**\n     * Get/Set an Event's value at the given time.\n     * If a value is passed in and no event exists at\n     * the given time, one will be created with that value.\n     * If two events are at the same time, the first one will\n     * be returned.\n     * @example\n     * const part = new Tone.Part();\n     * part.at(\"1m\"); // returns the part at the first measure\n     * part.at(\"2m\", \"C2\"); // set the value at \"2m\" to C2.\n     * // if an event didn't exist at that time, it will be created.\n     * @param time The time of the event to get or set.\n     * @param value If a value is passed in, the value of the event at the given time will be set to it.\n     */\n    at(time, value) {\n        const timeInTicks = new TransportTimeClass(this.context, time).toTicks();\n        const tickTime = new TicksClass(this.context, 1).toSeconds();\n        const iterator = this._events.values();\n        let result = iterator.next();\n        while (!result.done) {\n            const event = result.value;\n            if (Math.abs(timeInTicks - event.startOffset) < tickTime) {\n                if (isDefined(value)) {\n                    event.value = value;\n                }\n                return event;\n            }\n            result = iterator.next();\n        }\n        // if there was no event at that time, create one\n        if (isDefined(value)) {\n            this.add(time, value);\n            // return the new event\n            return this.at(time);\n        }\n        else {\n            return null;\n        }\n    }\n    add(time, value) {\n        // extract the parameters\n        if (time instanceof Object && Reflect.has(time, \"time\")) {\n            value = time;\n            time = value.time;\n        }\n        const ticks = this.toTicks(time);\n        let event;\n        if (value instanceof ToneEvent) {\n            event = value;\n            event.callback = this._tick.bind(this);\n        }\n        else {\n            event = new ToneEvent({\n                callback: this._tick.bind(this),\n                context: this.context,\n                value,\n            });\n        }\n        // the start offset\n        event.startOffset = ticks;\n        // initialize the values\n        event.set({\n            humanize: this.humanize,\n            loop: this.loop,\n            loopEnd: this.loopEnd,\n            loopStart: this.loopStart,\n            playbackRate: this.playbackRate,\n            probability: this.probability,\n        });\n        this._events.add(event);\n        // start the note if it should be played right now\n        this._restartEvent(event);\n        return this;\n    }\n    /**\n     * Restart the given event\n     */\n    _restartEvent(event) {\n        this._state.forEach((stateEvent) => {\n            if (stateEvent.state === \"started\") {\n                this._startNote(event, stateEvent.time, stateEvent.offset);\n            }\n            else {\n                // stop the note\n                event.stop(new TicksClass(this.context, stateEvent.time));\n            }\n        });\n    }\n    remove(time, value) {\n        // extract the parameters\n        if (isObject(time) && time.hasOwnProperty(\"time\")) {\n            value = time;\n            time = value.time;\n        }\n        time = this.toTicks(time);\n        this._events.forEach(event => {\n            if (event.startOffset === time) {\n                if (isUndef(value) || (isDefined(value) && event.value === value)) {\n                    this._events.delete(event);\n                    event.dispose();\n                }\n            }\n        });\n        return this;\n    }\n    /**\n     * Remove all of the notes from the group.\n     */\n    clear() {\n        this._forEach(event => event.dispose());\n        this._events.clear();\n        return this;\n    }\n    /**\n     * Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n     * @param after The time after which to cancel the scheduled events.\n     */\n    cancel(after) {\n        this._forEach(event => event.cancel(after));\n        this._state.cancel(this.toTicks(after));\n        return this;\n    }\n    /**\n     * Iterate over all of the events\n     */\n    _forEach(callback) {\n        if (this._events) {\n            this._events.forEach(event => {\n                if (event instanceof Part) {\n                    event._forEach(callback);\n                }\n                else {\n                    callback(event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Set the attribute of all of the events\n     * @param  attr  the attribute to set\n     * @param  value      The value to set it to\n     */\n    _setAll(attr, value) {\n        this._forEach(event => {\n            event[attr] = value;\n        });\n    }\n    /**\n     * Internal tick method\n     * @param  time  The time of the event in seconds\n     */\n    _tick(time, value) {\n        if (!this.mute) {\n            this.callback(time, value);\n        }\n    }\n    /**\n     * Determine if the event should be currently looping\n     * given the loop boundries of this Part.\n     * @param  event  The event to test\n     */\n    _testLoopBoundries(event) {\n        if (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)) {\n            event.cancel(0);\n        }\n        else if (event.state === \"stopped\") {\n            // reschedule it if it's stopped\n            this._restartEvent(event);\n        }\n    }\n    get probability() {\n        return this._probability;\n    }\n    set probability(prob) {\n        this._probability = prob;\n        this._setAll(\"probability\", prob);\n    }\n    get humanize() {\n        return this._humanize;\n    }\n    set humanize(variation) {\n        this._humanize = variation;\n        this._setAll(\"humanize\", variation);\n    }\n    /**\n     * If the part should loop or not\n     * between Part.loopStart and\n     * Part.loopEnd. If set to true,\n     * the part will loop indefinitely,\n     * if set to a number greater than 1\n     * it will play a specific number of\n     * times, if set to false, 0 or 1, the\n     * part will only play once.\n     * @example\n     * const part = new Tone.Part();\n     * // loop the part 8 times\n     * part.loop = 8;\n     */\n    get loop() {\n        return this._loop;\n    }\n    set loop(loop) {\n        this._loop = loop;\n        this._forEach(event => {\n            event.loopStart = this.loopStart;\n            event.loopEnd = this.loopEnd;\n            event.loop = loop;\n            this._testLoopBoundries(event);\n        });\n    }\n    /**\n     * The loopEnd point determines when it will\n     * loop if Part.loop is true.\n     */\n    get loopEnd() {\n        return new TicksClass(this.context, this._loopEnd).toSeconds();\n    }\n    set loopEnd(loopEnd) {\n        this._loopEnd = this.toTicks(loopEnd);\n        if (this._loop) {\n            this._forEach(event => {\n                event.loopEnd = loopEnd;\n                this._testLoopBoundries(event);\n            });\n        }\n    }\n    /**\n     * The loopStart point determines when it will\n     * loop if Part.loop is true.\n     */\n    get loopStart() {\n        return new TicksClass(this.context, this._loopStart).toSeconds();\n    }\n    set loopStart(loopStart) {\n        this._loopStart = this.toTicks(loopStart);\n        if (this._loop) {\n            this._forEach(event => {\n                event.loopStart = this.loopStart;\n                this._testLoopBoundries(event);\n            });\n        }\n    }\n    /**\n     * The playback rate of the part\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        this._playbackRate = rate;\n        this._setAll(\"playbackRate\", rate);\n    }\n    /**\n     * The number of scheduled notes in the part.\n     */\n    get length() {\n        return this._events.size;\n    }\n    dispose() {\n        super.dispose();\n        this.clear();\n        return this;\n    }\n}\n//# sourceMappingURL=Part.js.map","import { assert } from \"../core/util/Debug\";\nimport { clamp } from \"../core/util/Math\";\n/**\n * Start at the first value and go up to the last\n */\nfunction* upPatternGen(values) {\n    let index = 0;\n    while (index < values.length) {\n        index = clampToArraySize(index, values);\n        yield values[index];\n        index++;\n    }\n}\n/**\n * Start at the last value and go down to 0\n */\nfunction* downPatternGen(values) {\n    let index = values.length - 1;\n    while (index >= 0) {\n        index = clampToArraySize(index, values);\n        yield values[index];\n        index--;\n    }\n}\n/**\n * Infinitely yield the generator\n */\nfunction* infiniteGen(values, gen) {\n    while (true) {\n        yield* gen(values);\n    }\n}\n/**\n * Make sure that the index is in the given range\n */\nfunction clampToArraySize(index, values) {\n    return clamp(index, 0, values.length - 1);\n}\n/**\n * Alternate between two generators\n */\nfunction* alternatingGenerator(values, directionUp) {\n    let index = directionUp ? 0 : values.length - 1;\n    while (true) {\n        index = clampToArraySize(index, values);\n        yield values[index];\n        if (directionUp) {\n            index++;\n            if (index >= values.length - 1) {\n                directionUp = false;\n            }\n        }\n        else {\n            index--;\n            if (index <= 0) {\n                directionUp = true;\n            }\n        }\n    }\n}\n/**\n * Starting from the bottom move up 2, down 1\n */\nfunction* jumpUp(values) {\n    let index = 0;\n    let stepIndex = 0;\n    while (index < values.length) {\n        index = clampToArraySize(index, values);\n        yield values[index];\n        stepIndex++;\n        index += (stepIndex % 2 ? 2 : -1);\n    }\n}\n/**\n * Starting from the top move down 2, up 1\n */\nfunction* jumpDown(values) {\n    let index = values.length - 1;\n    let stepIndex = 0;\n    while (index >= 0) {\n        index = clampToArraySize(index, values);\n        yield values[index];\n        stepIndex++;\n        index += (stepIndex % 2 ? -2 : 1);\n    }\n}\n/**\n * Choose a random index each time\n */\nfunction* randomGen(values) {\n    while (true) {\n        const randomIndex = Math.floor(Math.random() * values.length);\n        yield values[randomIndex];\n    }\n}\n/**\n * Randomly go through all of the values once before choosing a new random order\n */\nfunction* randomOnce(values) {\n    // create an array of indices\n    const copy = [];\n    for (let i = 0; i < values.length; i++) {\n        copy.push(i);\n    }\n    while (copy.length > 0) {\n        // random choose an index, and then remove it so it's not chosen again\n        const randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n        const index = clampToArraySize(randVal[0], values);\n        yield values[index];\n    }\n}\n/**\n * Randomly choose to walk up or down 1 index in the values array\n */\nfunction* randomWalk(values) {\n    // randomly choose a starting index in the values array\n    let index = Math.floor(Math.random() * values.length);\n    while (true) {\n        if (index === 0) {\n            index++; // at bottom of array, so force upward step\n        }\n        else if (index === values.length - 1) {\n            index--; // at top of array, so force downward step\n        }\n        else if (Math.random() < 0.5) { // else choose random downward or upward step\n            index--;\n        }\n        else {\n            index++;\n        }\n        yield values[index];\n    }\n}\n/**\n * PatternGenerator returns a generator which will iterate over the given array\n * of values and yield the items according to the passed in pattern\n * @param values An array of values to iterate over\n * @param pattern The name of the pattern use when iterating over\n * @param index Where to start in the offset of the values array\n */\nexport function* PatternGenerator(values, pattern = \"up\", index = 0) {\n    // safeguards\n    assert(values.length > 0, \"The array must have more than one value in it\");\n    switch (pattern) {\n        case \"up\":\n            yield* infiniteGen(values, upPatternGen);\n        case \"down\":\n            yield* infiniteGen(values, downPatternGen);\n        case \"upDown\":\n            yield* alternatingGenerator(values, true);\n        case \"downUp\":\n            yield* alternatingGenerator(values, false);\n        case \"alternateUp\":\n            yield* infiniteGen(values, jumpUp);\n        case \"alternateDown\":\n            yield* infiniteGen(values, jumpDown);\n        case \"random\":\n            yield* randomGen(values);\n        case \"randomOnce\":\n            yield* infiniteGen(values, randomOnce);\n        case \"randomWalk\":\n            yield* randomWalk(values);\n    }\n}\n//# sourceMappingURL=PatternGenerator.js.map","import { Loop } from \"./Loop\";\nimport { PatternGenerator } from \"./PatternGenerator\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\n/**\n * Pattern arpeggiates between the given notes\n * in a number of patterns.\n * @example\n * const pattern = new Tone.Pattern((time, note) => {\n * \t// the order of the notes passed in depends on the pattern\n * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n * @category Event\n */\nexport class Pattern extends Loop {\n    constructor() {\n        super(optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]));\n        this.name = \"Pattern\";\n        const options = optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]);\n        this.callback = options.callback;\n        this._values = options.values;\n        this._pattern = PatternGenerator(options.values, options.pattern);\n        this._type = options.pattern;\n    }\n    static getDefaults() {\n        return Object.assign(Loop.getDefaults(), {\n            pattern: \"up\",\n            values: [],\n            callback: noOp,\n        });\n    }\n    /**\n     * Internal function called when the notes should be called\n     */\n    _tick(time) {\n        const value = this._pattern.next();\n        this._value = value.value;\n        this.callback(time, this._value);\n    }\n    /**\n     * The array of events.\n     */\n    get values() {\n        return this._values;\n    }\n    set values(val) {\n        this._values = val;\n        // reset the pattern\n        this.pattern = this._type;\n    }\n    /**\n     * The current value of the pattern.\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * The pattern type. See Tone.CtrlPattern for the full list of patterns.\n     */\n    get pattern() {\n        return this._type;\n    }\n    set pattern(pattern) {\n        this._type = pattern;\n        this._pattern = PatternGenerator(this._values, this._type);\n    }\n}\n//# sourceMappingURL=Pattern.js.map","import { TicksClass } from \"../core/type/Ticks\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isString } from \"../core/util/TypeCheck\";\nimport { Part } from \"./Part\";\nimport { ToneEvent } from \"./ToneEvent\";\n/**\n * A sequence is an alternate notation of a part. Instead\n * of passing in an array of [time, event] pairs, pass\n * in an array of events which will be spaced at the\n * given subdivision. Sub-arrays will subdivide that beat\n * by the number of items are in the array.\n * Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n * @example\n * const synth = new Tone.Synth().toDestination();\n * const seq = new Tone.Sequence((time, note) => {\n * \tsynth.triggerAttackRelease(note, 0.1, time);\n * \t// subdivisions are given as subarrays\n * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]).start(0);\n * Tone.Transport.start();\n * @category Event\n */\nexport class Sequence extends ToneEvent {\n    constructor() {\n        super(optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]));\n        this.name = \"Sequence\";\n        /**\n         * The object responsible for scheduling all of the events\n         */\n        this._part = new Part({\n            callback: this._seqCallback.bind(this),\n            context: this.context,\n        });\n        /**\n         * private reference to all of the sequence proxies\n         */\n        this._events = [];\n        /**\n         * The proxied array\n         */\n        this._eventsArray = [];\n        const options = optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]);\n        this._subdivision = this.toTicks(options.subdivision);\n        this.events = options.events;\n        // set all of the values\n        this.loop = options.loop;\n        this.loopStart = options.loopStart;\n        this.loopEnd = options.loopEnd;\n        this.playbackRate = options.playbackRate;\n        this.probability = options.probability;\n        this.humanize = options.humanize;\n        this.mute = options.mute;\n        this.playbackRate = options.playbackRate;\n    }\n    static getDefaults() {\n        return Object.assign(omitFromObject(ToneEvent.getDefaults(), [\"value\"]), {\n            events: [],\n            loop: true,\n            loopEnd: 0,\n            loopStart: 0,\n            subdivision: \"8n\",\n        });\n    }\n    /**\n     * The internal callback for when an event is invoked\n     */\n    _seqCallback(time, value) {\n        if (value !== null) {\n            this.callback(time, value);\n        }\n    }\n    /**\n     * The sequence\n     */\n    get events() {\n        return this._events;\n    }\n    set events(s) {\n        this.clear();\n        this._eventsArray = s;\n        this._events = this._createSequence(this._eventsArray);\n        this._eventsUpdated();\n    }\n    /**\n     * Start the part at the given time.\n     * @param  time    When to start the part.\n     * @param  offset  The offset index to start at\n     */\n    start(time, offset) {\n        this._part.start(time, offset ? this._indexTime(offset) : offset);\n        return this;\n    }\n    /**\n     * Stop the part at the given time.\n     * @param  time  When to stop the part.\n     */\n    stop(time) {\n        this._part.stop(time);\n        return this;\n    }\n    /**\n     * The subdivision of the sequence. This can only be\n     * set in the constructor. The subdivision is the\n     * interval between successive steps.\n     */\n    get subdivision() {\n        return new TicksClass(this.context, this._subdivision).toSeconds();\n    }\n    /**\n     * Create a sequence proxy which can be monitored to create subsequences\n     */\n    _createSequence(array) {\n        return new Proxy(array, {\n            get: (target, property) => {\n                // property is index in this case\n                return target[property];\n            },\n            set: (target, property, value) => {\n                if (isString(property) && isFinite(parseInt(property, 10))) {\n                    if (isArray(value)) {\n                        target[property] = this._createSequence(value);\n                    }\n                    else {\n                        target[property] = value;\n                    }\n                }\n                else {\n                    target[property] = value;\n                }\n                this._eventsUpdated();\n                // return true to accept the changes\n                return true;\n            },\n        });\n    }\n    /**\n     * When the sequence has changed, all of the events need to be recreated\n     */\n    _eventsUpdated() {\n        this._part.clear();\n        this._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset);\n        // update the loopEnd\n        this.loopEnd = this.loopEnd;\n    }\n    /**\n     * reschedule all of the events that need to be rescheduled\n     */\n    _rescheduleSequence(sequence, subdivision, startOffset) {\n        sequence.forEach((value, index) => {\n            const eventOffset = index * (subdivision) + startOffset;\n            if (isArray(value)) {\n                this._rescheduleSequence(value, subdivision / value.length, eventOffset);\n            }\n            else {\n                const startTime = new TicksClass(this.context, eventOffset, \"i\").toSeconds();\n                this._part.add(startTime, value);\n            }\n        });\n    }\n    /**\n     * Get the time of the index given the Sequence's subdivision\n     * @param  index\n     * @return The time of that index\n     */\n    _indexTime(index) {\n        return new TicksClass(this.context, index * (this._subdivision) + this.startOffset).toSeconds();\n    }\n    /**\n     * Clear all of the events\n     */\n    clear() {\n        this._part.clear();\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._part.dispose();\n        return this;\n    }\n    //-------------------------------------\n    // PROXY CALLS\n    //-------------------------------------\n    get loop() {\n        return this._part.loop;\n    }\n    set loop(l) {\n        this._part.loop = l;\n    }\n    /**\n     * The index at which the sequence should start looping\n     */\n    get loopStart() {\n        return this._loopStart;\n    }\n    set loopStart(index) {\n        this._loopStart = index;\n        this._part.loopStart = this._indexTime(index);\n    }\n    /**\n     * The index at which the sequence should end looping\n     */\n    get loopEnd() {\n        return this._loopEnd;\n    }\n    set loopEnd(index) {\n        this._loopEnd = index;\n        if (index === 0) {\n            this._part.loopEnd = this._indexTime(this._eventsArray.length);\n        }\n        else {\n            this._part.loopEnd = this._indexTime(index);\n        }\n    }\n    get startOffset() {\n        return this._part.startOffset;\n    }\n    set startOffset(start) {\n        this._part.startOffset = start;\n    }\n    get playbackRate() {\n        return this._part.playbackRate;\n    }\n    set playbackRate(rate) {\n        this._part.playbackRate = rate;\n    }\n    get probability() {\n        return this._part.probability;\n    }\n    set probability(prob) {\n        this._part.probability = prob;\n    }\n    get progress() {\n        return this._part.progress;\n    }\n    get humanize() {\n        return this._part.humanize;\n    }\n    set humanize(variation) {\n        this._part.humanize = variation;\n    }\n    /**\n     * The number of scheduled events\n     */\n    get length() {\n        return this._part.length;\n    }\n}\n//# sourceMappingURL=Sequence.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { connect, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { GainToAudio } from \"../../signal/GainToAudio\";\nimport { Signal } from \"../../signal/Signal\";\n/**\n * Tone.Crossfade provides equal power fading between two inputs.\n * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n * ```\n *                                             +---------+\n *                                            +> input a +>--+\n * +-----------+   +---------------------+     |         |   |\n * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |\n * +-----------+   |                     |     +---------+   |\n *               +-> pan               R +>-+                |   +--------+\n *               | +---------------------+  |                +---> output +>\n *  +------+     |                          |  +---------+   |   +--------+\n *  | fade +>----+                          | +> input b +>--+\n *  +------+                                |  |         |\n *                                          +--> gain    |\n *                                             +---------+\n * ```\n * @example\n * const crossFade = new Tone.CrossFade().toDestination();\n * // connect two inputs Tone.to a/b\n * const inputA = new Tone.Oscillator(440, \"square\").connect(crossFade.a).start();\n * const inputB = new Tone.Oscillator(440, \"sine\").connect(crossFade.b).start();\n * // use the fade to control the mix between the two\n * crossFade.fade.value = 0.5;\n * @category Component\n */\nexport class CrossFade extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"])));\n        this.name = \"CrossFade\";\n        /**\n         * The crossfading is done by a StereoPannerNode\n         */\n        this._panner = this.context.createStereoPanner();\n        /**\n         * Split the output of the panner node into two values used to control the gains.\n         */\n        this._split = this.context.createChannelSplitter(2);\n        /**\n         * Convert the fade value into an audio range value so it can be connected\n         * to the panner.pan AudioParam\n         */\n        this._g2a = new GainToAudio({ context: this.context });\n        /**\n         * The input which is at full level when fade = 0\n         */\n        this.a = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * The input which is at full level when fade = 1\n         */\n        this.b = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * The output is a mix between `a` and `b` at the ratio of `fade`\n         */\n        this.output = new Gain({ context: this.context });\n        this._internalChannels = [this.a, this.b];\n        const options = optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]);\n        this.fade = new Signal({\n            context: this.context,\n            units: \"normalRange\",\n            value: options.fade,\n        });\n        readOnly(this, \"fade\");\n        this.context.getConstant(1).connect(this._panner);\n        this._panner.connect(this._split);\n        // this is necessary for standardized-audio-context\n        // doesn't make any difference for the native AudioContext\n        // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n        this._panner.channelCount = 1;\n        this._panner.channelCountMode = \"explicit\";\n        connect(this._split, this.a.gain, 0);\n        connect(this._split, this.b.gain, 1);\n        this.fade.chain(this._g2a, this._panner.pan);\n        this.a.connect(this.output);\n        this.b.connect(this.output);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            fade: 0.5,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.a.dispose();\n        this.b.dispose();\n        this.output.dispose();\n        this.fade.dispose();\n        this._g2a.dispose();\n        this._panner.disconnect();\n        this._split.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=CrossFade.js.map","import { CrossFade } from \"../component/channel/CrossFade\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Effect is the base class for effects. Connect the effect between\n * the effectSend and effectReturn GainNodes, then control the amount of\n * effect which goes to the output using the wet control.\n */\nexport class Effect extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        this.name = \"Effect\";\n        /**\n         * the drywet knob to control the amount of effect\n         */\n        this._dryWet = new CrossFade({ context: this.context });\n        /**\n         * The wet control is how much of the effected\n         * will pass through to the output. 1 = 100% effected\n         * signal, 0 = 100% dry signal.\n         */\n        this.wet = this._dryWet.fade;\n        /**\n         * connect the effectSend to the input of hte effect\n         */\n        this.effectSend = new Gain({ context: this.context });\n        /**\n         * connect the output of the effect to the effectReturn\n         */\n        this.effectReturn = new Gain({ context: this.context });\n        /**\n         * The effect input node\n         */\n        this.input = new Gain({ context: this.context });\n        /**\n         * The effect output\n         */\n        this.output = this._dryWet;\n        // connections\n        this.input.fan(this._dryWet.a, this.effectSend);\n        this.effectReturn.connect(this._dryWet.b);\n        this.wet.setValueAtTime(options.wet, 0);\n        this._internalChannels = [this.effectReturn, this.effectSend];\n        readOnly(this, \"wet\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            wet: 1,\n        });\n    }\n    /**\n     * chains the effect in between the effectSend and effectReturn\n     */\n    connectEffect(effect) {\n        // add it to the internal channels\n        this._internalChannels.push(effect);\n        this.effectSend.chain(effect, this.effectReturn);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._dryWet.dispose();\n        this.effectSend.dispose();\n        this.effectReturn.dispose();\n        this.wet.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Effect.js.map","import { Effect } from \"../effect/Effect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base class for LFO-based effects.\n */\nexport class LFOEffect extends Effect {\n    constructor(options) {\n        super(options);\n        this.name = \"LFOEffect\";\n        this._lfo = new LFO({\n            context: this.context,\n            frequency: options.frequency,\n            amplitude: options.depth,\n        });\n        this.depth = this._lfo.amplitude;\n        this.frequency = this._lfo.frequency;\n        this.type = options.type;\n        readOnly(this, [\"frequency\", \"depth\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            frequency: 1,\n            type: \"sine\",\n            depth: 1,\n        });\n    }\n    /**\n     * Start the effect.\n     */\n    start(time) {\n        this._lfo.start(time);\n        return this;\n    }\n    /**\n     * Stop the lfo\n     */\n    stop(time) {\n        this._lfo.stop(time);\n        return this;\n    }\n    /**\n     * Sync the filter to the transport. See [[LFO.sync]]\n     */\n    sync() {\n        this._lfo.sync();\n        return this;\n    }\n    /**\n     * Unsync the filter from the transport.\n     */\n    unsync() {\n        this._lfo.unsync();\n        return this;\n    }\n    /**\n     * The type of the LFO's oscillator: See [[Oscillator.type]]\n     * @example\n     * const autoFilter = new Tone.AutoFilter().start().toDestination();\n     * const noise = new Tone.Noise().start().connect(autoFilter);\n     * autoFilter.type = \"square\";\n     */\n    get type() {\n        return this._lfo.type;\n    }\n    set type(type) {\n        this._lfo.type = type;\n    }\n    dispose() {\n        super.dispose();\n        this._lfo.dispose();\n        this.frequency.dispose();\n        this.depth.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=LFOEffect.js.map","import { Filter } from \"../component/filter/Filter\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n * Setting the LFO rate and depth allows for control over the filter modulation rate\n * and depth.\n *\n * @example\n * // create an autofilter and start it's LFO\n * const autoFilter = new Tone.AutoFilter(\"4n\").toDestination().start();\n * // route an oscillator through the filter and start it\n * const oscillator = new Tone.Oscillator().connect(autoFilter).start();\n * @category Effect\n */\nexport class AutoFilter extends LFOEffect {\n    constructor() {\n        super(optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"]));\n        this.name = \"AutoFilter\";\n        const options = optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"]);\n        this.filter = new Filter(Object.assign(options.filter, {\n            context: this.context,\n        }));\n        // connections\n        this.connectEffect(this.filter);\n        this._lfo.connect(this.filter.frequency);\n        this.octaves = options.octaves;\n        this.baseFrequency = options.baseFrequency;\n    }\n    static getDefaults() {\n        return Object.assign(LFOEffect.getDefaults(), {\n            baseFrequency: 200,\n            octaves: 2.6,\n            filter: {\n                type: \"lowpass\",\n                rolloff: -12,\n                Q: 1,\n            }\n        });\n    }\n    /**\n     * The minimum value of the filter's cutoff frequency.\n     */\n    get baseFrequency() {\n        return this._lfo.min;\n    }\n    set baseFrequency(freq) {\n        this._lfo.min = this.toFrequency(freq);\n        // and set the max\n        this.octaves = this._octaves;\n    }\n    /**\n     * The maximum value of the filter's cutoff frequency.\n     */\n    get octaves() {\n        return this._octaves;\n    }\n    set octaves(oct) {\n        this._octaves = oct;\n        this._lfo.max = this._lfo.min * Math.pow(2, oct);\n    }\n    dispose() {\n        super.dispose();\n        this.filter.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AutoFilter.js.map","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.\n * @example\n * return Tone.Offline(() => {\n    * // move the input signal from right to left\n    * const panner = new Tone.Panner(1).toDestination();\n    * panner.pan.rampTo(-1, 0.5);\n    * const osc = new Tone.Oscillator(100).connect(panner).start();\n * }, 0.5, 2);\n * @category Component\n */\nexport class Panner extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"])));\n        this.name = \"Panner\";\n        /**\n         * the panner node\n         */\n        this._panner = this.context.createStereoPanner();\n        this.input = this._panner;\n        this.output = this._panner;\n        const options = optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]);\n        this.pan = new Param({\n            context: this.context,\n            param: this._panner.pan,\n            value: options.pan,\n            minValue: -1,\n            maxValue: 1,\n        });\n        // this is necessary for standardized-audio-context\n        // doesn't make any difference for the native AudioContext\n        // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n        this._panner.channelCount = options.channelCount;\n        this._panner.channelCountMode = \"explicit\";\n        // initial value\n        readOnly(this, \"pan\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            pan: 0,\n            channelCount: 1,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._panner.disconnect();\n        this.pan.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Panner.js.map","import { Panner } from \"../component/channel/Panner\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount.\n * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n * @example\n * // create an autopanner and start it\n * const autoPanner = new Tone.AutoPanner(\"4n\").toDestination().start();\n * // route an oscillator through the panner and start it\n * const oscillator = new Tone.Oscillator().connect(autoPanner).start();\n * @category Effect\n */\nexport class AutoPanner extends LFOEffect {\n    constructor() {\n        super(optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]));\n        this.name = \"AutoPanner\";\n        const options = optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]);\n        this._panner = new Panner({\n            context: this.context,\n            channelCount: options.channelCount\n        });\n        // connections\n        this.connectEffect(this._panner);\n        this._lfo.connect(this._panner.pan);\n        this._lfo.min = -1;\n        this._lfo.max = 1;\n    }\n    static getDefaults() {\n        return Object.assign(LFOEffect.getDefaults(), {\n            channelCount: 1\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._panner.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AutoPanner.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OnePoleFilter } from \"../filter/OnePoleFilter\";\nimport { Abs } from \"../../signal/Abs\";\n/**\n * Follower is a simple envelope follower.\n * It's implemented by applying a lowpass filter to the absolute value of the incoming signal.\n * ```\n *          +-----+    +---------------+\n * Input +--> Abs +----> OnePoleFilter +--> Output\n *          +-----+    +---------------+\n * ```\n * @category Component\n */\nexport class Follower extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]));\n        this.name = \"Follower\";\n        const options = optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]);\n        this._abs = this.input = new Abs({ context: this.context });\n        this._lowpass = this.output = new OnePoleFilter({\n            context: this.context,\n            frequency: 1 / this.toSeconds(options.smoothing),\n            type: \"lowpass\"\n        });\n        this._abs.connect(this._lowpass);\n        this._smoothing = options.smoothing;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            smoothing: 0.05\n        });\n    }\n    /**\n     * The amount of time it takes a value change to arrive at the updated value.\n     */\n    get smoothing() {\n        return this._smoothing;\n    }\n    set smoothing(smoothing) {\n        this._smoothing = smoothing;\n        this._lowpass.frequency = 1 / this.toSeconds(this.smoothing);\n    }\n    dispose() {\n        super.dispose();\n        this._abs.dispose();\n        this._lowpass.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Follower.js.map","import { Effect } from \"./Effect\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Follower } from \"../component/analysis/Follower\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Gain } from \"../core/context/Gain\";\nimport { dbToGain, gainToDb } from \"../core/type/Conversions\";\nimport { ScaleExp } from \"../signal/ScaleExp\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * AutoWah connects a [[Follower]] to a [[Filter]].\n * The frequency of the filter, follows the input amplitude curve.\n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n *\n * @example\n * const autoWah = new Tone.AutoWah(50, 6, -30).toDestination();\n * // initialize the synth and connect to autowah\n * const synth = new Tone.Synth().connect(autoWah);\n * // Q value influences the effect of the wah - default is 2\n * autoWah.Q.value = 6;\n * // more audible on higher notes\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Effect\n */\nexport class AutoWah extends Effect {\n    constructor() {\n        super(optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"]));\n        this.name = \"AutoWah\";\n        const options = optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"]);\n        this._follower = new Follower({\n            context: this.context,\n            smoothing: options.follower,\n        });\n        this._sweepRange = new ScaleExp({\n            context: this.context,\n            min: 0,\n            max: 1,\n            exponent: 0.5,\n        });\n        this._baseFrequency = this.toFrequency(options.baseFrequency);\n        this._octaves = options.octaves;\n        this._inputBoost = new Gain({ context: this.context });\n        this._bandpass = new Filter({\n            context: this.context,\n            rolloff: -48,\n            frequency: 0,\n            Q: options.Q,\n        });\n        this._peaking = new Filter({\n            context: this.context,\n            type: \"peaking\"\n        });\n        this._peaking.gain.value = options.gain;\n        this.gain = this._peaking.gain;\n        this.Q = this._bandpass.Q;\n        // the control signal path\n        this.effectSend.chain(this._inputBoost, this._follower, this._sweepRange);\n        this._sweepRange.connect(this._bandpass.frequency);\n        this._sweepRange.connect(this._peaking.frequency);\n        // the filtered path\n        this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n        // set the initial value\n        this._setSweepRange();\n        this.sensitivity = options.sensitivity;\n        readOnly(this, [\"gain\", \"Q\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            baseFrequency: 100,\n            octaves: 6,\n            sensitivity: 0,\n            Q: 2,\n            gain: 2,\n            follower: 0.2,\n        });\n    }\n    /**\n     * The number of octaves that the filter will sweep above the baseFrequency.\n     */\n    get octaves() {\n        return this._octaves;\n    }\n    set octaves(octaves) {\n        this._octaves = octaves;\n        this._setSweepRange();\n    }\n    /**\n     * The follower's smoothing time\n     */\n    get follower() {\n        return this._follower.smoothing;\n    }\n    set follower(follower) {\n        this._follower.smoothing = follower;\n    }\n    /**\n     * The base frequency from which the sweep will start from.\n     */\n    get baseFrequency() {\n        return this._baseFrequency;\n    }\n    set baseFrequency(baseFreq) {\n        this._baseFrequency = this.toFrequency(baseFreq);\n        this._setSweepRange();\n    }\n    /**\n     * The sensitivity to control how responsive to the input signal the filter is.\n     */\n    get sensitivity() {\n        return gainToDb(1 / this._inputBoost.gain.value);\n    }\n    set sensitivity(sensitivity) {\n        this._inputBoost.gain.value = 1 / dbToGain(sensitivity);\n    }\n    /**\n     * sets the sweep range of the scaler\n     */\n    _setSweepRange() {\n        this._sweepRange.min = this._baseFrequency;\n        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n    }\n    dispose() {\n        super.dispose();\n        this._follower.dispose();\n        this._sweepRange.dispose();\n        this._bandpass.dispose();\n        this._peaking.dispose();\n        this._inputBoost.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AutoWah.js.map","import \"../core/worklet/SingleIOProcessor.worklet\";\nimport { registerProcessor } from \"../core/worklet/WorkletGlobalScope\";\nexport const workletName = \"bit-crusher\";\nexport const bitCrusherWorklet = /* javascript */ `\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n`;\nregisterProcessor(workletName, bitCrusherWorklet);\n//# sourceMappingURL=BitCrusher.worklet.js.map","import { ToneAudioWorklet } from \"../core/worklet/ToneAudioWorklet\";\nimport { Effect } from \"./Effect\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { workletName } from \"./BitCrusher.worklet\";\n/**\n * BitCrusher down-samples the incoming signal to a different bit depth.\n * Lowering the bit depth of the signal creates distortion. Read more about BitCrushing\n * on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n * @example\n * // initialize crusher and route a synth through it\n * const crusher = new Tone.BitCrusher(4).toDestination();\n * const synth = new Tone.Synth().connect(crusher);\n * synth.triggerAttackRelease(\"C2\", 2);\n *\n * @category Effect\n */\nexport class BitCrusher extends Effect {\n    constructor() {\n        super(optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]));\n        this.name = \"BitCrusher\";\n        const options = optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]);\n        this._bitCrusherWorklet = new BitCrusherWorklet({\n            context: this.context,\n            bits: options.bits,\n        });\n        // connect it up\n        this.connectEffect(this._bitCrusherWorklet);\n        this.bits = this._bitCrusherWorklet.bits;\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            bits: 4,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._bitCrusherWorklet.dispose();\n        return this;\n    }\n}\n/**\n * Internal class which creates an AudioWorklet to do the bit crushing\n */\nclass BitCrusherWorklet extends ToneAudioWorklet {\n    constructor() {\n        super(optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments));\n        this.name = \"BitCrusherWorklet\";\n        const options = optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments);\n        this.input = new Gain({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        this.bits = new Param({\n            context: this.context,\n            value: options.bits,\n            units: \"positive\",\n            minValue: 1,\n            maxValue: 16,\n            param: this._dummyParam,\n            swappable: true,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioWorklet.getDefaults(), {\n            bits: 12,\n        });\n    }\n    _audioWorkletName() {\n        return workletName;\n    }\n    onReady(node) {\n        connectSeries(this.input, node, this.output);\n        const bits = node.parameters.get(\"bits\");\n        this.bits.setParam(bits);\n    }\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this.output.dispose();\n        this.bits.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=BitCrusher.js.map","import { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\n/**\n * Chebyshev is a waveshaper which is good\n * for making different types of distortion sounds.\n * Note that odd orders sound very different from even ones,\n * and order = 1 is no change.\n * Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n * @example\n * // create a new cheby\n * const cheby = new Tone.Chebyshev(50).toDestination();\n * // create a monosynth connected to our cheby\n * const synth = new Tone.MonoSynth().connect(cheby);\n * synth.triggerAttackRelease(\"C2\", 0.4);\n * @category Effect\n */\nexport class Chebyshev extends Effect {\n    constructor() {\n        super(optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"]));\n        this.name = \"Chebyshev\";\n        const options = optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"]);\n        this._shaper = new WaveShaper({\n            context: this.context,\n            length: 4096\n        });\n        this._order = options.order;\n        this.connectEffect(this._shaper);\n        this.order = options.order;\n        this.oversample = options.oversample;\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            order: 1,\n            oversample: \"none\"\n        });\n    }\n    /**\n     * get the coefficient for that degree\n     * @param  x the x value\n     * @param  degree\n     * @param  memo memoize the computed value. this speeds up computation greatly.\n     */\n    _getCoefficient(x, degree, memo) {\n        if (memo.has(degree)) {\n            return memo.get(degree);\n        }\n        else if (degree === 0) {\n            memo.set(degree, 0);\n        }\n        else if (degree === 1) {\n            memo.set(degree, x);\n        }\n        else {\n            memo.set(degree, 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo));\n        }\n        return memo.get(degree);\n    }\n    /**\n     * The order of the Chebyshev polynomial which creates the equation which is applied to the incoming\n     * signal through a Tone.WaveShaper. The equations are in the form:\n     * ```\n     * order 2: 2x^2 + 1\n     * order 3: 4x^3 + 3x\n     * ```\n     * @min 1\n     * @max 100\n     */\n    get order() {\n        return this._order;\n    }\n    set order(order) {\n        this._order = order;\n        this._shaper.setMap((x => {\n            return this._getCoefficient(x, order, new Map());\n        }));\n    }\n    /**\n     * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get oversample() {\n        return this._shaper.oversample;\n    }\n    set oversample(oversampling) {\n        this._shaper.oversample = oversampling;\n    }\n    dispose() {\n        super.dispose();\n        this._shaper.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Chebyshev.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Split splits an incoming signal into the number of given channels.\n *\n * @example\n * const split = new Tone.Split();\n * // stereoSignal.connect(split);\n * @category Component\n */\nexport class Split extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]));\n        this.name = \"Split\";\n        const options = optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]);\n        this._splitter = this.input = this.output = this.context.createChannelSplitter(options.channels);\n        this._internalChannels = [this._splitter];\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            channels: 2,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._splitter.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Split.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Merge brings multiple mono input channels into a single multichannel output channel.\n *\n * @example\n * const merge = new Tone.Merge().toDestination();\n * // routing a sine tone in the left channel\n * const osc = new Tone.Oscillator().connect(merge, 0, 0).start();\n * // and noise in the right channel\n * const noise = new Tone.Noise().connect(merge, 0, 1).start();;\n * @category Component\n */\nexport class Merge extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]));\n        this.name = \"Merge\";\n        const options = optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]);\n        this._merger = this.output = this.input = this.context.createChannelMerger(options.channels);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            channels: 2,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._merger.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Merge.js.map","import { connect, connectSeries, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Split } from \"../component/channel/Split\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base class for Stereo effects.\n */\nexport class StereoEffect extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        this.name = \"StereoEffect\";\n        this.input = new Gain({ context: this.context });\n        // force mono sources to be stereo\n        this.input.channelCount = 2;\n        this.input.channelCountMode = \"explicit\";\n        this._dryWet = this.output = new CrossFade({\n            context: this.context,\n            fade: options.wet\n        });\n        this.wet = this._dryWet.fade;\n        this._split = new Split({ context: this.context, channels: 2 });\n        this._merge = new Merge({ context: this.context, channels: 2 });\n        // connections\n        this.input.connect(this._split);\n        // dry wet connections\n        this.input.connect(this._dryWet.a);\n        this._merge.connect(this._dryWet.b);\n        readOnly(this, [\"wet\"]);\n    }\n    /**\n     * Connect the left part of the effect\n     */\n    connectEffectLeft(...nodes) {\n        this._split.connect(nodes[0], 0, 0);\n        connectSeries(...nodes);\n        connect(nodes[nodes.length - 1], this._merge, 0, 0);\n    }\n    /**\n     * Connect the right part of the effect\n     */\n    connectEffectRight(...nodes) {\n        this._split.connect(nodes[0], 1, 0);\n        connectSeries(...nodes);\n        connect(nodes[nodes.length - 1], this._merge, 0, 1);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            wet: 1,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._dryWet.dispose();\n        this._split.dispose();\n        this._merge.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=StereoEffect.js.map","import { StereoEffect } from \"./StereoEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Split } from \"../component/channel/Split\";\nimport { Merge } from \"../component/channel/Merge\";\n/**\n * Just like a stereo feedback effect, but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +---+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit\n * +-->                          +----->        +---->                          +---+\n * |                                                                                |\n * +--------------------------------+ feedbackR <-----------------------------------+\n * ```\n */\nexport class StereoFeedbackEffect extends StereoEffect {\n    constructor(options) {\n        super(options);\n        this.feedback = new Signal({\n            context: this.context,\n            value: options.feedback,\n            units: \"normalRange\"\n        });\n        this._feedbackL = new Gain({ context: this.context });\n        this._feedbackR = new Gain({ context: this.context });\n        this._feedbackSplit = new Split({ context: this.context, channels: 2 });\n        this._feedbackMerge = new Merge({ context: this.context, channels: 2 });\n        this._merge.connect(this._feedbackSplit);\n        this._feedbackMerge.connect(this._split);\n        // the left output connected to the left input\n        this._feedbackSplit.connect(this._feedbackL, 0, 0);\n        this._feedbackL.connect(this._feedbackMerge, 0, 0);\n        // the right output connected to the right input\n        this._feedbackSplit.connect(this._feedbackR, 1, 0);\n        this._feedbackR.connect(this._feedbackMerge, 0, 1);\n        // the feedback control\n        this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n        readOnly(this, [\"feedback\"]);\n    }\n    static getDefaults() {\n        return Object.assign(StereoEffect.getDefaults(), {\n            feedback: 0.5,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.feedback.dispose();\n        this._feedbackL.dispose();\n        this._feedbackR.dispose();\n        this._feedbackSplit.dispose();\n        this._feedbackMerge.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=StereoFeedbackEffect.js.map","import { StereoFeedbackEffect } from \"../effect/StereoFeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.\n * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects.\n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n * @example\n * const chorus = new Tone.Chorus(4, 2.5, 0.5);\n * const synth = new Tone.PolySynth().connect(chorus);\n * synth.triggerAttackRelease([\"C3\", \"E3\", \"G3\"], \"8n\");\n *\n * @category Effect\n */\nexport class Chorus extends StereoFeedbackEffect {\n    constructor() {\n        super(optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]));\n        this.name = \"Chorus\";\n        const options = optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]);\n        this._depth = options.depth;\n        this._delayTime = options.delayTime / 1000;\n        this._lfoL = new LFO({\n            context: this.context,\n            frequency: options.frequency,\n            min: 0,\n            max: 1,\n        });\n        this._lfoR = new LFO({\n            context: this.context,\n            frequency: options.frequency,\n            min: 0,\n            max: 1,\n            phase: 180\n        });\n        this._delayNodeL = new Delay({ context: this.context });\n        this._delayNodeR = new Delay({ context: this.context });\n        this.frequency = this._lfoL.frequency;\n        readOnly(this, [\"frequency\"]);\n        // have one LFO frequency control the other\n        this._lfoL.frequency.connect(this._lfoR.frequency);\n        // connections\n        this.connectEffectLeft(this._delayNodeL);\n        this.connectEffectRight(this._delayNodeR);\n        // lfo setup\n        this._lfoL.connect(this._delayNodeL.delayTime);\n        this._lfoR.connect(this._delayNodeR.delayTime);\n        // set the initial values\n        this.depth = this._depth;\n        this.type = options.type;\n        this.spread = options.spread;\n    }\n    static getDefaults() {\n        return Object.assign(StereoFeedbackEffect.getDefaults(), {\n            frequency: 1.5,\n            delayTime: 3.5,\n            depth: 0.7,\n            type: \"sine\",\n            spread: 180,\n            feedback: 0,\n            wet: 0.5,\n        });\n    }\n    /**\n     * The depth of the effect. A depth of 1 makes the delayTime\n     * modulate between 0 and 2*delayTime (centered around the delayTime).\n     */\n    get depth() {\n        return this._depth;\n    }\n    set depth(depth) {\n        this._depth = depth;\n        const deviation = this._delayTime * depth;\n        this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n        this._lfoL.max = this._delayTime + deviation;\n        this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n        this._lfoR.max = this._delayTime + deviation;\n    }\n    /**\n     * The delayTime in milliseconds of the chorus. A larger delayTime\n     * will give a more pronounced effect. Nominal range a delayTime\n     * is between 2 and 20ms.\n     */\n    get delayTime() {\n        return this._delayTime * 1000;\n    }\n    set delayTime(delayTime) {\n        this._delayTime = delayTime / 1000;\n        this.depth = this._depth;\n    }\n    /**\n     * The oscillator type of the LFO.\n     */\n    get type() {\n        return this._lfoL.type;\n    }\n    set type(type) {\n        this._lfoL.type = type;\n        this._lfoR.type = type;\n    }\n    /**\n     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n     * When set to 180, LFO's will be panned hard left and right respectively.\n     */\n    get spread() {\n        return this._lfoR.phase - this._lfoL.phase;\n    }\n    set spread(spread) {\n        this._lfoL.phase = 90 - (spread / 2);\n        this._lfoR.phase = (spread / 2) + 90;\n    }\n    /**\n     * Start the effect.\n     */\n    start(time) {\n        this._lfoL.start(time);\n        this._lfoR.start(time);\n        return this;\n    }\n    /**\n     * Stop the lfo\n     */\n    stop(time) {\n        this._lfoL.stop(time);\n        this._lfoR.stop(time);\n        return this;\n    }\n    /**\n     * Sync the filter to the transport. See [[LFO.sync]]\n     */\n    sync() {\n        this._lfoL.sync();\n        this._lfoR.sync();\n        return this;\n    }\n    /**\n     * Unsync the filter from the transport.\n     */\n    unsync() {\n        this._lfoL.unsync();\n        this._lfoR.unsync();\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._lfoL.dispose();\n        this._lfoR.dispose();\n        this._delayNodeL.dispose();\n        this._delayNodeR.dispose();\n        this.frequency.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Chorus.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\nimport { Effect } from \"./Effect\";\n/**\n * A simple distortion effect using Tone.WaveShaper.\n * Algorithm from [this stackoverflow answer](http://stackoverflow.com/a/22313408).\n *\n * @example\n * const dist = new Tone.Distortion(0.8).toDestination();\n * const fm = new Tone.FMSynth().connect(dist);\n * fm.triggerAttackRelease(\"A1\", \"8n\");\n * @category Effect\n */\nexport class Distortion extends Effect {\n    constructor() {\n        super(optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"]));\n        this.name = \"Distortion\";\n        const options = optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"]);\n        this._shaper = new WaveShaper({\n            context: this.context,\n            length: 4096,\n        });\n        this._distortion = options.distortion;\n        this.connectEffect(this._shaper);\n        this.distortion = options.distortion;\n        this.oversample = options.oversample;\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            distortion: 0.4,\n            oversample: \"none\",\n        });\n    }\n    /**\n     * The amount of distortion. Nominal range is between 0 and 1.\n     */\n    get distortion() {\n        return this._distortion;\n    }\n    set distortion(amount) {\n        this._distortion = amount;\n        const k = amount * 100;\n        const deg = Math.PI / 180;\n        this._shaper.setMap((x) => {\n            if (Math.abs(x) < 0.001) {\n                // should output 0 when input is 0\n                return 0;\n            }\n            else {\n                return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n            }\n        });\n    }\n    /**\n     * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get oversample() {\n        return this._shaper.oversample;\n    }\n    set oversample(oversampling) {\n        this._shaper.oversample = oversampling;\n    }\n    dispose() {\n        super.dispose();\n        this._shaper.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Distortion.js.map","import { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\nexport class FeedbackEffect extends Effect {\n    constructor(options) {\n        super(options);\n        this.name = \"FeedbackEffect\";\n        this._feedbackGain = new Gain({\n            context: this.context,\n            gain: options.feedback,\n            units: \"normalRange\",\n        });\n        this.feedback = this._feedbackGain.gain;\n        readOnly(this, \"feedback\");\n        // the feedback loop\n        this.effectReturn.chain(this._feedbackGain, this.effectSend);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            feedback: 0.125,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._feedbackGain.dispose();\n        this.feedback.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FeedbackEffect.js.map","import { Delay } from \"../core/context/Delay\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n * const tom = new Tone.MembraneSynth({\n * \toctaves: 4,\n * \tpitchDecay: 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\", \"32n\");\n * @category Effect\n */\nexport class FeedbackDelay extends FeedbackEffect {\n    constructor() {\n        super(optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n        this.name = \"FeedbackDelay\";\n        const options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n        this._delayNode = new Delay({\n            context: this.context,\n            delayTime: options.delayTime,\n            maxDelay: options.maxDelay,\n        });\n        this.delayTime = this._delayNode.delayTime;\n        // connect it up\n        this.connectEffect(this._delayNode);\n        readOnly(this, \"delayTime\");\n    }\n    static getDefaults() {\n        return Object.assign(FeedbackEffect.getDefaults(), {\n            delayTime: 0.25,\n            maxDelay: 1,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._delayNode.dispose();\n        this.delayTime.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FeedbackDelay.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\n/**\n * PhaseShiftAllpass is an very efficient implementation of a Hilbert Transform\n * using two Allpass filter banks whose outputs have a phase difference of 90°.\n * Here the `offset90` phase is offset by +90° in relation to `output`.\n * Coefficients and structure was developed by Olli Niemitalo.\n * For more details see: http://yehar.com/blog/?p=368\n * @category Component\n */\nexport class PhaseShiftAllpass extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        this.name = \"PhaseShiftAllpass\";\n        this.input = new Gain({ context: this.context });\n        /**\n         * The phase shifted output\n         */\n        this.output = new Gain({ context: this.context });\n        /**\n         * The PhaseShifted allpass output\n         */\n        this.offset90 = new Gain({ context: this.context });\n        const allpassBank1Values = [0.6923878, 0.9360654322959, 0.9882295226860, 0.9987488452737];\n        const allpassBank2Values = [0.4021921162426, 0.8561710882420, 0.9722909545651, 0.9952884791278];\n        this._bank0 = this._createAllPassFilterBank(allpassBank1Values);\n        this._bank1 = this._createAllPassFilterBank(allpassBank2Values);\n        this._oneSampleDelay = this.context.createIIRFilter([0.0, 1.0], [1.0, 0.0]);\n        // connect Allpass filter banks\n        connectSeries(this.input, ...this._bank0, this._oneSampleDelay, this.output);\n        connectSeries(this.input, ...this._bank1, this.offset90);\n    }\n    /**\n     * Create all of the IIR filters from an array of values using the coefficient calculation.\n     */\n    _createAllPassFilterBank(bankValues) {\n        const nodes = bankValues.map(value => {\n            const coefficients = [[value * value, 0, -1], [1, 0, -(value * value)]];\n            return this.context.createIIRFilter(coefficients[0], coefficients[1]);\n        });\n        return nodes;\n    }\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this.output.dispose();\n        this.offset90.dispose();\n        this._bank0.forEach(f => f.disconnect());\n        this._bank1.forEach(f => f.disconnect());\n        this._oneSampleDelay.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=PhaseShiftAllpass.js.map","import { PhaseShiftAllpass } from \"../component/filter/PhaseShiftAllpass\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Effect } from \"../effect/Effect\";\nimport { Add } from \"../signal/Add\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\nimport { Oscillator } from \"../source/oscillator/Oscillator\";\nimport { ToneOscillatorNode } from \"../source/oscillator/ToneOscillatorNode\";\n/**\n * FrequencyShifter can be used to shift all frequencies of a signal by a fixed amount.\n * The amount can be changed at audio rate and the effect is applied in real time.\n * The frequency shifting is implemented with a technique called single side band modulation using a ring modulator.\n * Note: Contrary to pitch shifting, all frequencies are shifted by the same amount,\n * destroying the harmonic relationship between them. This leads to the classic ring modulator timbre distortion.\n * The algorithm will produces some aliasing towards the high end, especially if your source material\n * contains a lot of high frequencies. Unfortunatelly the webaudio API does not support resampling\n * buffers in real time, so it is not possible to fix it properly. Depending on the use case it might\n * be an option to low pass filter your input before frequency shifting it to get ride of the aliasing.\n * You can find a very detailed description of the algorithm here: https://larzeitlin.github.io/RMFS/\n *\n * @example\n * const input = new Tone.Oscillator(230, \"sawtooth\").start();\n * const shift = new Tone.FrequencyShifter(42).toDestination();\n * input.connect(shift);\n * @category Effect\n */\nexport class FrequencyShifter extends Effect {\n    constructor() {\n        super(optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"]));\n        this.name = \"FrequencyShifter\";\n        const options = optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n            minValue: -this.context.sampleRate / 2,\n            maxValue: this.context.sampleRate / 2,\n        });\n        this._sine = new ToneOscillatorNode({\n            context: this.context,\n            type: \"sine\",\n        });\n        this._cosine = new Oscillator({\n            context: this.context,\n            phase: -90,\n            type: \"sine\",\n        });\n        this._sineMultiply = new Multiply({ context: this.context });\n        this._cosineMultiply = new Multiply({ context: this.context });\n        this._negate = new Negate({ context: this.context });\n        this._add = new Add({ context: this.context });\n        this._phaseShifter = new PhaseShiftAllpass({ context: this.context });\n        this.effectSend.connect(this._phaseShifter);\n        // connect the carrier frequency signal to the two oscillators\n        this.frequency.fan(this._sine.frequency, this._cosine.frequency);\n        this._phaseShifter.offset90.connect(this._cosineMultiply);\n        this._cosine.connect(this._cosineMultiply.factor);\n        this._phaseShifter.connect(this._sineMultiply);\n        this._sine.connect(this._sineMultiply.factor);\n        this._sineMultiply.connect(this._negate);\n        this._cosineMultiply.connect(this._add);\n        this._negate.connect(this._add.addend);\n        this._add.connect(this.effectReturn);\n        // start the oscillators at the same time\n        const now = this.immediate();\n        this._sine.start(now);\n        this._cosine.start(now);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            frequency: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this._add.dispose();\n        this._cosine.dispose();\n        this._cosineMultiply.dispose();\n        this._negate.dispose();\n        this._phaseShifter.dispose();\n        this._sine.dispose();\n        this._sineMultiply.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FrequencyShifter.js.map","import { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\nimport { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\n/**\n * An array of comb filter delay values from Freeverb implementation\n */\nconst combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];\n/**\n * An array of allpass filter frequency values from Freeverb implementation\n */\nconst allpassFilterFrequencies = [225, 556, 441, 341];\n/**\n * Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n * Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).\n * Freeverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using [[Reverb]].\n * @example\n * const freeverb = new Tone.Freeverb().toDestination();\n * freeverb.dampening = 1000;\n * // routing synth through the reverb\n * const synth = new Tone.NoiseSynth().connect(freeverb);\n * synth.triggerAttackRelease(0.05);\n * @category Effect\n */\nexport class Freeverb extends StereoEffect {\n    constructor() {\n        super(optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"]));\n        this.name = \"Freeverb\";\n        /**\n         * the comb filters\n         */\n        this._combFilters = [];\n        /**\n         * the allpass filters on the left\n         */\n        this._allpassFiltersL = [];\n        /**\n         * the allpass filters on the right\n         */\n        this._allpassFiltersR = [];\n        const options = optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"]);\n        this.roomSize = new Signal({\n            context: this.context,\n            value: options.roomSize,\n            units: \"normalRange\",\n        });\n        // make the allpass filters on the right\n        this._allpassFiltersL = allpassFilterFrequencies.map(freq => {\n            const allpassL = this.context.createBiquadFilter();\n            allpassL.type = \"allpass\";\n            allpassL.frequency.value = freq;\n            return allpassL;\n        });\n        // make the allpass filters on the left\n        this._allpassFiltersR = allpassFilterFrequencies.map(freq => {\n            const allpassR = this.context.createBiquadFilter();\n            allpassR.type = \"allpass\";\n            allpassR.frequency.value = freq;\n            return allpassR;\n        });\n        // make the comb filters\n        this._combFilters = combFilterTunings.map((delayTime, index) => {\n            const lfpf = new LowpassCombFilter({\n                context: this.context,\n                dampening: options.dampening,\n                delayTime,\n            });\n            if (index < combFilterTunings.length / 2) {\n                this.connectEffectLeft(lfpf, ...this._allpassFiltersL);\n            }\n            else {\n                this.connectEffectRight(lfpf, ...this._allpassFiltersR);\n            }\n            this.roomSize.connect(lfpf.resonance);\n            return lfpf;\n        });\n        readOnly(this, [\"roomSize\"]);\n    }\n    static getDefaults() {\n        return Object.assign(StereoEffect.getDefaults(), {\n            roomSize: 0.7,\n            dampening: 3000\n        });\n    }\n    /**\n     * The amount of dampening of the reverberant signal.\n     */\n    get dampening() {\n        return this._combFilters[0].dampening;\n    }\n    set dampening(d) {\n        this._combFilters.forEach(c => c.dampening = d);\n    }\n    dispose() {\n        super.dispose();\n        this._allpassFiltersL.forEach(al => al.disconnect());\n        this._allpassFiltersR.forEach(ar => ar.disconnect());\n        this._combFilters.forEach(cf => cf.dispose());\n        this.roomSize.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Freeverb.js.map","import { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FeedbackCombFilter } from \"../component/filter/FeedbackCombFilter\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * an array of the comb filter delay time values\n */\nconst combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];\n/**\n * the resonances of each of the comb filters\n */\nconst combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n/**\n * the allpass filter frequencies\n */\nconst allpassFilterFreqs = [347, 113, 37];\n/**\n * JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n * tuned by John Chowning in 1970.\n * It is made up of three allpass filters and four [[FeedbackCombFilter]].\n * JCReverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using [[Reverb]].\n * @example\n * const reverb = new Tone.JCReverb(0.4).toDestination();\n * const delay = new Tone.FeedbackDelay(0.5);\n * // connecting the synth to reverb through delay\n * const synth = new Tone.DuoSynth().chain(delay, reverb);\n * synth.triggerAttackRelease(\"A4\", \"8n\");\n *\n * @category Effect\n */\nexport class JCReverb extends StereoEffect {\n    constructor() {\n        super(optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"]));\n        this.name = \"JCReverb\";\n        /**\n         * a series of allpass filters\n         */\n        this._allpassFilters = [];\n        /**\n         * parallel feedback comb filters\n         */\n        this._feedbackCombFilters = [];\n        const options = optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"]);\n        this.roomSize = new Signal({\n            context: this.context,\n            value: options.roomSize,\n            units: \"normalRange\",\n        });\n        this._scaleRoomSize = new Scale({\n            context: this.context,\n            min: -0.733,\n            max: 0.197,\n        });\n        // make the allpass filters\n        this._allpassFilters = allpassFilterFreqs.map(freq => {\n            const allpass = this.context.createBiquadFilter();\n            allpass.type = \"allpass\";\n            allpass.frequency.value = freq;\n            return allpass;\n        });\n        // and the comb filters\n        this._feedbackCombFilters = combFilterDelayTimes.map((delayTime, index) => {\n            const fbcf = new FeedbackCombFilter({\n                context: this.context,\n                delayTime,\n            });\n            this._scaleRoomSize.connect(fbcf.resonance);\n            fbcf.resonance.value = combFilterResonances[index];\n            if (index < combFilterDelayTimes.length / 2) {\n                this.connectEffectLeft(...this._allpassFilters, fbcf);\n            }\n            else {\n                this.connectEffectRight(...this._allpassFilters, fbcf);\n            }\n            return fbcf;\n        });\n        // chain the allpass filters together\n        this.roomSize.connect(this._scaleRoomSize);\n        readOnly(this, [\"roomSize\"]);\n    }\n    static getDefaults() {\n        return Object.assign(StereoEffect.getDefaults(), {\n            roomSize: 0.5,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._allpassFilters.forEach(apf => apf.disconnect());\n        this._feedbackCombFilters.forEach(fbcf => fbcf.dispose());\n        this.roomSize.dispose();\n        this._scaleRoomSize.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=JCReverb.js.map","import { StereoFeedbackEffect } from \"./StereoFeedbackEffect\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +-----+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |\n * +-->                          +----->        +---->                          +---+ |\n * |                                                                                  |\n * +--------------------------------+ feedbackR <-------------------------------------+\n * ```\n */\nexport class StereoXFeedbackEffect extends StereoFeedbackEffect {\n    constructor(options) {\n        super(options);\n        // the left output connected to the right input\n        this._feedbackL.disconnect();\n        this._feedbackL.connect(this._feedbackMerge, 0, 1);\n        // the left output connected to the right input\n        this._feedbackR.disconnect();\n        this._feedbackR.connect(this._feedbackMerge, 0, 0);\n        readOnly(this, [\"feedback\"]);\n    }\n}\n//# sourceMappingURL=StereoXFeedbackEffect.js.map","import { StereoXFeedbackEffect } from \"./StereoXFeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * PingPongDelay is a feedback delay effect where the echo is heard\n * first in one channel and next in the opposite channel. In a stereo\n * system these are the right and left channels.\n * PingPongDelay in more simplified terms is two Tone.FeedbackDelays\n * with independent delay values. Each delay is routed to one channel\n * (left or right), and the channel triggered second will always\n * trigger at the same interval after the first.\n * @example\n * const pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toDestination();\n * const drum = new Tone.MembraneSynth().connect(pingPong);\n * drum.triggerAttackRelease(\"C4\", \"32n\");\n * @category Effect\n */\nexport class PingPongDelay extends StereoXFeedbackEffect {\n    constructor() {\n        super(optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n        this.name = \"PingPongDelay\";\n        const options = optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n        this._leftDelay = new Delay({\n            context: this.context,\n            maxDelay: options.maxDelay,\n        });\n        this._rightDelay = new Delay({\n            context: this.context,\n            maxDelay: options.maxDelay\n        });\n        this._rightPreDelay = new Delay({\n            context: this.context,\n            maxDelay: options.maxDelay\n        });\n        this.delayTime = new Signal({\n            context: this.context,\n            units: \"time\",\n            value: options.delayTime,\n        });\n        // connect it up\n        this.connectEffectLeft(this._leftDelay);\n        this.connectEffectRight(this._rightPreDelay, this._rightDelay);\n        this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n        // rearranged the feedback to be after the rightPreDelay\n        this._feedbackL.disconnect();\n        this._feedbackL.connect(this._rightDelay);\n        readOnly(this, [\"delayTime\"]);\n    }\n    static getDefaults() {\n        return Object.assign(StereoXFeedbackEffect.getDefaults(), {\n            delayTime: 0.25,\n            maxDelay: 1\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._leftDelay.dispose();\n        this._rightDelay.dispose();\n        this._rightPreDelay.dispose();\n        this.delayTime.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PingPongDelay.js.map","import { FeedbackEffect } from \"./FeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { intervalToFrequencyRatio } from \"../core/type/Conversions\";\n/**\n * PitchShift does near-realtime pitch shifting to the incoming signal.\n * The effect is achieved by speeding up or slowing down the delayTime\n * of a DelayNode using a sawtooth wave.\n * Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n * Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n * @category Effect\n */\nexport class PitchShift extends FeedbackEffect {\n    constructor() {\n        super(optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"]));\n        this.name = \"PitchShift\";\n        const options = optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"]);\n        this._frequency = new Signal({ context: this.context });\n        this._delayA = new Delay({\n            maxDelay: 1,\n            context: this.context\n        });\n        this._lfoA = new LFO({\n            context: this.context,\n            min: 0,\n            max: 0.1,\n            type: \"sawtooth\"\n        }).connect(this._delayA.delayTime);\n        this._delayB = new Delay({\n            maxDelay: 1,\n            context: this.context\n        });\n        this._lfoB = new LFO({\n            context: this.context,\n            min: 0,\n            max: 0.1,\n            type: \"sawtooth\",\n            phase: 180\n        }).connect(this._delayB.delayTime);\n        this._crossFade = new CrossFade({ context: this.context });\n        this._crossFadeLFO = new LFO({\n            context: this.context,\n            min: 0,\n            max: 1,\n            type: \"triangle\",\n            phase: 90\n        }).connect(this._crossFade.fade);\n        this._feedbackDelay = new Delay({\n            delayTime: options.delayTime,\n            context: this.context,\n        });\n        this.delayTime = this._feedbackDelay.delayTime;\n        readOnly(this, \"delayTime\");\n        this._pitch = options.pitch;\n        this._windowSize = options.windowSize;\n        // connect the two delay lines up\n        this._delayA.connect(this._crossFade.a);\n        this._delayB.connect(this._crossFade.b);\n        // connect the frequency\n        this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n        // route the input\n        this.effectSend.fan(this._delayA, this._delayB);\n        this._crossFade.chain(this._feedbackDelay, this.effectReturn);\n        // start the LFOs at the same time\n        const now = this.now();\n        this._lfoA.start(now);\n        this._lfoB.start(now);\n        this._crossFadeLFO.start(now);\n        // set the initial value\n        this.windowSize = this._windowSize;\n    }\n    static getDefaults() {\n        return Object.assign(FeedbackEffect.getDefaults(), {\n            pitch: 0,\n            windowSize: 0.1,\n            delayTime: 0,\n            feedback: 0\n        });\n    }\n    /**\n     * Repitch the incoming signal by some interval (measured in semi-tones).\n     * @example\n     * const pitchShift = new Tone.PitchShift().toDestination();\n     * const osc = new Tone.Oscillator().connect(pitchShift).start().toDestination();\n     * pitchShift.pitch = -12; // down one octave\n     * pitchShift.pitch = 7; // up a fifth\n     */\n    get pitch() {\n        return this._pitch;\n    }\n    set pitch(interval) {\n        this._pitch = interval;\n        let factor = 0;\n        if (interval < 0) {\n            this._lfoA.min = 0;\n            this._lfoA.max = this._windowSize;\n            this._lfoB.min = 0;\n            this._lfoB.max = this._windowSize;\n            factor = intervalToFrequencyRatio(interval - 1) + 1;\n        }\n        else {\n            this._lfoA.min = this._windowSize;\n            this._lfoA.max = 0;\n            this._lfoB.min = this._windowSize;\n            this._lfoB.max = 0;\n            factor = intervalToFrequencyRatio(interval) - 1;\n        }\n        this._frequency.value = factor * (1.2 / this._windowSize);\n    }\n    /**\n     * The window size corresponds roughly to the sample length in a looping sampler.\n     * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n     * signal, but larger values will result in smoother pitch shifting for larger intervals.\n     * A nominal range of 0.03 to 0.1 is recommended.\n     */\n    get windowSize() {\n        return this._windowSize;\n    }\n    set windowSize(size) {\n        this._windowSize = this.toSeconds(size);\n        this.pitch = this._pitch;\n    }\n    dispose() {\n        super.dispose();\n        this._frequency.dispose();\n        this._delayA.dispose();\n        this._delayB.dispose();\n        this._lfoA.dispose();\n        this._lfoB.dispose();\n        this._crossFade.dispose();\n        this._crossFadeLFO.dispose();\n        this._feedbackDelay.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PitchShift.js.map","import { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Phaser is a phaser effect. Phasers work by changing the phase\n * of different frequency components of an incoming signal. Read more on\n * [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).\n * Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n * @example\n * const phaser = new Tone.Phaser({\n * \tfrequency: 15,\n * \toctaves: 5,\n * \tbaseFrequency: 1000\n * }).toDestination();\n * const synth = new Tone.FMSynth().connect(phaser);\n * synth.triggerAttackRelease(\"E3\", \"2n\");\n * @category Effect\n */\nexport class Phaser extends StereoEffect {\n    constructor() {\n        super(optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"]));\n        this.name = \"Phaser\";\n        const options = optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"]);\n        this._lfoL = new LFO({\n            context: this.context,\n            frequency: options.frequency,\n            min: 0,\n            max: 1\n        });\n        this._lfoR = new LFO({\n            context: this.context,\n            frequency: options.frequency,\n            min: 0,\n            max: 1,\n            phase: 180,\n        });\n        this._baseFrequency = this.toFrequency(options.baseFrequency);\n        this._octaves = options.octaves;\n        this.Q = new Signal({\n            context: this.context,\n            value: options.Q,\n            units: \"positive\",\n        });\n        this._filtersL = this._makeFilters(options.stages, this._lfoL);\n        this._filtersR = this._makeFilters(options.stages, this._lfoR);\n        this.frequency = this._lfoL.frequency;\n        this.frequency.value = options.frequency;\n        // connect them up\n        this.connectEffectLeft(...this._filtersL);\n        this.connectEffectRight(...this._filtersR);\n        // control the frequency with one LFO\n        this._lfoL.frequency.connect(this._lfoR.frequency);\n        // set the options\n        this.baseFrequency = options.baseFrequency;\n        this.octaves = options.octaves;\n        // start the lfo\n        this._lfoL.start();\n        this._lfoR.start();\n        readOnly(this, [\"frequency\", \"Q\"]);\n    }\n    static getDefaults() {\n        return Object.assign(StereoEffect.getDefaults(), {\n            frequency: 0.5,\n            octaves: 3,\n            stages: 10,\n            Q: 10,\n            baseFrequency: 350,\n        });\n    }\n    _makeFilters(stages, connectToFreq) {\n        const filters = [];\n        // make all the filters\n        for (let i = 0; i < stages; i++) {\n            const filter = this.context.createBiquadFilter();\n            filter.type = \"allpass\";\n            this.Q.connect(filter.Q);\n            connectToFreq.connect(filter.frequency);\n            filters.push(filter);\n        }\n        return filters;\n    }\n    /**\n     * The number of octaves the phase goes above the baseFrequency\n     */\n    get octaves() {\n        return this._octaves;\n    }\n    set octaves(octaves) {\n        this._octaves = octaves;\n        const max = this._baseFrequency * Math.pow(2, octaves);\n        this._lfoL.max = max;\n        this._lfoR.max = max;\n    }\n    /**\n     * The the base frequency of the filters.\n     */\n    get baseFrequency() {\n        return this._baseFrequency;\n    }\n    set baseFrequency(freq) {\n        this._baseFrequency = this.toFrequency(freq);\n        this._lfoL.min = this._baseFrequency;\n        this._lfoR.min = this._baseFrequency;\n        this.octaves = this._octaves;\n    }\n    dispose() {\n        super.dispose();\n        this.Q.dispose();\n        this._lfoL.dispose();\n        this._lfoR.dispose();\n        this._filtersL.forEach(f => f.disconnect());\n        this._filtersR.forEach(f => f.disconnect());\n        this.frequency.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Phaser.js.map","import { __awaiter } from \"tslib\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Effect } from \"./Effect\";\nimport { OfflineContext } from \"../core/context/OfflineContext\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assertRange } from \"../core/util/Debug\";\n/**\n * Simple convolution created with decaying noise.\n * Generates an Impulse Response Buffer\n * with Tone.Offline then feeds the IR into ConvolverNode.\n * The impulse response generation is async, so you have\n * to wait until [[ready]] resolves before it will make a sound.\n *\n * Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).\n * Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.\n *\n * @category Effect\n */\nexport class Reverb extends Effect {\n    constructor() {\n        super(optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]));\n        this.name = \"Reverb\";\n        /**\n         * Convolver node\n         */\n        this._convolver = this.context.createConvolver();\n        /**\n         * Resolves when the reverb buffer is generated. Whenever either [[decay]]\n         * or [[preDelay]] are set, you have to wait until [[ready]] resolves\n         * before the IR is generated with the latest values.\n         */\n        this.ready = Promise.resolve();\n        const options = optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]);\n        this._decay = options.decay;\n        this._preDelay = options.preDelay;\n        this.generate();\n        this.connectEffect(this._convolver);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            decay: 1.5,\n            preDelay: 0.01,\n        });\n    }\n    /**\n     * The duration of the reverb.\n     */\n    get decay() {\n        return this._decay;\n    }\n    set decay(time) {\n        time = this.toSeconds(time);\n        assertRange(time, 0.001);\n        this._decay = time;\n        this.generate();\n    }\n    /**\n     * The amount of time before the reverb is fully ramped in.\n     */\n    get preDelay() {\n        return this._preDelay;\n    }\n    set preDelay(time) {\n        time = this.toSeconds(time);\n        assertRange(time, 0);\n        this._preDelay = time;\n        this.generate();\n    }\n    /**\n     * Generate the Impulse Response. Returns a promise while the IR is being generated.\n     * @return Promise which returns this object.\n     */\n    generate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const previousReady = this.ready;\n            // create a noise burst which decays over the duration in each channel\n            const context = new OfflineContext(2, this._decay + this._preDelay, this.context.sampleRate);\n            const noiseL = new Noise({ context });\n            const noiseR = new Noise({ context });\n            const merge = new Merge({ context });\n            noiseL.connect(merge, 0, 0);\n            noiseR.connect(merge, 0, 1);\n            const gainNode = new Gain({ context }).toDestination();\n            merge.connect(gainNode);\n            noiseL.start(0);\n            noiseR.start(0);\n            // predelay\n            gainNode.gain.setValueAtTime(0, 0);\n            gainNode.gain.setValueAtTime(1, this._preDelay);\n            // decay\n            gainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);\n            // render the buffer\n            const renderPromise = context.render();\n            this.ready = renderPromise.then(noOp);\n            // wait for the previous `ready` to resolve\n            yield previousReady;\n            // set the buffer\n            this._convolver.buffer = (yield renderPromise).get();\n            return this;\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._convolver.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Reverb.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Split } from \"./Split\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels).\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n */\nexport class MidSideSplit extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(MidSideSplit.getDefaults(), arguments));\n        this.name = \"MidSideSplit\";\n        this._split = this.input = new Split({\n            channels: 2,\n            context: this.context\n        });\n        this._midAdd = new Add({ context: this.context });\n        this.mid = new Multiply({\n            context: this.context,\n            value: Math.SQRT1_2,\n        });\n        this._sideSubtract = new Subtract({ context: this.context });\n        this.side = new Multiply({\n            context: this.context,\n            value: Math.SQRT1_2,\n        });\n        this._split.connect(this._midAdd, 0);\n        this._split.connect(this._midAdd.addend, 1);\n        this._split.connect(this._sideSubtract, 0);\n        this._split.connect(this._sideSubtract.subtrahend, 1);\n        this._midAdd.connect(this.mid);\n        this._sideSubtract.connect(this.side);\n    }\n    dispose() {\n        super.dispose();\n        this.mid.dispose();\n        this.side.dispose();\n        this._midAdd.dispose();\n        this._sideSubtract.dispose();\n        this._split.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MidSideSplit.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Merge } from \"./Merge\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * MidSideMerge merges the mid and side signal after they've been separated by [[MidSideMerge]]\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ\n * ```\n */\nexport class MidSideMerge extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(MidSideMerge.getDefaults(), arguments));\n        this.name = \"MidSideMerge\";\n        this.mid = new Gain({ context: this.context });\n        this.side = new Gain({ context: this.context });\n        this._left = new Add({ context: this.context });\n        this._leftMult = new Multiply({\n            context: this.context,\n            value: Math.SQRT1_2\n        });\n        this._right = new Subtract({ context: this.context });\n        this._rightMult = new Multiply({\n            context: this.context,\n            value: Math.SQRT1_2\n        });\n        this._merge = this.output = new Merge({ context: this.context });\n        this.mid.fan(this._left);\n        this.side.connect(this._left.addend);\n        this.mid.connect(this._right);\n        this.side.connect(this._right.subtrahend);\n        this._left.connect(this._leftMult);\n        this._right.connect(this._rightMult);\n        this._leftMult.connect(this._merge, 0, 0);\n        this._rightMult.connect(this._merge, 0, 1);\n    }\n    dispose() {\n        super.dispose();\n        this.mid.dispose();\n        this.side.dispose();\n        this._leftMult.dispose();\n        this._rightMult.dispose();\n        this._left.dispose();\n        this._right.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MidSideMerge.js.map","import { Effect } from \"./Effect\";\nimport { MidSideSplit } from \"../component/channel/MidSideSplit\";\nimport { MidSideMerge } from \"../component/channel/MidSideMerge\";\n/**\n * Mid/Side processing separates the the 'mid' signal\n * (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels)\n * and effects them separately before being recombined.\n * Applies a Mid/Side seperation and recombination.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * This is a base-class for Mid/Side Effects.\n */\nexport class MidSideEffect extends Effect {\n    constructor(options) {\n        super(options);\n        this.name = \"MidSideEffect\";\n        this._midSideMerge = new MidSideMerge({ context: this.context });\n        this._midSideSplit = new MidSideSplit({ context: this.context });\n        this._midSend = this._midSideSplit.mid;\n        this._sideSend = this._midSideSplit.side;\n        this._midReturn = this._midSideMerge.mid;\n        this._sideReturn = this._midSideMerge.side;\n        // the connections\n        this.effectSend.connect(this._midSideSplit);\n        this._midSideMerge.connect(this.effectReturn);\n    }\n    /**\n     * Connect the mid chain of the effect\n     */\n    connectEffectMid(...nodes) {\n        this._midSend.chain(...nodes, this._midReturn);\n    }\n    /**\n     * Connect the side chain of the effect\n     */\n    connectEffectSide(...nodes) {\n        this._sideSend.chain(...nodes, this._sideReturn);\n    }\n    dispose() {\n        super.dispose();\n        this._midSideSplit.dispose();\n        this._midSideMerge.dispose();\n        this._midSend.dispose();\n        this._sideSend.dispose();\n        this._midReturn.dispose();\n        this._sideReturn.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MidSideEffect.js.map","import { MidSideEffect } from \"../effect/MidSideEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Subtract } from \"../signal/Subtract\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { connect } from \"../core/context/ToneAudioNode\";\n/**\n * Applies a width factor to the mid/side seperation.\n * 0 is all mid and 1 is all side.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * ```\n * Mid *= 2*(1-width)<br>\n * Side *= 2*width\n * ```\n * @category Effect\n */\nexport class StereoWidener extends MidSideEffect {\n    constructor() {\n        super(optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]));\n        this.name = \"StereoWidener\";\n        const options = optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]);\n        this.width = new Signal({\n            context: this.context,\n            value: options.width,\n            units: \"normalRange\",\n        });\n        readOnly(this, [\"width\"]);\n        this._twoTimesWidthMid = new Multiply({\n            context: this.context,\n            value: 2,\n        });\n        this._twoTimesWidthSide = new Multiply({\n            context: this.context,\n            value: 2,\n        });\n        this._midMult = new Multiply({ context: this.context });\n        this._twoTimesWidthMid.connect(this._midMult.factor);\n        this.connectEffectMid(this._midMult);\n        this._oneMinusWidth = new Subtract({ context: this.context });\n        this._oneMinusWidth.connect(this._twoTimesWidthMid);\n        connect(this.context.getConstant(1), this._oneMinusWidth);\n        this.width.connect(this._oneMinusWidth.subtrahend);\n        this._sideMult = new Multiply({ context: this.context });\n        this.width.connect(this._twoTimesWidthSide);\n        this._twoTimesWidthSide.connect(this._sideMult.factor);\n        this.connectEffectSide(this._sideMult);\n    }\n    static getDefaults() {\n        return Object.assign(MidSideEffect.getDefaults(), {\n            width: 0.5,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.width.dispose();\n        this._midMult.dispose();\n        this._sideMult.dispose();\n        this._twoTimesWidthMid.dispose();\n        this._twoTimesWidthSide.dispose();\n        this._oneMinusWidth.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=StereoWidener.js.map","import { StereoEffect } from \"./StereoEffect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Signal } from \"../signal/Signal\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Tremolo modulates the amplitude of an incoming signal using an [[LFO]].\n * The effect is a stereo effect where the modulation phase is inverted in each channel.\n *\n * @example\n * // create a tremolo and start it's LFO\n * const tremolo = new Tone.Tremolo(9, 0.75).toDestination().start();\n * // route an oscillator through the tremolo and start it\n * const oscillator = new Tone.Oscillator().connect(tremolo).start();\n *\n * @category Effect\n */\nexport class Tremolo extends StereoEffect {\n    constructor() {\n        super(optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n        this.name = \"Tremolo\";\n        const options = optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n        this._lfoL = new LFO({\n            context: this.context,\n            type: options.type,\n            min: 1,\n            max: 0,\n        });\n        this._lfoR = new LFO({\n            context: this.context,\n            type: options.type,\n            min: 1,\n            max: 0,\n        });\n        this._amplitudeL = new Gain({ context: this.context });\n        this._amplitudeR = new Gain({ context: this.context });\n        this.frequency = new Signal({\n            context: this.context,\n            value: options.frequency,\n            units: \"frequency\",\n        });\n        this.depth = new Signal({\n            context: this.context,\n            value: options.depth,\n            units: \"normalRange\",\n        });\n        readOnly(this, [\"frequency\", \"depth\"]);\n        this.connectEffectLeft(this._amplitudeL);\n        this.connectEffectRight(this._amplitudeR);\n        this._lfoL.connect(this._amplitudeL.gain);\n        this._lfoR.connect(this._amplitudeR.gain);\n        this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n        this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n        this.spread = options.spread;\n    }\n    static getDefaults() {\n        return Object.assign(StereoEffect.getDefaults(), {\n            frequency: 10,\n            type: \"sine\",\n            depth: 0.5,\n            spread: 180,\n        });\n    }\n    /**\n     * Start the tremolo.\n     */\n    start(time) {\n        this._lfoL.start(time);\n        this._lfoR.start(time);\n        return this;\n    }\n    /**\n     * Stop the tremolo.\n     */\n    stop(time) {\n        this._lfoL.stop(time);\n        this._lfoR.stop(time);\n        return this;\n    }\n    /**\n     * Sync the effect to the transport.\n     */\n    sync() {\n        this._lfoL.sync();\n        this._lfoR.sync();\n        this.context.transport.syncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * Unsync the filter from the transport\n     */\n    unsync() {\n        this._lfoL.unsync();\n        this._lfoR.unsync();\n        this.context.transport.unsyncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * The oscillator type.\n     */\n    get type() {\n        return this._lfoL.type;\n    }\n    set type(type) {\n        this._lfoL.type = type;\n        this._lfoR.type = type;\n    }\n    /**\n     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n     * When set to 180, LFO's will be panned hard left and right respectively.\n     */\n    get spread() {\n        return this._lfoR.phase - this._lfoL.phase; // 180\n    }\n    set spread(spread) {\n        this._lfoL.phase = 90 - (spread / 2);\n        this._lfoR.phase = (spread / 2) + 90;\n    }\n    dispose() {\n        super.dispose();\n        this._lfoL.dispose();\n        this._lfoR.dispose();\n        this._amplitudeL.dispose();\n        this._amplitudeR.dispose();\n        this.frequency.dispose();\n        this.depth.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Tremolo.js.map","import { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall.\n * @category Effect\n */\nexport class Vibrato extends Effect {\n    constructor() {\n        super(optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n        this.name = \"Vibrato\";\n        const options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n        this._delayNode = new Delay({\n            context: this.context,\n            delayTime: 0,\n            maxDelay: options.maxDelay,\n        });\n        this._lfo = new LFO({\n            context: this.context,\n            type: options.type,\n            min: 0,\n            max: options.maxDelay,\n            frequency: options.frequency,\n            phase: -90 // offse the phase so the resting position is in the center\n        }).start().connect(this._delayNode.delayTime);\n        this.frequency = this._lfo.frequency;\n        this.depth = this._lfo.amplitude;\n        this.depth.value = options.depth;\n        readOnly(this, [\"frequency\", \"depth\"]);\n        this.effectSend.chain(this._delayNode, this.effectReturn);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            maxDelay: 0.005,\n            frequency: 5,\n            depth: 0.1,\n            type: \"sine\"\n        });\n    }\n    /**\n     * Type of oscillator attached to the Vibrato.\n     */\n    get type() {\n        return this._lfo.type;\n    }\n    set type(type) {\n        this._lfo.type = type;\n    }\n    dispose() {\n        super.dispose();\n        this._delayNode.dispose();\n        this._lfo.dispose();\n        this.frequency.dispose();\n        this.depth.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Vibrato.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Split } from \"../channel/Split\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { assert, assertRange } from \"../../core/util/Debug\";\n/**\n * Wrapper around the native Web Audio's [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n * Extracts FFT or Waveform data from the incoming signal.\n * @category Component\n */\nexport class Analyser extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]));\n        this.name = \"Analyser\";\n        /**\n         * The analyser node.\n         */\n        this._analysers = [];\n        /**\n         * The buffer that the FFT data is written to\n         */\n        this._buffers = [];\n        const options = optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]);\n        this.input = this.output = this._gain = new Gain({ context: this.context });\n        this._split = new Split({\n            context: this.context,\n            channels: options.channels,\n        });\n        this.input.connect(this._split);\n        assertRange(options.channels, 1);\n        // create the analysers\n        for (let channel = 0; channel < options.channels; channel++) {\n            this._analysers[channel] = this.context.createAnalyser();\n            this._split.connect(this._analysers[channel], channel, 0);\n        }\n        // set the values initially\n        this.size = options.size;\n        this.type = options.type;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            size: 1024,\n            smoothing: 0.8,\n            type: \"fft\",\n            channels: 1,\n        });\n    }\n    /**\n     * Run the analysis given the current settings. If [[channels]] = 1,\n     * it will return a Float32Array. If [[channels]] > 1, it will\n     * return an array of Float32Arrays where each index in the array\n     * represents the analysis done on a channel.\n     */\n    getValue() {\n        this._analysers.forEach((analyser, index) => {\n            const buffer = this._buffers[index];\n            if (this._type === \"fft\") {\n                analyser.getFloatFrequencyData(buffer);\n            }\n            else if (this._type === \"waveform\") {\n                analyser.getFloatTimeDomainData(buffer);\n            }\n        });\n        if (this.channels === 1) {\n            return this._buffers[0];\n        }\n        else {\n            return this._buffers;\n        }\n    }\n    /**\n     * The size of analysis. This must be a power of two in the range 16 to 16384.\n     */\n    get size() {\n        return this._analysers[0].frequencyBinCount;\n    }\n    set size(size) {\n        this._analysers.forEach((analyser, index) => {\n            analyser.fftSize = size * 2;\n            this._buffers[index] = new Float32Array(size);\n        });\n    }\n    /**\n     * The number of channels the analyser does the analysis on. Channel\n     * separation is done using [[Split]]\n     */\n    get channels() {\n        return this._analysers.length;\n    }\n    /**\n     * The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        assert(type === \"waveform\" || type === \"fft\", `Analyser: invalid type: ${type}`);\n        this._type = type;\n    }\n    /**\n     * 0 represents no time averaging with the last analysis frame.\n     */\n    get smoothing() {\n        return this._analysers[0].smoothingTimeConstant;\n    }\n    set smoothing(val) {\n        this._analysers.forEach(a => a.smoothingTimeConstant = val);\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._analysers.forEach(a => a.disconnect());\n        this._split.dispose();\n        this._gain.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Analyser.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Analyser } from \"./Analyser\";\n/**\n * The base class for Metering classes.\n */\nexport class MeterBase extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(MeterBase.getDefaults(), arguments));\n        this.name = \"MeterBase\";\n        this.input = this.output = this._analyser = new Analyser({\n            context: this.context,\n            size: 256,\n            type: \"waveform\",\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._analyser.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MeterBase.js.map","import { gainToDb } from \"../../core/type/Conversions\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\nimport { warn } from \"../../core/util/Debug\";\nimport { Analyser } from \"./Analyser\";\n/**\n * Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n * of an input signal. It can also get the raw value of the input signal.\n *\n * @example\n * const meter = new Tone.Meter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * setInterval(() => console.log(meter.getValue()), 100);\n * @category Component\n */\nexport class Meter extends MeterBase {\n    constructor() {\n        super(optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"]));\n        this.name = \"Meter\";\n        /**\n         * The previous frame's value\n         */\n        this._rms = 0;\n        const options = optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"]);\n        this.input = this.output = this._analyser = new Analyser({\n            context: this.context,\n            size: 256,\n            type: \"waveform\",\n            channels: options.channels,\n        });\n        this.smoothing = options.smoothing,\n            this.normalRange = options.normalRange;\n    }\n    static getDefaults() {\n        return Object.assign(MeterBase.getDefaults(), {\n            smoothing: 0.8,\n            normalRange: false,\n            channels: 1,\n        });\n    }\n    /**\n     * Use [[getValue]] instead. For the previous getValue behavior, use DCMeter.\n     * @deprecated\n     */\n    getLevel() {\n        warn(\"'getLevel' has been changed to 'getValue'\");\n        return this.getValue();\n    }\n    /**\n     * Get the current value of the incoming signal.\n     * Output is in decibels when [[normalRange]] is `false`.\n     * If [[channels]] = 1, then the output is a single number\n     * representing the value of the input signal. When [[channels]] > 1,\n     * then each channel is returned as a value in a number array.\n     */\n    getValue() {\n        const aValues = this._analyser.getValue();\n        const channelValues = this.channels === 1 ? [aValues] : aValues;\n        const vals = channelValues.map(values => {\n            const totalSquared = values.reduce((total, current) => total + current * current, 0);\n            const rms = Math.sqrt(totalSquared / values.length);\n            // the rms can only fall at the rate of the smoothing\n            // but can jump up instantly\n            this._rms = Math.max(rms, this._rms * this.smoothing);\n            return this.normalRange ? this._rms : gainToDb(this._rms);\n        });\n        if (this.channels === 1) {\n            return vals[0];\n        }\n        else {\n            return vals;\n        }\n    }\n    /**\n     * The number of channels of analysis.\n     */\n    get channels() {\n        return this._analyser.channels;\n    }\n    dispose() {\n        super.dispose();\n        this._analyser.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Meter.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { dbToGain } from \"../../core/type/Conversions\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\nimport { assert } from \"../../core/util/Debug\";\n/**\n * Get the current frequency data of the connected audio source using a fast Fourier transform.\n * @category Component\n */\nexport class FFT extends MeterBase {\n    constructor() {\n        super(optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"]));\n        this.name = \"FFT\";\n        const options = optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"]);\n        this.normalRange = options.normalRange;\n        this._analyser.type = \"fft\";\n        this.size = options.size;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            normalRange: false,\n            size: 1024,\n            smoothing: 0.8,\n        });\n    }\n    /**\n     * Gets the current frequency data from the connected audio source.\n     * Returns the frequency data of length [[size]] as a Float32Array of decibel values.\n     */\n    getValue() {\n        const values = this._analyser.getValue();\n        return values.map(v => this.normalRange ? dbToGain(v) : v);\n    }\n    /**\n     * The size of analysis. This must be a power of two in the range 16 to 16384.\n     * Determines the size of the array returned by [[getValue]] (i.e. the number of\n     * frequency bins). Large FFT sizes may be costly to compute.\n     */\n    get size() {\n        return this._analyser.size;\n    }\n    set size(size) {\n        this._analyser.size = size;\n    }\n    /**\n     * 0 represents no time averaging with the last analysis frame.\n     */\n    get smoothing() {\n        return this._analyser.smoothing;\n    }\n    set smoothing(val) {\n        this._analyser.smoothing = val;\n    }\n    /**\n     * Returns the frequency value in hertz of each of the indices of the FFT's [[getValue]] response.\n     * @example\n     * const fft = new Tone.FFT(32);\n     * console.log([0, 1, 2, 3, 4].map(index => fft.getFrequencyOfIndex(index)));\n     */\n    getFrequencyOfIndex(index) {\n        assert(0 <= index && index < this.size, `index must be greater than or equal to 0 and less than ${this.size}`);\n        return index * this.context.sampleRate / (this.size * 2);\n    }\n}\n//# sourceMappingURL=FFT.js.map","import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * DCMeter gets the raw value of the input signal at the current time.\n *\n * @example\n * const meter = new Tone.DCMeter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\nexport class DCMeter extends MeterBase {\n    constructor() {\n        super(optionsFromArguments(DCMeter.getDefaults(), arguments));\n        this.name = \"DCMeter\";\n        this._analyser.type = \"waveform\";\n        this._analyser.size = 256;\n    }\n    /**\n     * Get the signal value of the incoming signal\n     */\n    getValue() {\n        const value = this._analyser.getValue();\n        return value[0];\n    }\n}\n//# sourceMappingURL=DCMeter.js.map","import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * Get the current waveform data of the connected audio source.\n * @category Component\n */\nexport class Waveform extends MeterBase {\n    constructor() {\n        super(optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"]));\n        this.name = \"Waveform\";\n        const options = optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"]);\n        this._analyser.type = \"waveform\";\n        this.size = options.size;\n    }\n    static getDefaults() {\n        return Object.assign(MeterBase.getDefaults(), {\n            size: 1024,\n        });\n    }\n    /**\n     * Return the waveform for the current time as a Float32Array where each value in the array\n     * represents a sample in the waveform.\n     */\n    getValue() {\n        return this._analyser.getValue();\n    }\n    /**\n     * The size of analysis. This must be a power of two in the range 16 to 16384.\n     * Determines the size of the array returned by [[getValue]].\n     */\n    get size() {\n        return this._analyser.size;\n    }\n    set size(size) {\n        this._analyser.size = size;\n    }\n}\n//# sourceMappingURL=Waveform.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,\n * it will mute all other instances of Solo.\n * @example\n * const soloA = new Tone.Solo().toDestination();\n * const oscA = new Tone.Oscillator(\"C4\", \"sawtooth\").connect(soloA);\n * const soloB = new Tone.Solo().toDestination();\n * const oscB = new Tone.Oscillator(\"E4\", \"square\").connect(soloB);\n * soloA.solo = true;\n * // no audio will pass through soloB\n * @category Component\n */\nexport class Solo extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]));\n        this.name = \"Solo\";\n        const options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n        this.input = this.output = new Gain({\n            context: this.context,\n        });\n        if (!Solo._allSolos.has(this.context)) {\n            Solo._allSolos.set(this.context, new Set());\n        }\n        Solo._allSolos.get(this.context).add(this);\n        // set initially\n        this.solo = options.solo;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            solo: false,\n        });\n    }\n    /**\n     * Isolates this instance and mutes all other instances of Solo.\n     * Only one instance can be soloed at a time. A soloed\n     * instance will report `solo=false` when another instance is soloed.\n     */\n    get solo() {\n        return this._isSoloed();\n    }\n    set solo(solo) {\n        if (solo) {\n            this._addSolo();\n        }\n        else {\n            this._removeSolo();\n        }\n        Solo._allSolos.get(this.context).forEach(instance => instance._updateSolo());\n    }\n    /**\n     * If the current instance is muted, i.e. another instance is soloed\n     */\n    get muted() {\n        return this.input.gain.value === 0;\n    }\n    /**\n     * Add this to the soloed array\n     */\n    _addSolo() {\n        if (!Solo._soloed.has(this.context)) {\n            Solo._soloed.set(this.context, new Set());\n        }\n        Solo._soloed.get(this.context).add(this);\n    }\n    /**\n     * Remove this from the soloed array\n     */\n    _removeSolo() {\n        if (Solo._soloed.has(this.context)) {\n            Solo._soloed.get(this.context).delete(this);\n        }\n    }\n    /**\n     * Is this on the soloed array\n     */\n    _isSoloed() {\n        return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);\n    }\n    /**\n     * Returns true if no one is soloed\n     */\n    _noSolos() {\n        // either does not have any soloed added\n        return !Solo._soloed.has(this.context) ||\n            // or has a solo set but doesn't include any items\n            (Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0);\n    }\n    /**\n     * Solo the current instance and unsolo all other instances.\n     */\n    _updateSolo() {\n        if (this._isSoloed()) {\n            this.input.gain.value = 1;\n        }\n        else if (this._noSolos()) {\n            // no one is soloed\n            this.input.gain.value = 1;\n        }\n        else {\n            this.input.gain.value = 0;\n        }\n    }\n    dispose() {\n        super.dispose();\n        Solo._allSolos.get(this.context).delete(this);\n        this._removeSolo();\n        return this;\n    }\n}\n/**\n * Hold all of the solo'ed tracks belonging to a specific context\n */\nSolo._allSolos = new Map();\n/**\n * Hold the currently solo'ed instance(s)\n */\nSolo._soloed = new Map();\n//# sourceMappingURL=Solo.js.map","import { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\nexport class PanVol extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]));\n        this.name = \"PanVol\";\n        const options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n        this._panner = this.input = new Panner({\n            context: this.context,\n            pan: options.pan,\n            channelCount: options.channelCount,\n        });\n        this.pan = this._panner.pan;\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        // connections\n        this._panner.connect(this._volume);\n        this.mute = options.mute;\n        readOnly(this, [\"pan\", \"volume\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            pan: 0,\n            volume: 0,\n            channelCount: 1,\n        });\n    }\n    /**\n     * Mute/unmute the volume\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    dispose() {\n        super.dispose();\n        this._panner.dispose();\n        this.pan.dispose();\n        this._volume.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PanVol.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Solo } from \"./Solo\";\nimport { PanVol } from \"./PanVol\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * Channel provides a channel strip interface with volume, pan, solo and mute controls.\n * See [[PanVol]] and [[Solo]]\n * @example\n * // pan the incoming signal left and drop the volume 12db\n * const channel = new Tone.Channel(-0.25, -12);\n * @category Component\n */\nexport class Channel extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]));\n        this.name = \"Channel\";\n        const options = optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]);\n        this._solo = this.input = new Solo({\n            solo: options.solo,\n            context: this.context,\n        });\n        this._panVol = this.output = new PanVol({\n            context: this.context,\n            pan: options.pan,\n            volume: options.volume,\n            mute: options.mute,\n            channelCount: options.channelCount\n        });\n        this.pan = this._panVol.pan;\n        this.volume = this._panVol.volume;\n        this._solo.connect(this._panVol);\n        readOnly(this, [\"pan\", \"volume\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            pan: 0,\n            volume: 0,\n            mute: false,\n            solo: false,\n            channelCount: 1,\n        });\n    }\n    /**\n     * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances\n     */\n    get solo() {\n        return this._solo.solo;\n    }\n    set solo(solo) {\n        this._solo.solo = solo;\n    }\n    /**\n     * If the current instance is muted, i.e. another instance is soloed,\n     * or the channel is muted\n     */\n    get muted() {\n        return this._solo.muted || this.mute;\n    }\n    /**\n     * Mute/unmute the volume\n     */\n    get mute() {\n        return this._panVol.mute;\n    }\n    set mute(mute) {\n        this._panVol.mute = mute;\n    }\n    /**\n     * Get the gain node belonging to the bus name. Create it if\n     * it doesn't exist\n     * @param name The bus name\n     */\n    _getBus(name) {\n        if (!Channel.buses.has(name)) {\n            Channel.buses.set(name, new Gain({ context: this.context }));\n        }\n        return Channel.buses.get(name);\n    }\n    /**\n     * Send audio to another channel using a string. `send` is a lot like\n     * [[connect]], except it uses a string instead of an object. This can\n     * be useful in large applications to decouple sections since [[send]]\n     * and [[receive]] can be invoked separately in order to connect an object\n     * @param name The channel name to send the audio\n     * @param volume The amount of the signal to send.\n     * \tDefaults to 0db, i.e. send the entire signal\n     * @returns Returns the gain node of this connection.\n     */\n    send(name, volume = 0) {\n        const bus = this._getBus(name);\n        const sendKnob = new Gain({\n            context: this.context,\n            units: \"decibels\",\n            gain: volume,\n        });\n        this.connect(sendKnob);\n        sendKnob.connect(bus);\n        return sendKnob;\n    }\n    /**\n     * Receive audio from a channel which was connected with [[send]].\n     * @param name The channel name to receive audio from.\n     */\n    receive(name) {\n        const bus = this._getBus(name);\n        bus.connect(this);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._panVol.dispose();\n        this.pan.dispose();\n        this.volume.dispose();\n        this._solo.dispose();\n        return this;\n    }\n}\n/**\n * Store the send/receive channels by name.\n */\nChannel.buses = new Map();\n//# sourceMappingURL=Channel.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Filter } from \"../filter/Filter\";\n/**\n * Split the incoming signal into three bands (low, mid, high)\n * with two crossover frequency controls.\n * ```\n *            +----------------------+\n *          +-> input < lowFrequency +------------------> low\n *          | +----------------------+\n *          |\n *          | +--------------------------------------+\n * input ---+-> lowFrequency < input < highFrequency +--> mid\n *          | +--------------------------------------+\n *          |\n *          | +-----------------------+\n *          +-> highFrequency < input +-----------------> high\n *            +-----------------------+\n * ```\n * @category Component\n */\nexport class MultibandSplit extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"]));\n        this.name = \"MultibandSplit\";\n        /**\n         * the input\n         */\n        this.input = new Gain({ context: this.context });\n        /**\n         * no output node, use either low, mid or high outputs\n         */\n        this.output = undefined;\n        /**\n         * The low band.\n         */\n        this.low = new Filter({\n            context: this.context,\n            frequency: 0,\n            type: \"lowpass\",\n        });\n        /**\n         * the lower filter of the mid band\n         */\n        this._lowMidFilter = new Filter({\n            context: this.context,\n            frequency: 0,\n            type: \"highpass\",\n        });\n        /**\n         * The mid band output.\n         */\n        this.mid = new Filter({\n            context: this.context,\n            frequency: 0,\n            type: \"lowpass\",\n        });\n        /**\n         * The high band output.\n         */\n        this.high = new Filter({\n            context: this.context,\n            frequency: 0,\n            type: \"highpass\",\n        });\n        this._internalChannels = [this.low, this.mid, this.high];\n        const options = optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"]);\n        this.lowFrequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.lowFrequency,\n        });\n        this.highFrequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.highFrequency,\n        });\n        this.Q = new Signal({\n            context: this.context,\n            units: \"positive\",\n            value: options.Q,\n        });\n        this.input.fan(this.low, this.high);\n        this.input.chain(this._lowMidFilter, this.mid);\n        // the frequency control signal\n        this.lowFrequency.fan(this.low.frequency, this._lowMidFilter.frequency);\n        this.highFrequency.fan(this.mid.frequency, this.high.frequency);\n        // the Q value\n        this.Q.connect(this.low.Q);\n        this.Q.connect(this._lowMidFilter.Q);\n        this.Q.connect(this.mid.Q);\n        this.Q.connect(this.high.Q);\n        readOnly(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            Q: 1,\n            highFrequency: 2500,\n            lowFrequency: 400,\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        writable(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n        this.low.dispose();\n        this._lowMidFilter.dispose();\n        this.mid.dispose();\n        this.high.dispose();\n        this.lowFrequency.dispose();\n        this.highFrequency.dispose();\n        this.Q.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MultibandSplit.js.map","import { ToneAudioNode } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you\n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context.\n */\nexport class Listener extends ToneAudioNode {\n    constructor() {\n        super(...arguments);\n        this.name = \"Listener\";\n        this.positionX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionX,\n        });\n        this.positionY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionY,\n        });\n        this.positionZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionZ,\n        });\n        this.forwardX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardX,\n        });\n        this.forwardY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardY,\n        });\n        this.forwardZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardZ,\n        });\n        this.upX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upX,\n        });\n        this.upY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upY,\n        });\n        this.upZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upZ,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            positionX: 0,\n            positionY: 0,\n            positionZ: 0,\n            forwardX: 0,\n            forwardY: 0,\n            forwardZ: -1,\n            upX: 0,\n            upY: 1,\n            upZ: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.positionX.dispose();\n        this.positionY.dispose();\n        this.positionZ.dispose();\n        this.forwardX.dispose();\n        this.forwardY.dispose();\n        this.forwardZ.dispose();\n        this.upX.dispose();\n        this.upY.dispose();\n        this.upZ.dispose();\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.listener = new Listener({ context });\n});\nonContextClose(context => {\n    context.listener.dispose();\n});\n//# sourceMappingURL=Listener.js.map","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport \"../../core/context/Listener\";\n/**\n * A spatialized panner node which supports equalpower or HRTF panning.\n * @category Component\n */\nexport class Panner3D extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"]));\n        this.name = \"Panner3D\";\n        const options = optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"]);\n        this._panner = this.input = this.output = this.context.createPanner();\n        // set some values\n        this.panningModel = options.panningModel;\n        this.maxDistance = options.maxDistance;\n        this.distanceModel = options.distanceModel;\n        this.coneOuterGain = options.coneOuterGain;\n        this.coneOuterAngle = options.coneOuterAngle;\n        this.coneInnerAngle = options.coneInnerAngle;\n        this.refDistance = options.refDistance;\n        this.rolloffFactor = options.rolloffFactor;\n        this.positionX = new Param({\n            context: this.context,\n            param: this._panner.positionX,\n            value: options.positionX,\n        });\n        this.positionY = new Param({\n            context: this.context,\n            param: this._panner.positionY,\n            value: options.positionY,\n        });\n        this.positionZ = new Param({\n            context: this.context,\n            param: this._panner.positionZ,\n            value: options.positionZ,\n        });\n        this.orientationX = new Param({\n            context: this.context,\n            param: this._panner.orientationX,\n            value: options.orientationX,\n        });\n        this.orientationY = new Param({\n            context: this.context,\n            param: this._panner.orientationY,\n            value: options.orientationY,\n        });\n        this.orientationZ = new Param({\n            context: this.context,\n            param: this._panner.orientationZ,\n            value: options.orientationZ,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            coneInnerAngle: 360,\n            coneOuterAngle: 360,\n            coneOuterGain: 0,\n            distanceModel: \"inverse\",\n            maxDistance: 10000,\n            orientationX: 0,\n            orientationY: 0,\n            orientationZ: 0,\n            panningModel: \"equalpower\",\n            positionX: 0,\n            positionY: 0,\n            positionZ: 0,\n            refDistance: 1,\n            rolloffFactor: 1,\n        });\n    }\n    /**\n     * Sets the position of the source in 3d space.\n     */\n    setPosition(x, y, z) {\n        this.positionX.value = x;\n        this.positionY.value = y;\n        this.positionZ.value = z;\n        return this;\n    }\n    /**\n     * Sets the orientation of the source in 3d space.\n     */\n    setOrientation(x, y, z) {\n        this.orientationX.value = x;\n        this.orientationY.value = y;\n        this.orientationZ.value = z;\n        return this;\n    }\n    /**\n     * The panning model. Either \"equalpower\" or \"HRTF\".\n     */\n    get panningModel() {\n        return this._panner.panningModel;\n    }\n    set panningModel(val) {\n        this._panner.panningModel = val;\n    }\n    /**\n     * A reference distance for reducing volume as source move further from the listener\n     */\n    get refDistance() {\n        return this._panner.refDistance;\n    }\n    set refDistance(val) {\n        this._panner.refDistance = val;\n    }\n    /**\n     * Describes how quickly the volume is reduced as source moves away from listener.\n     */\n    get rolloffFactor() {\n        return this._panner.rolloffFactor;\n    }\n    set rolloffFactor(val) {\n        this._panner.rolloffFactor = val;\n    }\n    /**\n     * The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n     */\n    get distanceModel() {\n        return this._panner.distanceModel;\n    }\n    set distanceModel(val) {\n        this._panner.distanceModel = val;\n    }\n    /**\n     * The angle, in degrees, inside of which there will be no volume reduction\n     */\n    get coneInnerAngle() {\n        return this._panner.coneInnerAngle;\n    }\n    set coneInnerAngle(val) {\n        this._panner.coneInnerAngle = val;\n    }\n    /**\n     * The angle, in degrees, outside of which the volume will be reduced\n     * to a constant value of coneOuterGain\n     */\n    get coneOuterAngle() {\n        return this._panner.coneOuterAngle;\n    }\n    set coneOuterAngle(val) {\n        this._panner.coneOuterAngle = val;\n    }\n    /**\n     * The gain outside of the coneOuterAngle\n     */\n    get coneOuterGain() {\n        return this._panner.coneOuterGain;\n    }\n    set coneOuterGain(val) {\n        this._panner.coneOuterGain = val;\n    }\n    /**\n     * The maximum distance between source and listener,\n     * after which the volume will not be reduced any further.\n     */\n    get maxDistance() {\n        return this._panner.maxDistance;\n    }\n    set maxDistance(val) {\n        this._panner.maxDistance = val;\n    }\n    dispose() {\n        super.dispose();\n        this._panner.disconnect();\n        this.orientationX.dispose();\n        this.orientationY.dispose();\n        this.orientationZ.dispose();\n        this.positionX.dispose();\n        this.positionY.dispose();\n        this.positionZ.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Panner3D.js.map","import { __awaiter } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { assert } from \"../../core/util/Debug\";\nimport { theWindow } from \"../../core/context/AudioContext\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * A wrapper around the MediaRecorder API. Unlike the rest of Tone.js, this module does not offer\n * any sample-accurate scheduling because it is not a feature of the MediaRecorder API.\n * This is only natively supported in Chrome and Firefox.\n * For a cross-browser shim, install (audio-recorder-polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].\n * @example\n * const recorder = new Tone.Recorder();\n * const synth = new Tone.Synth().connect(recorder);\n * // start recording\n * recorder.start();\n * // generate a few notes\n * synth.triggerAttackRelease(\"C3\", 0.5);\n * synth.triggerAttackRelease(\"C4\", 0.5, \"+1\");\n * synth.triggerAttackRelease(\"C5\", 0.5, \"+2\");\n * // wait for the notes to end and stop the recording\n * setTimeout(async () => {\n * \t// the recorded audio is returned as a blob\n * \tconst recording = await recorder.stop();\n * \t// download the recording by creating an anchor element and blob url\n * \tconst url = URL.createObjectURL(recording);\n * \tconst anchor = document.createElement(\"a\");\n * \tanchor.download = \"recording.webm\";\n * \tanchor.href = url;\n * \tanchor.click();\n * }, 4000);\n */\nexport class Recorder extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Recorder.getDefaults(), arguments));\n        this.name = \"Recorder\";\n        const options = optionsFromArguments(Recorder.getDefaults(), arguments);\n        this.input = new Gain({\n            context: this.context\n        });\n        assert(Recorder.supported, \"Media Recorder API is not available\");\n        this._stream = this.context.createMediaStreamDestination();\n        this.input.connect(this._stream);\n        this._recorder = new MediaRecorder(this._stream.stream, {\n            mimeType: options.mimeType\n        });\n    }\n    static getDefaults() {\n        return ToneAudioNode.getDefaults();\n    }\n    /**\n     * The mime type is the format that the audio is encoded in. For Chrome\n     * that is typically webm encoded as \"vorbis\".\n     */\n    get mimeType() {\n        return this._recorder.mimeType;\n    }\n    /**\n     * Test if your platform supports the Media Recorder API. If it's not available,\n     * try installing this (polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].\n     */\n    static get supported() {\n        return theWindow !== null && Reflect.has(theWindow, \"MediaRecorder\");\n    }\n    /**\n     * Get the playback state of the Recorder, either \"started\", \"stopped\" or \"paused\"\n     */\n    get state() {\n        if (this._recorder.state === \"inactive\") {\n            return \"stopped\";\n        }\n        else if (this._recorder.state === \"paused\") {\n            return \"paused\";\n        }\n        else {\n            return \"started\";\n        }\n    }\n    /**\n     * Start the Recorder. Returns a promise which resolves\n     * when the recorder has started.\n     */\n    start() {\n        return __awaiter(this, void 0, void 0, function* () {\n            assert(this.state !== \"started\", \"Recorder is already started\");\n            const startPromise = new Promise(done => {\n                const handleStart = () => {\n                    this._recorder.removeEventListener(\"start\", handleStart, false);\n                    done();\n                };\n                this._recorder.addEventListener(\"start\", handleStart, false);\n            });\n            this._recorder.start();\n            return yield startPromise;\n        });\n    }\n    /**\n     * Stop the recorder. Returns a promise with the recorded content until this point\n     * encoded as [[mimeType]]\n     */\n    stop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            assert(this.state !== \"stopped\", \"Recorder is not started\");\n            const dataPromise = new Promise(done => {\n                const handleData = (e) => {\n                    this._recorder.removeEventListener(\"dataavailable\", handleData, false);\n                    done(e.data);\n                };\n                this._recorder.addEventListener(\"dataavailable\", handleData, false);\n            });\n            this._recorder.stop();\n            return yield dataPromise;\n        });\n    }\n    /**\n     * Pause the recorder\n     */\n    pause() {\n        assert(this.state === \"started\", \"Recorder must be started\");\n        this._recorder.pause();\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this._stream.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Recorder.js.map","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Compressor is a thin wrapper around the Web Audio\n * [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n * Compression reduces the volume of loud sounds or amplifies quiet sounds\n * by narrowing or \"compressing\" an audio signal's dynamic range.\n * Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n * @example\n * const comp = new Tone.Compressor(-30, 3);\n * @category Component\n */\nexport class Compressor extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]));\n        this.name = \"Compressor\";\n        /**\n         * the compressor node\n         */\n        this._compressor = this.context.createDynamicsCompressor();\n        this.input = this._compressor;\n        this.output = this._compressor;\n        const options = optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]);\n        this.threshold = new Param({\n            minValue: this._compressor.threshold.minValue,\n            maxValue: this._compressor.threshold.maxValue,\n            context: this.context,\n            convert: false,\n            param: this._compressor.threshold,\n            units: \"decibels\",\n            value: options.threshold,\n        });\n        this.attack = new Param({\n            minValue: this._compressor.attack.minValue,\n            maxValue: this._compressor.attack.maxValue,\n            context: this.context,\n            param: this._compressor.attack,\n            units: \"time\",\n            value: options.attack,\n        });\n        this.release = new Param({\n            minValue: this._compressor.release.minValue,\n            maxValue: this._compressor.release.maxValue,\n            context: this.context,\n            param: this._compressor.release,\n            units: \"time\",\n            value: options.release,\n        });\n        this.knee = new Param({\n            minValue: this._compressor.knee.minValue,\n            maxValue: this._compressor.knee.maxValue,\n            context: this.context,\n            convert: false,\n            param: this._compressor.knee,\n            units: \"decibels\",\n            value: options.knee,\n        });\n        this.ratio = new Param({\n            minValue: this._compressor.ratio.minValue,\n            maxValue: this._compressor.ratio.maxValue,\n            context: this.context,\n            convert: false,\n            param: this._compressor.ratio,\n            units: \"positive\",\n            value: options.ratio,\n        });\n        // set the defaults\n        readOnly(this, [\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            attack: 0.003,\n            knee: 30,\n            ratio: 12,\n            release: 0.25,\n            threshold: -24,\n        });\n    }\n    /**\n     * A read-only decibel value for metering purposes, representing the current amount of gain\n     * reduction that the compressor is applying to the signal. If fed no signal the value will be 0 (no gain reduction).\n     */\n    get reduction() {\n        return this._compressor.reduction;\n    }\n    dispose() {\n        super.dispose();\n        this._compressor.disconnect();\n        this.attack.dispose();\n        this.release.dispose();\n        this.threshold.dispose();\n        this.ratio.dispose();\n        this.knee.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Compressor.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { GreaterThan } from \"../../signal/GreaterThan\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Follower } from \"../analysis/Follower\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { dbToGain, gainToDb } from \"../../core/type/Conversions\";\n/**\n * Gate only passes a signal through when the incoming\n * signal exceeds a specified threshold. It uses [[Follower]] to follow the ampltiude\n * of the incoming signal and compares it to the [[threshold]] value using [[GreaterThan]].\n *\n * @example\n * const gate = new Tone.Gate(-30, 0.2).toDestination();\n * const mic = new Tone.UserMedia().connect(gate);\n * // the gate will only pass through the incoming\n * // signal when it's louder than -30db\n */\nexport class Gate extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"])));\n        this.name = \"Gate\";\n        const options = optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"]);\n        this._follower = new Follower({\n            context: this.context,\n            smoothing: options.smoothing,\n        });\n        this._gt = new GreaterThan({\n            context: this.context,\n            value: dbToGain(options.threshold),\n        });\n        this.input = new Gain({ context: this.context });\n        this._gate = this.output = new Gain({ context: this.context });\n        // connections\n        this.input.connect(this._gate);\n        // the control signal\n        this.input.chain(this._follower, this._gt, this._gate.gain);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            smoothing: 0.1,\n            threshold: -40\n        });\n    }\n    /**\n     * The threshold of the gate in decibels\n     */\n    get threshold() {\n        return gainToDb(this._gt.value);\n    }\n    set threshold(thresh) {\n        this._gt.value = dbToGain(thresh);\n    }\n    /**\n     * The attack/decay speed of the gate. See [[Follower.smoothing]]\n     */\n    get smoothing() {\n        return this._follower.smoothing;\n    }\n    set smoothing(smoothingTime) {\n        this._follower.smoothing = smoothingTime;\n    }\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this._follower.dispose();\n        this._gt.dispose();\n        this._gate.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Gate.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Compressor } from \"./Compressor\";\nimport { readOnly } from \"../../core/util/Interface\";\n;\n/**\n * Limiter will limit the loudness of an incoming signal.\n * It is composed of a [[Compressor]] with a fast attack\n * and release and max ratio. Limiters are commonly used to safeguard against\n * signal clipping. Unlike a compressor, limiters do not provide\n * smooth gain reduction and almost completely prevent\n * additional gain above the threshold.\n *\n * @example\n * const limiter = new Tone.Limiter(-20).toDestination();\n * const oscillator = new Tone.Oscillator().connect(limiter);\n * oscillator.start();\n */\nexport class Limiter extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"])));\n        this.name = \"Limiter\";\n        const options = optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"]);\n        this._compressor = this.input = this.output = new Compressor({\n            context: this.context,\n            ratio: 20,\n            attack: 0,\n            release: 0,\n            threshold: options.threshold\n        });\n        this.threshold = this._compressor.threshold;\n        readOnly(this, \"threshold\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            threshold: -12\n        });\n    }\n    /**\n     * A read-only decibel value for metering purposes, representing the current amount of gain\n     * reduction that the compressor is applying to the signal.\n     */\n    get reduction() {\n        return this._compressor.reduction;\n    }\n    dispose() {\n        super.dispose();\n        this._compressor.dispose();\n        this.threshold.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Limiter.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Compressor } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MidSideSplit } from \"../channel/MidSideSplit\";\nimport { MidSideMerge } from \"../channel/MidSideMerge\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * MidSideCompressor applies two different compressors to the [[mid]]\n * and [[side]] signal components of the input. See [[MidSideSplit]] and [[MidSideMerge]].\n */\nexport class MidSideCompressor extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(MidSideCompressor.getDefaults(), arguments)));\n        this.name = \"MidSideCompressor\";\n        const options = optionsFromArguments(MidSideCompressor.getDefaults(), arguments);\n        this._midSideSplit = this.input = new MidSideSplit({ context: this.context });\n        this._midSideMerge = this.output = new MidSideMerge({ context: this.context });\n        this.mid = new Compressor(Object.assign(options.mid, { context: this.context }));\n        this.side = new Compressor(Object.assign(options.side, { context: this.context }));\n        this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n        this._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n        readOnly(this, [\"mid\", \"side\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mid: {\n                ratio: 3,\n                threshold: -24,\n                release: 0.03,\n                attack: 0.02,\n                knee: 16\n            },\n            side: {\n                ratio: 6,\n                threshold: -30,\n                release: 0.25,\n                attack: 0.03,\n                knee: 10\n            }\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.mid.dispose();\n        this.side.dispose();\n        this._midSideSplit.dispose();\n        this._midSideMerge.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MidSideCompressor.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Compressor } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * A compressor with separate controls over low/mid/high dynamics. See [[Compressor]] and [[MultibandSplit]]\n *\n * @example\n * const multiband = new Tone.MultibandCompressor({\n * \tlowFrequency: 200,\n * \thighFrequency: 1300,\n * \tlow: {\n * \t\tthreshold: -12\n * \t}\n * });\n */\nexport class MultibandCompressor extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(MultibandCompressor.getDefaults(), arguments)));\n        this.name = \"MultibandCompressor\";\n        const options = optionsFromArguments(MultibandCompressor.getDefaults(), arguments);\n        this._splitter = this.input = new MultibandSplit({\n            context: this.context,\n            lowFrequency: options.lowFrequency,\n            highFrequency: options.highFrequency\n        });\n        this.lowFrequency = this._splitter.lowFrequency;\n        this.highFrequency = this._splitter.highFrequency;\n        this.output = new Gain({ context: this.context });\n        this.low = new Compressor(Object.assign(options.low, { context: this.context }));\n        this.mid = new Compressor(Object.assign(options.mid, { context: this.context }));\n        this.high = new Compressor(Object.assign(options.high, { context: this.context }));\n        // connect the compressor\n        this._splitter.low.chain(this.low, this.output);\n        this._splitter.mid.chain(this.mid, this.output);\n        this._splitter.high.chain(this.high, this.output);\n        readOnly(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            lowFrequency: 250,\n            highFrequency: 2000,\n            low: {\n                ratio: 6,\n                threshold: -30,\n                release: 0.25,\n                attack: 0.03,\n                knee: 10\n            },\n            mid: {\n                ratio: 3,\n                threshold: -24,\n                release: 0.03,\n                attack: 0.02,\n                knee: 16\n            },\n            high: {\n                ratio: 3,\n                threshold: -24,\n                release: 0.03,\n                attack: 0.02,\n                knee: 16\n            },\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._splitter.dispose();\n        this.low.dispose();\n        this.mid.dispose();\n        this.high.dispose();\n        this.output.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MultibandCompressor.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\n/**\n * EQ3 provides 3 equalizer bins: Low/Mid/High.\n * @category Component\n */\nexport class EQ3 extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"]));\n        this.name = \"EQ3\";\n        /**\n         * the output\n         */\n        this.output = new Gain({ context: this.context });\n        this._internalChannels = [];\n        const options = optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"]);\n        this.input = this._multibandSplit = new MultibandSplit({\n            context: this.context,\n            highFrequency: options.highFrequency,\n            lowFrequency: options.lowFrequency,\n        });\n        this._lowGain = new Gain({\n            context: this.context,\n            gain: options.low,\n            units: \"decibels\",\n        });\n        this._midGain = new Gain({\n            context: this.context,\n            gain: options.mid,\n            units: \"decibels\",\n        });\n        this._highGain = new Gain({\n            context: this.context,\n            gain: options.high,\n            units: \"decibels\",\n        });\n        this.low = this._lowGain.gain;\n        this.mid = this._midGain.gain;\n        this.high = this._highGain.gain;\n        this.Q = this._multibandSplit.Q;\n        this.lowFrequency = this._multibandSplit.lowFrequency;\n        this.highFrequency = this._multibandSplit.highFrequency;\n        // the frequency bands\n        this._multibandSplit.low.chain(this._lowGain, this.output);\n        this._multibandSplit.mid.chain(this._midGain, this.output);\n        this._multibandSplit.high.chain(this._highGain, this.output);\n        readOnly(this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n        this._internalChannels = [this._multibandSplit];\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            high: 0,\n            highFrequency: 2500,\n            low: 0,\n            lowFrequency: 400,\n            mid: 0,\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        writable(this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n        this._multibandSplit.dispose();\n        this.lowFrequency.dispose();\n        this.highFrequency.dispose();\n        this._lowGain.dispose();\n        this._midGain.dispose();\n        this._highGain.dispose();\n        this.low.dispose();\n        this.mid.dispose();\n        this.high.dispose();\n        this.Q.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=EQ3.js.map","import { __awaiter } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { noOp } from \"../../core/util/Interface\";\n/**\n * Convolver is a wrapper around the Native Web Audio\n * [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n * Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n * [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n *\n * @example\n * // initializing the convolver with an impulse response\n * const convolver = new Tone.Convolver(\"./path/to/ir.wav\").toDestination();\n * @category Component\n */\nexport class Convolver extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"]));\n        this.name = \"Convolver\";\n        /**\n         * The native ConvolverNode\n         */\n        this._convolver = this.context.createConvolver();\n        const options = optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"]);\n        this._buffer = new ToneAudioBuffer(options.url, buffer => {\n            this.buffer = buffer;\n            options.onload();\n        });\n        this.input = new Gain({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        // set if it's already loaded, set it immediately\n        if (this._buffer.loaded) {\n            this.buffer = this._buffer;\n        }\n        // initially set normalization\n        this.normalize = options.normalize;\n        // connect it up\n        this.input.chain(this._convolver, this.output);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            normalize: true,\n            onload: noOp,\n        });\n    }\n    /**\n     * Load an impulse response url as an audio buffer.\n     * Decodes the audio asynchronously and invokes\n     * the callback once the audio buffer loads.\n     * @param url The url of the buffer to load. filetype support depends on the browser.\n     */\n    load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.buffer = yield this._buffer.load(url);\n        });\n    }\n    /**\n     * The convolver's buffer\n     */\n    get buffer() {\n        if (this._buffer.length) {\n            return this._buffer;\n        }\n        else {\n            return null;\n        }\n    }\n    set buffer(buffer) {\n        if (buffer) {\n            this._buffer.set(buffer);\n        }\n        // if it's already got a buffer, create a new one\n        if (this._convolver.buffer) {\n            // disconnect the old one\n            this.input.disconnect();\n            this._convolver.disconnect();\n            // create and connect a new one\n            this._convolver = this.context.createConvolver();\n            this.input.chain(this._convolver, this.output);\n        }\n        const buff = this._buffer.get();\n        this._convolver.buffer = buff ? buff : null;\n    }\n    /**\n     * The normalize property of the ConvolverNode interface is a boolean that\n     * controls whether the impulse response from the buffer will be scaled by\n     * an equal-power normalization when the buffer attribute is set, or not.\n     */\n    get normalize() {\n        return this._convolver.normalize;\n    }\n    set normalize(norm) {\n        this._convolver.normalize = norm;\n    }\n    dispose() {\n        super.dispose();\n        this._buffer.dispose();\n        this._convolver.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Convolver.js.map","export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nexport { supported } from \"./core/context/AudioContext\";\n/**\n * The current audio context time of the global [[Context]].\n * See [[Context.now]]\n * @category Core\n */\nexport function now() {\n    return getContext().now();\n}\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport function immediate() {\n    return getContext().immediate();\n}\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport const Transport = getContext().transport;\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport function getTransport() {\n    return getContext().transport;\n}\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport const Destination = getContext().destination;\n/**\n * @deprecated Use [[Destination]]\n */\nexport const Master = getContext().destination;\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport function getDestination() {\n    return getContext().destination;\n}\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport const Listener = getContext().listener;\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport function getListener() {\n    return getContext().listener;\n}\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport const Draw = getContext().draw;\n/**\n * Get the singleton attached to the global context.\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport function getDraw() {\n    return getContext().draw;\n}\n/**\n * A reference to the global context\n * See [[Context]]\n */\nexport const context = getContext();\n/**\n * Promise which resolves when all of the loading promises are resolved.\n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport function loaded() {\n    return ToneAudioBuffer.loaded();\n}\n// this fills in name changes from 13.x to 14.x\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport const Buffer = ToneAudioBuffer;\nexport const Buffers = ToneAudioBuffers;\nexport const BufferSource = ToneBufferSource;\n//# sourceMappingURL=index.js.map","import {Frequency} from \"tone\";\n\n\nexport function midiToFrequency(midi) {\n  return new Frequency(midi,\"midi\").toFrequency();\n}\n\n\nexport function randomRange(min, max) {\n  return (Math.random() * (max - min)) + min\n}\n\nexport function randomItem(arr) {\n  return arr[Math.floor(Math.random() * arr.length)]\n}\n\nexport function frequencyToMidi(frequency) {\n  return frequencyToMidi(frequency)\n}\n\nexport function isAudioSupported() {\n  return window.AudioContext || window.webkitAudioContext\n}\n\nexport function isUserMediaSupported() {\n  return window.navigator.mediaDevices && window.navigator.mediaDevices.getUserMedia\n}\n\nexport function isIOS() {\n  return /iPad|iPhone|iPod/.test(window.navigator.userAgent)\n}\n\nexport function getQueryVariable(variable) {\n  const query = window.location.search.substring(1)\n  const vars = query.split('&')\n\n  for (let i = 0; i < vars.length; i++) {\n    const pair = vars[i].split('=')\n\n    if (decodeURIComponent(pair[0]) == variable) {\n      return decodeURIComponent(pair[1])\n    }\n  }\n\n  return null\n}\n\nexport function debug(...args) {\n  if (getQueryVariable('debug')) {\n    console.log(...args)\n  }\n}\n\n\nexport function ranmdomItem(items) {\n  return items[Math.floor(Math.random() * items.length)]\n}","/**\r\n * @module  noise-weighting\r\n */\r\n\r\nmodule.exports = {\r\n\ta: require('./a'),\r\n\tb: require('./b'),\r\n\tc: require('./c'),\r\n\td: require('./d'),\r\n\tm: require('./m'),\r\n\tz: require('./z')\r\n};\r\n","module.exports = function a (f) {\r\n\tvar f2 = f*f;\r\n\treturn 1.2588966 * 148840000 * f2*f2 /\r\n\t((f2 + 424.36) * Math.sqrt((f2 + 11599.29) * (f2 + 544496.41)) * (f2 + 148840000));\r\n};\r\n","module.exports = function b (f) {\r\n\tvar f2 = f*f;\r\n\treturn 1.019764760044717 * 148840000 * f*f2 /\r\n\t((f2 + 424.36) * Math.sqrt(f2 + 25122.25) * (f2 + 148840000));\r\n};\r\n","module.exports = function c (f) {\r\n\tvar f2 = f*f;\r\n\treturn 1.0069316688518042 * 148840000 * f2 /\r\n\t((f2 + 424.36) * (f2 + 148840000));\r\n};\r\n","module.exports = function d (f) {\r\n\tvar f2 = f*f;\r\n\treturn (f / 6.8966888496476e-5) * Math.sqrt(\r\n\t\t(\r\n\t\t\t((1037918.48 - f2)*(1037918.48 - f2) + 1080768.16*f2) /\r\n\t\t\t((9837328 - f2)*(9837328 - f2) + 11723776*f2)\r\n\t\t) /\t((f2 + 79919.29) * (f2 + 1345600))\r\n\t);\r\n};\r\n","module.exports = function itu (f) {\r\n\tvar f2 = f*f;\r\n\r\n\tvar h1 = -4.737338981378384e-24*f2*f2*f2 + 2.043828333606125e-15*f2*f2 - 1.363894795463638e-7*f2 + 1;\r\n\tvar h2 = 1.306612257412824e-19*f2*f2*f - 2.118150887518656e-11*f2*f + 5.559488023498642e-4*f;\r\n\r\n\treturn 8.128305161640991 * 1.246332637532143e-4 * f / Math.sqrt(h1*h1 + h2*h2);\r\n};\r\n","module.exports = function (f) {\r\n\treturn 1;\r\n};\r\n","import { a as aWeighting } from 'a-weighting'\n\nimport { randomRange, debug, midiToFrequency } from '../utils'\n\n// import bandpassChordDetector from '../behaviours/bandpassPolyTracker'\nimport {Frequency, Gain, Synth, Filter, Meter, LFO} from \"tone\";\nconst defaultOptions = {\n  filterQ: 0.75,\n  filterRange: 7,\n  filterRolloff: -24,\n  minInitialNote: 60,\n  maxInitialNote: 82,\n  minLFOFrequency: 0.1,\n  maxLFOFrequency: 0.75,\n  minVelocity: 0.01,\n  maxVelocity: 0.05,\n  velocityRange: 1,\n  minVolume: 0.0,\n  maxVolume: 0.5,\n  triggerChord: [60, 67],\n}\n\nexport default class FlockingAgent {\n  constructor(options = {}, visuals, gainNode) {\n    this.visuals = visuals\n    this.options = Object.assign({}, defaultOptions, options)\n\n    // Synthesized sound of our agent (output)\n    this.synth = new Synth({\n      oscillator: {\n        type: 'sine',\n      },\n      envelope: {\n        attack: 0.005,\n        decay: 0.1,\n        sustain: 1,\n        release: 1,\n      },\n    })\n\n    this.synthGainNode = new Gain()\n    this.synthGainNode.toDestination()\n\n    this.synth.connect(this.synthGainNode)\n\n    // Filters to analyse the signal at two poles around the center\n    this.filterLeft = new Filter({\n      frequency: 440,\n      type: 'bandpass',\n      rolloff: this.options.filterRolloff,\n      Q: this.options.filterQ,\n      gain: 0,\n    })\n\n    this.filterRight = new Filter({\n      frequency: 440,\n      type: 'bandpass',\n      rolloff: this.options.filterRolloff,\n      Q: this.options.filterQ,\n      gain: 0,\n    })\n\n    this.meterLeft = new Meter()\n    this.meterRight = new Meter()\n\n    gainNode.connect(this.filterLeft)\n    gainNode.connect(this.filterRight)\n\n    this.filterLeft.connect(this.meterLeft)\n    this.filterRight.connect(this.meterRight)\n\n    // Choose some random parameters\n    this.newRandomNote()\n\n    // LFO for controlling the synth gain\n    const lfoFrequency = randomRange(\n      this.options.minLFOFrequency,\n      this.options.maxLFOFrequency\n    )\n\n    this.gainLFO = new LFO(\n      lfoFrequency,\n      this.options.minVolume,\n      this.options.maxVolume\n    )\n\n    this.gainLFO.connect(this.synthGainNode.gain)\n\n    // this.bandpassChordDetector = bandpassChordDetector(\n    //   this.options.triggerChord,\n    //   gainNode\n    // )\n\n    this.interval = null\n  }\n\n  newRandomNote() {\n    this.velocity = randomRange(\n      this.options.minVelocity,\n      this.options.maxVelocity\n    )\n\n    this.initialNote = randomRange(\n      this.options.minInitialNote,\n      this.options.maxInitialNote\n    )\n\n    this.currentNote = this.initialNote\n    this.currentVelocity = this.velocity\n\n    // Set the filter poles to initial positions\n    this.setFilterPoles(this.initialNote)\n  }\n\n  start() {\n    this.newRandomNote()\n\n    // The synthesizer play all the time, trigger its note\n    this.synth.triggerAttack(\n      midiToFrequency(this.initialNote)\n    )\n\n    // Start the LFO\n    this.gainLFO.start()\n\n    // Change screen color\n    this.interval = setInterval(() => {\n      const nextFrequency = midiToFrequency(this.currentNote)\n      this.visuals.setToColor([\n        0, 0, 105 + (Math.round(nextFrequency) % 150)\n      ])\n    }, 1000)\n  }\n\n  stop() {\n    this.synth.triggerRelease()\n\n    // Stop the LFO\n    this.gainLFO.stop()\n\n    // Remove overlay\n    this.visuals.resetColor()\n\n    clearInterval(this.interval)\n  }\n\n  setFilterPoles(centerNote) {\n    const { filterRange } = this.options\n\n    const left = midiToFrequency(centerNote - filterRange)\n    const right = midiToFrequency(centerNote + filterRange)\n\n    this.filterLeft.frequency.setValueAtTime(left, '+0')\n    this.filterRight.frequency.setValueAtTime(right, '+0')\n  }\n\n  update() {\n    // Generate random frequency when chord was detected\n    // if (this.bandpassChordDetector()) {\n    //   this.newRandomNote()\n    //   this.visuals.flash()\n    // }\n\n    // Get meter and frequency values of our filter poles\n    const leftMeterValue = this.meterLeft.getValue()\n    const rightMeterValue = this.meterRight.getValue()\n    const leftFilterFreq = this.filterLeft.frequency.value\n    const rightFilterFreq = this.filterRight.frequency.value\n\n    // Make all frequencies equally loud\n    const weightedLeftMeterValue = aWeighting(leftFilterFreq) * leftMeterValue\n    const weightedRightMeterValue = aWeighting(rightFilterFreq) * rightMeterValue\n\n    if (!(isFinite(rightMeterValue) && isFinite(leftMeterValue))) {\n      return\n    }\n\n    // Velocity is depended on distance to the target frequency\n    this.currentVelocity = Math.min(\n      Math.max(\n        (rightMeterValue - leftMeterValue) * this.velocity,\n        -this.options.velocityRange\n      ),\n      this.options.velocityRange\n    )\n\n    // Update the frequencies\n    this.currentNote += this.currentVelocity\n    this.setFilterPoles(this.currentNote)\n\n    // Change the synth note\n    const nextFrequency = midiToFrequency(this.currentNote)\n    this.synth.setNote(nextFrequency)\n\n    // Debug output\n    debug('=========')\n    debug(leftMeterValue, rightMeterValue, this.currentVelocity)\n    debug(nextFrequency)\n  }\n}\n","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from \"./_isArray.js\";\nimport _isTransformer from \"./_isTransformer.js\";\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAll =\n/*#__PURE__*/\nfunction () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall =\n/*#__PURE__*/\n_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\n\nexport default _xall;","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xall from \"./internal/_xall.js\";\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\n\nvar all =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n\n    idx += 1;\n  }\n\n  return true;\n}));\n\nexport default all;","import { all } from 'ramda'\nimport {Filter, Meter} from \"tone\";\n\nimport { midiToFrequency } from '../utils'\n\nconst SMOOTHING = 0.94\n\nexport function getSmoothingFunctor(smoothing = 0.9, startValue = null) {\n    let smoothedValue = startValue\n\n    return newValue => {\n      if (!isFinite(newValue) || isNaN(newValue)) {\n          return smoothedValue\n      }\n\n      if (smoothedValue === null) {\n        smoothedValue = newValue\n      } else {\n        smoothedValue = smoothing * smoothedValue + (1 - smoothing) * newValue\n      }\n\n      return smoothedValue\n    }\n}\n\nexport default function createBandpassNoteTracker(midiNotes, inputNode) {\n\n  const filterMeters = midiNotes.map(key => {\n    const filter = new Filter({\n      frequency: midiToFrequency(key),\n      type: 'bandpass',\n      rolloff: -48,\n      Q: 20,\n      gain: 0,\n    })\n\n    const meter = new Meter()\n\n    inputNode.connect(filter)\n    filter.connect(meter)\n\n    return meter\n  }).map(meter => {\n    const smoother = getSmoothingFunctor(SMOOTHING)\n    return () => smoother(meter.getValue())\n  })\n\n  const overallInputMeter = new Meter()\n  const inputMeterSmoother = getSmoothingFunctor(SMOOTHING)\n\n  const smoothedOverallInputMeter = () => {\n    return inputMeterSmoother(overallInputMeter.getValue())\n  }\n\n  inputNode.connect(overallInputMeter)\n  let previousChordTriggered = false\n\n  // const smooth = (previousValue, value, smoothing = 0.9) => previousValue * smoothing + (1-smoothing) * value\n\n  function updateFunction() {\n    const filterMeterValues = filterMeters.map(meter => meter())\n    const overallInputLevel  = smoothedOverallInputMeter()\n    // console.log(overallInputLevel)\n    if (overallInputLevel === null) {\n      return false\n    }\n\n    const normalizedFilterMeterValues = filterMeterValues.map(level => {\n      return level - overallInputLevel\n    })\n\n    // console.log(normalizedFilterMeterValues, overallInputLevel)\n\n    const chordTriggered = (\n      all(level => level > -40, normalizedFilterMeterValues) &&\n      overallInputLevel > -30\n    )\n\n    const newChordTriggered = !previousChordTriggered && chordTriggered\n    previousChordTriggered = chordTriggered\n\n    return newChordTriggered\n  }\n\n  return updateFunction\n}\n","import {Frequency,  Gain, Delay, NoiseSynth, PolySynth, Synth, LFO} from \"tone\";\n\nimport {\n  midiToFrequency,\n  randomRange,\n  randomItem\n} from '../utils'\n\nimport bandpassChordDetector from '../behaviours/bandpassPolyTracker'\n\n// const CHORDS = [\n//   { name: 'C', notes: [60, 64, 67], next: 'G' },\n//   { name: 'G', notes: [67, 71, 74], next: 'Am' },\n//   { name: 'Am', notes: [69, 72, 76], next: 'F' },\n//   { name: 'F', notes: [65, 69, 72], next: 'C' },\n// ]\n\nconst CHORDS = [\n  { name: 'C', notes: [60], next: 'E' },\n  { name: 'E', notes: [64], next: 'C' },\n  // { name: 'A', notes: [69], next: 'C' },\n  // { name: 'Am', notes: [69, 72, 76], next: 'F' },\n  // { name: 'F', notes: [65, 69, 72], next: 'C' },\n]\nconst defaultOptions = {\n  minLFOFrequency: 0.1,\n  maxLFOFrequency: 0.5,\n  minVolume: 0.0,\n  maxVolume: 0.4,\n}\n\nexport default class ChordAgent {\n  constructor(options = {}, visuals, gainNode) {\n\n    this.converter = new Frequency()\n    this.visuals = visuals\n    this.options = Object.assign({}, defaultOptions, options)\n\n    // Synthesized sound of our agent (output)\n    this.synth = new PolySynth() //(3, Synth)\n\n    this.synth.set({\n      oscillator: {\n        type: 'sine',\n      },\n      envelope: {\n        attack: 0.005,\n        decay: 0.1,\n        sustain: 0.7,\n        release: 1,\n      },\n    })\n\n    this.synthGainNode = new Gain(0.2)\n    this.synthGainNode.toDestination()\n\n    this.synth.connect(this.synthGainNode)\n\n    // LFO for controlling the synth gain\n    const lfoFrequency = randomRange(\n      this.options.minLFOFrequency,\n      this.options.maxLFOFrequency\n    )\n\n    this.gainLFO = new LFO(\n      lfoFrequency,\n      this.options.minVolume,\n      this.options.maxVolume\n    )\n\n    this.gainLFO.connect(this.synthGainNode.gain)\n      // this.synthGainNode.gain.set() = 0.1;\n    this.chordDetectors = Object.keys(CHORDS).map(chordName =>  {\n      return bandpassChordDetector(CHORDS[chordName].notes, gainNode)\n    })\n\n    this.playingChord = null\n  }\n\n  start() {\n    // Start the LFO\n    this.gainLFO.start()\n  }\n\n  stop() {\n    // unused\n  }\n\n  update() {\n    const chordsTriggered = CHORDS\n      .map(({ name }, i) => {\n        return ({\n          name,\n          triggered: this.chordDetectors[i](),\n        })\n      })\n      .filter(t => t.triggered)\n      .map(({ name }) => name)\n\n      if (chordsTriggered.length >0)\n      console.log('chordsTriggered', chordsTriggered)\n\n    if (chordsTriggered.length > 0) {\n      const triggeredChordName = randomItem(chordsTriggered);\n      const nextChord = CHORDS.find(({ name }) => name === triggeredChordName).next\n      const notes = CHORDS.find(({ name }) => name === nextChord).notes\n\n      this.synth.triggerAttackRelease(notes.map(midiToFrequency), '1n', '+1n')\n\n      this.visuals.flash()\n\n      console.log(triggeredChordName)\n      console.log('next', nextChord)\n      // console.log(notes)\n    }\n  }\n}\n","{\n  \"apiKey\": \"AIzaSyA72_qMzv8M1kjhSw_0TafCgaMpDoTq2TY\",\n  \"authDomain\": \"swarm-animism.firebaseapp.com\",\n  \"databaseURL\": \"https://swarm-animism.firebaseio.com\",\n  \"projectId\": \"swarm-animism\",\n  \"storageBucket\": \"\",\n  \"messagingSenderId\": \"996873372497\"\n}\n","import '../styles/index.scss'\nimport iOSFallbackSample from 'url:../files/crackles.wav'\n\nimport * as firebase from 'firebase/app'\nimport 'firebase/database'\n\nimport Visuals from './visuals'\nimport Audio from './audio'\n\nimport FlockingAgent from './agents/flocking'\n// import ImpulseAgent from './agents/impulse'\nimport ChordAgent from './agents/chord'\nimport {\n  getQueryVariable,\n  isAudioSupported,\n  isIOS,\n  isUserMediaSupported,\n  randomRange,\n} from './utils'\n\nimport firebaseSettings from '../firebase.json'\n\nlet dbAgentNames = []\nlet agentCollection = {}\n\n// DOM objects\nconst controlElem = document.getElementById('control')\nconst controlButtonElems = document.getElementsByClassName('control__button')\nconst errorElem = document.getElementById('error')\nconst screenElem = document.getElementById('main')\nconst startElem = document.getElementById('start')\n\n// Check if we want to force an agent\nconst forcedAgentParam = getQueryVariable('agent')\nconst hasControl = getQueryVariable('control')\n\n// Basic interfaces\nconst visuals = new Visuals(screenElem)\nlet audio\n\nfunction setControlButton(agentName, status, disabled = undefined) {\n  for (let i = 0; i < controlButtonElems.length; i += 1) {\n    const button = controlButtonElems[i]\n\n    if (agentName == button.dataset.agent) {\n      if (status) {\n        button.classList.add('control__button--active')\n      } else {\n        button.classList.remove('control__button--active')\n      }\n    } else if (typeof disabled !== 'undefined') {\n      button.disabled = disabled\n    }\n  }\n}\n\nfunction getAgent(agentName) {\n  let agent = agentCollection[agentName]\n  agent.name = agentName\n\n  return agent\n}\n\nfunction getAgents(agentNames) {\n  return agentNames.map(agentName => {\n    return getAgent(agentName)\n  })\n}\n\nfunction initFirebase() {\n  // Do the bad thing and expose credentials (whatever, we dont have time!)\n  const app = firebase.initializeApp(firebaseSettings)\n  const database = firebase.database()\n\n  // Add client to list\n  database.ref('clients').push({\n    timestamp: Date.now(),\n    userAgent: window.navigator.userAgent,\n  })\n\n  // Listen to changes of the agent state\n  const agentNameState = database.ref('state/agentNames')\n\n  setControlButton(null, null, true)\n\n  agentNameState.on('value', snapshot => {\n    if (!audio) {\n      return\n    }\n\n    setControlButton(null, null, false)\n\n    // Update value\n    dbAgentNames = snapshot.val() || []\n\n    const existingAgentNames = audio.agents ? audio.agents.map(agent => {\n      return agent.name\n    }) : []\n\n    // Add these new agents\n    const newAgents = dbAgentNames.reduce((acc, newAgentName) => {\n      if (!existingAgentNames.includes(newAgentName)) {\n        acc.push(newAgentName)\n        setControlButton(newAgentName, true)\n      }\n      return acc\n    }, [])\n\n    // Remove these agents\n    const removeAgents = existingAgentNames.reduce((acc, agentName) => {\n      if (!dbAgentNames.includes(agentName)) {\n        acc.push(agentName)\n        setControlButton(agentName, false)\n      }\n      return acc\n    }, [])\n\n    audio.removeAgents(getAgents(removeAgents))\n    audio.addAgents(getAgents(newAgents))\n  })\n}\n\nfunction initControl() {\n  const database = firebase.database()\n  const ref = database.ref('state/agentNames')\n\n  controlElem.classList.add('control--visible')\n\n  for (let i = 0; i < controlButtonElems.length; i += 1) {\n    const button = controlButtonElems[i]\n\n    button.addEventListener('click', event => {\n      event.preventDefault()\n      const { agent } = button.dataset\n\n      if (dbAgentNames.includes(agent)) {\n        dbAgentNames.splice(dbAgentNames.findIndex(i => i === agent), 1)\n      } else {\n        dbAgentNames.push(agent)\n      }\n\n      setControlButton(null, null, true)\n      ref.set(dbAgentNames)\n    })\n  }\n}\n\nfunction startIOSPerformance() {\n  // Fallback for stupid iOS\n  const audioElem = document.createElement('audio')\n  screenElem.appendChild(audioElem)\n\n  audioElem.src = iOSFallbackSample\n  audioElem.loop = true\n  audioElem.play()\n}\n\nfunction startPerformance() {\n  // Create an audio environment\n  audio = new Audio()\n  audio.setup(!hasControl)\n\n  agentCollection = {\n    // impulse: new ImpulseAgent({}, visuals, audio.gain),\n    chord: new ChordAgent({}, visuals, audio.gain),\n    flocking: new FlockingAgent({}, visuals, audio.gain),\n  }\n\n  // Initialise remote control via Firebase\n  if (!forcedAgentParam) {\n    initFirebase()\n\n    // Show control when requested\n    if (hasControl) {\n      initControl()\n    }\n  }\n\n  // Set agent when forced\n  if (forcedAgentParam) {\n    audio.addAgents([getAgent(forcedAgentParam)])\n  }\n}\n\nfunction showErrorMessage() {\n  errorElem.classList.add('error--visible')\n}\n\nfunction init() {\n  console.log(\"Initializing\");\n  // Wait for user to click so we can kick off the WebAudio context\n  startElem.classList.add('start--visible')\n\n  startElem.addEventListener('click', () => {\n    // Show an image\n    const imageName = `image${Math.floor(randomRange(1, 7))}`\n    visuals.setAnimal(imageName)\n\n    // Start the performance\n    if (isIOS() && !hasControl) {\n      startIOSPerformance()\n    } else {\n      startPerformance()\n    }\n\n    startElem.classList.remove('start--visible')\n  })\n}\n\n// Check if WebAudio API is supported on this device\n\nif (\n  !isAudioSupported()\n  //  ||\n  // (\n  //   !isIOS() &&\n  //   !isUserMediaSupported()\n  // )\n) {\n  console.log(\"error\", !isAudioSupported())\n  showErrorMessage()\n} else {\n  init()\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$exportWildcard","dest","source","Object","keys","forEach","key","defineProperty","enumerable","get","$parcel$global","globalThis","self","window","global","mapping","id","resolved","Error","pairs","i","length","$bd72ee1865b930c1fed8ae47f35e91$export$register","JSON","parse","bundleURL","err","matches","stack","match","replace","getBundleURL","resolve","$bd72ee1865b930c1fed8ae47f35e91$export$resolve","dirname","_filePath","filePath","slice","slashIndex","lastIndexOf","relative","from","to","fromParts","split","shift","divergeIndex","toParts","parts","push","apply","join","$e5b69ae2ffddc223b376d75aff9c28$exports","fromId","toId","_dirname","_relative","$cea06a8bdce3f9f85f456e15790bba4$exports","$da3a6c17234c5d68d4f1108f53a7bad4$export$getBundleURL","$cfe039a35c15f9919bb6457cd27d531$exports","value","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","n","arguments","call","__decorate","decorators","target","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","__awaiter","thisArg","_arguments","P","generator","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","__values","o","m","__read","ar","error","__spread","concat","$a0ae8f0f855b36c2f559075c9f$exports","CONSTANTS","NODE_CLIENT","NODE_ADMIN","SDK_VERSION","assert","assertion","message","assertionError","stringToByteArray","str","out","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","isArray","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64Decode","console","deepExtend","Date","getTime","undefined","prop","Deferred","_this","promise","wrapCallback","callback","catch","getUA","navigator","isNode","toString","process","FirebaseError","_super","code","name","captureStackTrace","ErrorFactory","$f4a96ca9391961069b1fb6bb726fc04$export$__extends","service","serviceName","errors","data","_i","customData","fullCode","template","replaceTemplate","fullMessage","_a","_b","warn","PATTERN","jsonEval","decode","token","header","claims","signature","Sha1","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","compress_","buf","offset","W","k","update","lengthMinusBlock","inbuf","digest","totalBits","j","ObserverProxy","executor","onNoObservers","observers","unsubscribes","observerCount","task","finalized","forEachObserver","observer","close","complete","subscribe","nextOrObserver","obj","methods","methods_1","method","implementsAnyMethods","noop","unsub","unsubscribeOne","bind","finalError","fn","sendOne","errorPrefix","fnName","argumentNumber","optional","argName","$a0ae8f0f855b36c2f559075c9f$export$CONSTANTS","$a0ae8f0f855b36c2f559075c9f$export$Deferred","$a0ae8f0f855b36c2f559075c9f$export$ErrorFactory","$a0ae8f0f855b36c2f559075c9f$export$FirebaseError","$a0ae8f0f855b36c2f559075c9f$export$Sha1","cookieEnabled","areCookiesEnabled","$a0ae8f0f855b36c2f559075c9f$export$areCookiesEnabled","$a0ae8f0f855b36c2f559075c9f$export$assert","$a0ae8f0f855b36c2f559075c9f$export$assertionError","onError","args","async","$a0ae8f0f855b36c2f559075c9f$export$async","$a0ae8f0f855b36c2f559075c9f$export$base64","$a0ae8f0f855b36c2f559075c9f$export$base64Decode","utf8Bytes","base64Encode","$a0ae8f0f855b36c2f559075c9f$export$base64Encode","contains","$a0ae8f0f855b36c2f559075c9f$export$contains","proxy","createSubscribe","$a0ae8f0f855b36c2f559075c9f$export$createSubscribe","$a0ae8f0f855b36c2f559075c9f$export$decode","deepCopy","$a0ae8f0f855b36c2f559075c9f$export$deepCopy","$a0ae8f0f855b36c2f559075c9f$export$deepExtend","$a0ae8f0f855b36c2f559075c9f$export$errorPrefix","$a0ae8f0f855b36c2f559075c9f$export$getUA","isAdmin","$a0ae8f0f855b36c2f559075c9f$export$isAdmin","isBrowser","$a0ae8f0f855b36c2f559075c9f$export$isBrowser","runtime","chrome","browser","isBrowserExtension","$a0ae8f0f855b36c2f559075c9f$export$isBrowserExtension","indexOf","isElectron","$a0ae8f0f855b36c2f559075c9f$export$isElectron","isEmpty","$a0ae8f0f855b36c2f559075c9f$export$isEmpty","ua","isIE","$a0ae8f0f855b36c2f559075c9f$export$isIE","indexedDB","isIndexedDBAvailable","$a0ae8f0f855b36c2f559075c9f$export$isIndexedDBAvailable","test","isMobileCordova","$a0ae8f0f855b36c2f559075c9f$export$isMobileCordova","$a0ae8f0f855b36c2f559075c9f$export$isNode","isNodeSdk","$a0ae8f0f855b36c2f559075c9f$export$isNodeSdk","isReactNative","$a0ae8f0f855b36c2f559075c9f$export$isReactNative","userAgent","includes","isSafari","$a0ae8f0f855b36c2f559075c9f$export$isSafari","isUWP","$a0ae8f0f855b36c2f559075c9f$export$isUWP","isValidFormat","$a0ae8f0f855b36c2f559075c9f$export$isValidFormat","now","Math","floor","validSince","validUntil","isValidTimestamp","$a0ae8f0f855b36c2f559075c9f$export$isValidTimestamp","issuedAtTime","$a0ae8f0f855b36c2f559075c9f$export$issuedAtTime","$a0ae8f0f855b36c2f559075c9f$export$jsonEval","contextObj","res","map","$a0ae8f0f855b36c2f559075c9f$export$map","querystringParams","params","_loop_1","arrayVal","encodeURIComponent","entries","querystring","$a0ae8f0f855b36c2f559075c9f$export$querystring","querystringDecode","$a0ae8f0f855b36c2f559075c9f$export$querystringDecode","safeGet","$a0ae8f0f855b36c2f559075c9f$export$safeGet","stringLength","$a0ae8f0f855b36c2f559075c9f$export$stringLength","high","$a0ae8f0f855b36c2f559075c9f$export$stringToByteArray","stringify","$a0ae8f0f855b36c2f559075c9f$export$stringify","minCount","maxCount","argCount","argError","validateArgCount","$a0ae8f0f855b36c2f559075c9f$export$validateArgCount","validateCallback","$a0ae8f0f855b36c2f559075c9f$export$validateCallback","context","validateContextObject","$a0ae8f0f855b36c2f559075c9f$export$validateContextObject","preExist_1","DB_CHECK_NAME_1","request_1","open","onsuccess","deleteDatabase","onupgradeneeded","onerror","validateIndexedDBOpenable","$a0ae8f0f855b36c2f559075c9f$export$validateIndexedDBOpenable","namespace","validateNamespace","$a0ae8f0f855b36c2f559075c9f$export$validateNamespace","$cfabd992e4d5ff95da1b02f712360$exports","Component","instanceFactory","type","multipleInstances","serviceProps","instantiationMode","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","Provider","container","component","instances","Map","instancesDeferred","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","set","instance","getOrInitializeService","getImmediate","options","$f4a96ca9391961069b1fb6bb726fc04$export$__assign","getComponent","setComponent","e_1","isComponentEager","$f4a96ca9391961069b1fb6bb726fc04$export$__values","_c","_d","$f4a96ca9391961069b1fb6bb726fc04$export$__read","instanceIdentifier","instanceDeferred","e_1_1","clearInstance","delete","$f4a96ca9391961069b1fb6bb726fc04$export$__awaiter","services","$f4a96ca9391961069b1fb6bb726fc04$export$__generator","values","all","filter","INTERNAL","isComponentSet","normalizeIdentifierForFactory","ComponentContainer","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","$cfabd992e4d5ff95da1b02f712360$export$Component","$cfabd992e4d5ff95da1b02f712360$export$ComponentContainer","__spreadArrays","il","jl","$cfabd992e4d5ff95da1b02f712360$export$Provider","LogLevel","levelStringToEnum","debug","DEBUG","verbose","VERBOSE","info","INFO","WARN","ERROR","silent","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","logLevel","toISOString","Logger","_logLevel","_logHandler","_userLogHandler","val","configurable","setLogLevel","log","level","inst","_a$1","ERRORS","ERROR_FACTORY","PLATFORM_LOG_STRING","logger","$e2ce2dcca4b6d2ae519182c261f5364f$export$Logger","FirebaseAppImpl","config","firebase_","isDeleted_","name_","automaticDataCollectionEnabled_","automaticDataCollectionEnabled","options_","_addComponent","components","component$1","checkDestroyed_","removeApp","_getService","_removeServiceInstance","_addOrOverwriteComponent","appName","createFirebaseNamespaceCore","firebaseAppImpl","apps","initializeApp","rawConfig","app","registerVersion","libraryKeyOrName","version","variant","library","libraryMismatch","versionMismatch","warning","registerComponent","$e2ce2dcca4b6d2ae519182c261f5364f$export$setLogLevel","onLog","logCallback","customLogLevel","userLogHandler","arg","ignored","toLowerCase","instances_1","$e2ce2dcca4b6d2ae519182c261f5364f$export$setUserLogHandler","useAsService","componentName","serviceNamespace","appArg","serviceFxn","firebase","createFirebaseNamespace","extendNamespace","PlatformLoggerService","getPlatformInfoString","isVersionServiceProvider","logString","sdkVersion","firebase$1","$cfe039a35c15f9919bb6457cd27d531$export$default","$cfe039a35c15f9919bb6457cd27d531$export$firebase","ex","$d834e71e477bbbaad03de34091d7fbc1$exports","cachedSetTimeout","cachedClearTimeout","$bd46d3b3efd2320fe280e4c70db6ed0$exports","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","nextTick","title","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","$b54bf2e2ce63d16044cca2bab87ed52b$exports","_interopDefault","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","remove","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","sha1Bytes","buildLogMessage_","varArgs","firstLog_","enableLogging","logger_","persistent","$e2ce2dcca4b6d2ae519182c261f5364f$export$LogLevel","logWrapper","prefix","$f4a96ca9391961069b1fb6bb726fc04$export$__spread","fatal","isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","nameCompare","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","sort","splitStringBySize","segsize","dataSegs","substring","each","doubleToIEEE754String","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","hexByteString","hexByte","parseInt","substr","INTEGER_REGEXP_","RegExp","intVal","exceptionGuard","setTimeoutNonBlocking","time","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","begin","parent","pieces","child","childPathObj","childPieces","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","ValidationPath","path","errorPrefix_","parts_","byteLength_","max","checkValid_","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","RepoInfo","host","secure","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","connURL","toURLString","PUSH_CHARS","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","location","protocol","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","decodePath","queryParams","queryString","results","segment","kv","decodeQuery","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","validateFirebaseData","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","isValidRootPathString","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","onDisconnectCancel","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat",".value","getValue",".priority","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","query","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","cancelCallbackOrContext","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","addEventCallbackForQuery","valueCallback","removeEventCallbackForQuery","userCallback","failureCallbackOrContext","firstCall","onceCallback","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","existing","unused","delta","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","SparseSnapshotTree","children","find","size","childKey","remember","clear","forget","self_1","tree","forEachTree","prefixPath","func","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","Empty","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","write","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","reason","toUpperCase","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","toProcess","this_1","_loop_2","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","readyState","called_1","wrappedFn_1","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","href","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","Windows","UI","markConnectionHealthy","shutdown_","myDisconnFrame","removeChild","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","onload","onreadystatechange","rstate","parentNode","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","User-Agent","platform","X-Firebase-GMPID","origin","mySock","onopen","onclose","onmessage","handleIncomingFrame","isOldAndroid","oldAndroidMatch","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","onDisconnectPut","onDisconnectMerge","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","forceRefresh","getToken","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","notifyForInvalidToken","_e","_f","clientName","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","authTokenData","authToken","xhr","XMLHttpRequest","responseText","Repo","forceRestClient","authTokenProvider","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","search","authOverride","appId","addTokenChangeListener","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","abortTransactionsOnNode_","lastSent","_staticInstance","FirebaseAuthTokenProvider","app_","authProvider_","auth_","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","RepoManager","repos_","useRestClient_","dbUrl","databaseFromApp","authProvider","isEmulator","dbEmulatorHost","createRepo","deleteRepo","appRepos","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP",".sv","increment","freeze","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","registerDatabase","$b54bf2e2ce63d16044cca2bab87ed52b$export$DataSnapshot","$b54bf2e2ce63d16044cca2bab87ed52b$export$Database","$b54bf2e2ce63d16044cca2bab87ed52b$export$OnDisconnect","$b54bf2e2ce63d16044cca2bab87ed52b$export$Query","$b54bf2e2ce63d16044cca2bab87ed52b$export$Reference","$b54bf2e2ce63d16044cca2bab87ed52b$export$ServerValue","$b54bf2e2ce63d16044cca2bab87ed52b$export$enableLogging","$b54bf2e2ce63d16044cca2bab87ed52b$export$registerDatabase","$a768b1aa140e3c311b92c9da5eec0c$exports","$c4caa8708442fd2ec0acb5edb7be444$exports","$b46990095b3d05a49e75cda4bdeac011$exports","$fb7a5e2737e12088cea6dbd6aa7f$exports","$e1ff4596a853042dce12e2f28e5221$exports","$f87b632ced81267dd70069a8292128$exports","animalImages","image1","image2","image3","image4","image5","image6","Visuals","elem","$c4b69addf645168379b53b794a8cd614$var$_classCallCheck","backgroundElem","getElementById","backgroundColor","animalName","classList","backgroundImage","duration","_arrayWithHoles","arr","$d9283acca18bc9eb66157178a235c6da$exports","_iterableToArrayLimit","_arr","_n","_s","$a5d3915fd923d4b9b11e7822952240$exports","_arrayLikeToArray","arr2","$c440e77cd755dc9ae8428e72e5782f$exports","arrayLikeToArray","_unsupportedIterableToArray","minLen","$f3a51828c16f346baacc16bc56a3e3e9$exports","_nonIterableRest","$e883e34201281d04d1975d69b57ccec0$exports","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_slicedToArray","$c8d25f152a9482ec9e4b4ad4cc61366$exports","_classCallCheck","Constructor","$c8b1d73f2dbb162def169c95ab5a69c3$exports","_defineProperties","descriptor","writable","_createClass","protoProps","staticProps","$dfa38ff174c18bf6c67f25769658c52$exports","factory","$a678fee171cf0d9562d51cc2aa4adab$exports","$c8d25f152a9482ec9e4b4ad4cc61366$init","$c8b1d73f2dbb162def169c95ab5a69c3$init","$dfa38ff174c18bf6c67f25769658c52$init","automationEvents","exports","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","getTargetValueAtTime","valueAtStartTime","_ref","timeConstant","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","defaultValue","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","getLinearRampValueAtTime","getValueCurveValueAtTime","theoreticIndex","lowerIndex","upperIndex","ceil","interpolateValue","isSetTargetAutomationEvent","AutomationEventList","_automationEvents","_currenTime","_defaultValue","eventTime","removedAutomationEvent","lastAutomationEvent","startValue","truncatedAutomationEvent","Float32Array","_index","previousAutomationEvent","persistentAutomationEvent","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","createAbortError","DOMException","createAddAudioNodeConnections","audioNodeConnectionsStore","audioNode","audioNodeRenderer","nativeAudioNode","activeInputs","numberOfInputs","outputs","passiveInputs","WeakMap","renderer","createAddAudioParamConnections","audioParamConnectionsStore","audioParam","audioParamRenderer","ACTIVE_AUDIO_NODE_STORE","AUDIO_NODE_CONNECTIONS_STORE","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","BACKUP_NATIVE_CONTEXT_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","WeakSet","handler","isConstructible","construct","constructible","Proxy","IMPORT_STATEMENT_REGEX","splitImportStatements","importStatements","sourceWithoutImportStatements","unresolvedUrl","importStatementWithResolvedUrl","URL","verifyParameterDescriptors","verifyProcessorCtor","createAddAudioWorkletModule","parameterDescriptors","processorCtor","$eb61c4b2c22d33670324272d09f2ee8e$export$isConstructible","createNotSupportedError","evaluateSource","exposeCurrentFrameAndCurrentTime","fetchSource","getBackupNativeContext","getNativeContext","ongoingRequests","resolvedRequests","moduleURL","credentials","nativeContext","absoluteUrl","audioWorklet","$ceff06bca0bcf660bcb2a5cac3f93a4$export$splitImportStatements","blob","Blob","createObjectURL","backupNativeContext","addModule","revokeObjectURL","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","evaluateAudioWorkletGlobalScope","_AWGS","SyntaxError","currentTime","sampleRate","trim","nodeNameToProcessorConstructorMap","$c0eaa44a1a5cf8271f2bfe632887932$export$NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","rslvdRqstsFCntxt","ngngRqstsFCntxt","createAddSilentConnection","createNativeGainNode","nativeAudioScheduledSourceNode","nativeGainNode","channelCount","channelCountMode","channelInterpretation","gain","connect","destination","disconnect","removeEventListener","createAddUnrenderedAudioWorkletNode","getUnrenderedAudioWorkletNodes","audioWorkletNode","DEFAULT_OPTIONS","createAnalyserNodeConstructor","fftSize","maxDecibels","minDecibels","smoothingTimeConstant","audionNodeConstructor","createAnalyserNodeRenderer","createIndexSizeError","createNativeAnalyserNode","isNativeOfflineAudioContext","mergedOptions","nativeAnalyserNode","super","_nativeAnalyserNode","frequencyBinCount","getByteFrequencyData","getByteTimeDomainData","getFloatFrequencyData","getFloatTimeDomainData","isOwnedByContext","createAnalyserNodeRendererFactory","getNativeAudioNode","renderInputsOfAudioNode","renderedNativeAnalyserNodes","render","nativeOfflineAudioContext","trace","renderedNativeAnalyserNode","$a03d00cbdc0adbc74e0f0357ceaf649$export$isOwnedByContext","createAnalyserNode","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","copyToChannel","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","channel","$d4385ccf1a9ef519c153d847bae3902$export$createIndexSizeError","createAudioBufferConstructor","numberOfChannels","audioBufferStore","cacheTestResult","nativeAudioBufferConstructor","nativeOfflineAudioContextConstructor","testNativeAudioBufferConstructorSupport","wrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","AudioBuffer","createBuffer","copyFromChannel","$ccdbe6c2dfab45448b7e59c46b06253b$export$wrapAudioBufferGetChannelDataMethod","$a046f34ae19d6362d6e21c0244b84dcd$export$testAudioBufferCopyChannelMethodsOutOfBoundsSupport","[object Object]","hasInstance","getPrototypeOf","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","getValueForKey","getEventListenersOfAudioNode","$b6ea60d0ca16ddcbffaf8c43dfc7152c$export$getValueForKey","$c0eaa44a1a5cf8271f2bfe632887932$export$EVENT_LISTENERS","setInternalStateToActive","$c0eaa44a1a5cf8271f2bfe632887932$export$ACTIVE_AUDIO_NODE_STORE","$f782df4a52340e4257c9022804a31ed3$export$getEventListenersOfAudioNode","eventListener","setInternalStateToPassive","createAudioBufferSourceNodeConstructor","buffer","loop","loopEnd","loopStart","playbackRate","audioNodeConstructor","createAudioBufferSourceNodeRenderer","createAudioParam","createInvalidStateError","createNativeAudioBufferSourceNode","wrapEventListener","nativeAudioBufferSourceNode","isOffline","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","_playbackRate","$c5511d54524913f2edf794754dbb38e4$export$MOST_POSITIVE_SINGLE_FLOAT","$c5511d54524913f2edf794754dbb38e4$export$MOST_NEGATIVE_SINGLE_FLOAT","fill","onended","wrappedListener","nativeOnEnded","when","$b89e5ddcb5905fd0dfd90f1a16e20$export$setInternalStateToActive","resetInternalStateToPassive","$a39cdcdf1565ddf60adb28682a4557$export$setInternalStateToPassive","stop","createAudioBufferSourceNodeRendererFactory","connectAudioParam","renderAutomation","renderedNativeAudioBufferSourceNodes","renderedNativeAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","createAudioBufferSourceNode","isValidLatencyHint","latencyHint","createAudioContextConstructor","baseAudioContextConstructor","createUnknownError","mediaElementAudioSourceNodeConstructor","mediaStreamAudioDestinationNodeConstructor","mediaStreamAudioSourceNodeConstructor","mediaStreamTrackAudioSourceNodeConstructor","nativeAudioContextConstructor","nativeAudioContext","$d52886b0eecdff20cd8ef8e906fe$export$isValidLatencyHint","_baseLatency","baseLatency","_nativeAudioContext","_state","state","revokeState","createMediaElementSource","mediaElement","createMediaStreamDestination","createMediaStreamSource","mediaStream","createMediaStreamTrackSource","mediaStreamTrack","resolvePromise","suspend","createAudioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","maxChannelCount","nativeAudioDestinationNodePromise","createAudioDestinationNode","createAudioListenerFactory","createNativeChannelMergerNode","createNativeConstantSourceNode","createNativeScriptProcessorNode","nativeListener","forwardX","forwardY","forwardZ","positionX","positionY","positionZ","upX","upY","upZ","channelMergerNode","scriptProcessorNode","createFakeAudioParam","constantSourceNode","lastOrientation","lastPosition","onaudioprocess","inputBuffer","orientation","some","setOrientation","positon","setPosition","createFakeAudioParams","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","outputConnection","$f2f359f667bac408d0a199e0746d2d9d$export$isAudioNode","isAudioWorkletNode","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","connectNativeAudioNodeToNativeAudioNode","nativeSourceAudioNode","nativeDestinationAudioNode","$cbda67a35db2d372b1e15c06dde6$export$isNativeAudioNodeFaker","fakeNativeDestinationAudioNode","inputs","deleteEventListenerOfAudioNode","disconnectNativeAudioNodeFromNativeAudioNode","getAudioNodeConnections","$c0eaa44a1a5cf8271f2bfe632887932$export$AUDIO_NODE_CONNECTIONS_STORE","getAudioParamConnections","$c0eaa44a1a5cf8271f2bfe632887932$export$AUDIO_PARAM_CONNECTIONS_STORE","$c0eaa44a1a5cf8271f2bfe632887932$export$AUDIO_NODE_STORE","getNativeAudioParam","$c0eaa44a1a5cf8271f2bfe632887932$export$AUDIO_PARAM_STORE","insertElementInSet","element","ignoreDuplicates","lmnt","isActiveAudioNode","isPartOfACycle","$c0eaa44a1a5cf8271f2bfe632887932$export$CYCLE_COUNTERS","isPassiveAudioNode","pickElementFromSet","matchingElements","matchingElement","setInternalStateToPassiveWhenNecessary","$f597760cd8db59294b16cbb3c4ce8$export$isAudioWorkletNode","connections","testAudioNodeDisconnectMethodSupport","analyzer","createScriptProcessor","dummy","createGain","ones","channelData","createBufferSource","event","chnnlDt","sample","visitEachAudioNodeOnce","cycles","visitor","counts","cycle","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","returnValue","$dd6cec4b9db29921c75eeca2007878c3$export$isNativeAudioNode","connectionsToDestination","connection","destinationOrOutput","filteredConnections","addActiveInputConnectionToAudioNode","addActiveInputConnectionToAudioParam","deleteActiveInputConnectionToAudioNode","deleteActiveInputConnectionToAudioParam","addPassiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioParam","deletePassiveInputConnectionToAudioNode","deletePassiveInputConnectionToAudioParam","addConnectionToAudioNodeOfAudioContext","addConnectionToAudioNodeOfOfflineAudioContext","addConnectionToAudioParamOfAudioContext","addConnectionToAudioParamOfOfflineAudioContext","deleteActiveInputConnection","deleteInputConnectionOfAudioNode","deleteInputConnectionOfAudioParam","deleteInputsOfAudioNode","deleteInputsOfAudioParam","deleteAnyConnection","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","$cad426f6c12d0961d63a14a2aff7e1e$export$insertElementInSet","activeInputConnection","$b047453c90f95d$export$pickElementFromSet","passiveInputConnections","passiveInputConnection","matchingConnection","$b1754193418c7938c5833d95ab3e$export$getAudioNodeConnections","eventListeners","isActive","$c06614bbfbc5304519f016ca46277$export$getNativeAudioNode","partialConnection","$c4f82bc6e39f41ddd2f385ef877711e$export$isPartOfACycle","$e1a4752039fba54f53604df9519be999$export$connectNativeAudioNodeToNativeAudioNode","$e8a97ebf65d7e6767f351ee1f565ad0$export$isPassiveAudioNode","$b5432a5799c2ec60e2d53c51f4cb82$export$disconnectNativeAudioNodeFromNativeAudioNode","$ab0c5f5d622665f31ff55b4f043e7f5$export$isActiveAudioNode","$e3d574c22d0a6253739cae4d8a458aeb$export$setInternalStateToPassiveWhenNecessary","$e926d303c314fdae497c542545228$export$getAudioParamConnections","nativeAudioParam","$e0a330af22bdbd8033c64cfc00fc4a$export$getNativeAudioParam","activeInputConnections","$d45a9c3ad17ecc4ea092515792975d$export$deleteEventListenerOfAudioNode","audioNodeConnectionsOfSource","destinations","$f153bdd78f9ec9c6133ae1c6f525bb9f$export$isAudioNodeOutputConnection","addAudioNodeConnections","auxiliaryGainNodeStore","createIncrementCycleCounter","createInvalidAccessError","decrementCycleCounter","detectCycles","eventTargetConstructor","isNativeAudioContext","isNativeAudioParam","_context","_nativeAudioNode","$d1903a95b2d9435140b4ac971a09$export$testAudioNodeDisconnectMethodSupport","$b499e81abc9ca3b7a4bfae891a41$export$wrapAudioNodeDisconnectMethod","numberOfOutputs","auxiliaryGainNodes","$a2b3a2fd55de2a7c55c3aba8a0252d$export$visitEachAudioNodeOnce","createAudioParamFactory","addAudioParamConnections","audioParamAudioNodeStore","audioParamStore","createAudioParamRenderer","isAudioParamOfOfflineAudioContext","maxValue","minValue","automationEventList","setValueAtTime","cancelAndHoldAtTime","flush","previousLastEvent","currentLastEvent","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setValueCurveAtTime","setTargetAtTime","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","replay","ReadOnlyMap","parameters","_map","createChannelCount","sanitizedOptions","createAudioWorkletNodeConstructor","outputChannelCount","parameterData","processorOptions","addUnrenderedAudioWorkletNode","createAudioWorkletNodeRenderer","createNativeAudioWorkletNode","nativeAudioWorkletNodeConstructor","processorConstructor","nativeAudioWorkletNode","nm","_nativeAudioWorkletNode","_onprocessorerror","_parameters","$d6951c684c20e1e19801d8c945131ad7$export$ReadOnlyMap","onprocessorerror","nativeOnProcessorError","channelNumber","bufferOffset","byteLength","slicedInput","BYTES_PER_ELEMENT","createNestedArrays","x","arrays","getAudioWorkletProcessor","nodeToProcessorMap","$c0eaa44a1a5cf8271f2bfe632887932$export$NODE_TO_PROCESSOR_MAPS","processBuffer","createAudioWorkletNodeRendererFactory","renderedBuffer","numberOfInputChannels","numberOfOutputChannels","sum","processedBuffer","audioNodeConnections","audioWorkletProcessor","$d0fdf9ea057f6e88ae6b0765684e86$export$getAudioWorkletProcessor","$d6a1be60fcc5f4bfb2a4c7e9387ceb$export$createNestedArrays","prmtrs","$e5f49821f2274ab74aa1459421bc7a4$export$copyFromChannel","potentiallyEmptyInputs","activeSourceFlag","outputChannelSplitterNodeOutput","$ca544e42828b2c22338a89ce615955$export$copyToChannel","dispatchEvent","ErrorEvent","connectMultipleOutputs","createNativeChannelSplitterNode","deleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","renderNativeOfflineAudioContext","renderedNativeAudioNodes","processedBufferPromise","renderedNativeAudioWorkletNodeOrGainNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","outputChannelSplitterNode","outputChannelMergerNodes","outputGainNode","numberOfParameters","renderBuffer","partialOfflineAudioContext","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","gainNode","audioBufferSourceNode","outputChannelMergerNode","createAudioNode","createBaseAudioContextConstructor","addAudioWorkletModule","analyserNodeConstructor","audioBufferConstructor","audioBufferSourceNodeConstructor","biquadFilterNodeConstructor","channelMergerNodeConstructor","channelSplitterNodeConstructor","constantSourceNodeConstructor","convolverNodeConstructor","decodeAudioData","delayNodeConstructor","dynamicsCompressorNodeConstructor","gainNodeConstructor","iIRFilterNodeConstructor","minimalBaseAudioContextConstructor","oscillatorNodeConstructor","pannerNodeConstructor","periodicWaveConstructor","stereoPannerNodeConstructor","waveShaperNodeConstructor","_nativeContext","_audioWorklet","createAnalyser","createBiquadFilter","createChannelMerger","createChannelSplitter","createConstantSource","createConvolver","createDelay","maxDelayTime","createDynamicsCompressor","createIIRFilter","feedforward","feedback","createOscillator","createPanner","createPeriodicWave","real","imag","constraints","disableNormalization","createStereoPanner","createWaveShaper","audioData","successCallback","errorCallback","createBiquadFilterNodeConstructor","Q","detune","frequency","createBiquadFilterNodeRenderer","createNativeBiquadFilterNode","nativeBiquadFilterNode","_Q","_detune","log2","_frequency","_gain","log10","_nativeBiquadFilterNode","getFrequencyResponse","frequencyHz","magResponse","phaseResponse","createBiquadFilterNodeRendererFactory","renderedNativeBiquadFilterNodes","renderedNativeBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","createBiquadFilterNode","createCacheTestResult","ongoingTests","testResults","tester","cachedTestResult","ongoingTest","synchronousTestResult","finalTestResult","createChannelMergerNodeConstructor","createChannelMergerNodeRenderer","createChannelMergerNodeRendererFactory","renderedNativeAudioNode","createChannelSplitterNodeConstructor","createChannelSplitterNodeRenderer","createChannelSplitterNodeRendererFactory","createConnectAudioParam","renderInputsOfAudioParam","createConnectMultipleOutputs","outputAudioNodes","outputAudioNode","createConnectedNativeAudioBufferSourceNodeFactory","createConstantSourceNodeConstructor","createConstantSourceNodeRendererFactory","nativeConstantSourceNode","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","renderedNativeConstantSourceNodes","renderedNativeConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","createConstantSourceNode","createConvertNumberToUnsignedLong","unit32Array","createConvolverNodeConstructor","createConvolverNodeRenderer","createNativeConvolverNode","nativeConvolverNode","_nativeConvolverNode","normalize","createConvolverNodeRendererFactory","renderedNativeConvolverNodes","renderedNativeConvolverNode","createConvolverNode","createCreateNativeOfflineAudioContext","createDataCloneError","detachArrayBuffer","arrayBuffer","port1","MessageChannel","postMessage","createDecodeAudioData","createEncodingError","detachedArrayBuffers","isNativeContext","testPromiseSupport","anyContext","$c95853ef6593d860af9005a6$export$detachArrayBuffer","fail","createDecrementCycleCounter","cycleCounters","cycleCounter","nativeDestinationAudioParam","createDelayNodeConstructor","delayTime","createDelayNodeRenderer","createNativeDelayNode","nativeDelayNode","_delayTime","createDelayNodeRendererFactory","renderedNativeDelayNodes","renderedNativeDelayNode","nativeDelayNodeIsOwnedByContext","createDelayNode","createDeleteUnrenderedAudioWorkletNode","isDelayNode","createDetectCycles","chain","nextLink","$e8565aa11af6986a77f39982ad1d9537$export$isDelayNode","mergedCycles","nestedCycles","getOutputAudioNodeAtIndex","createDisconnectMultipleOutputs","createDynamicsCompressorNodeConstructor","attack","knee","ratio","release","threshold","createDynamicsCompressorNodeRenderer","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","reduction","createDynamicsCompressorNodeRendererFactory","renderedNativeDynamicsCompressorNodes","renderedNativeDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","createDynamicsCompressorNode","createEvaluateSource","head","originalOnErrorHandler","removeErrorEventListenerAndRevokeUrl","lineno","colno","createEventTargetConstructor","_nativeEventTarget","_listeners","wrappedEventListener","createExposeCurrentFrameAndCurrentTime","currentFrame","createFetchSource","fetch","ok","text","createGainNodeConstructor","createGainNodeRenderer","createGainNodeRendererFactory","renderedNativeGainNodes","renderedNativeGainNode","nativeGainNodeIsOwnedByContext","createGainNode","createGetAudioNodeRenderer","createGetAudioParamRenderer","audioParamConnections","createGetBackupNativeContext","$c0eaa44a1a5cf8271f2bfe632887932$export$BACKUP_NATIVE_CONTEXT_STORE","bckpNtveCntxt","createGetNativeContext","contextStore","$ed74da0ec09913a8b72d39ca43c9a99$export$createInvalidStateError","createGetUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodeStore","unrenderedAudioWorkletNodes","wrapIIRFilterNodeGetFrequencyResponseMethod","nativeIIRFilterNode","$e9c38c963acc71a6178bff1b$export$createInvalidAccessError","createIIRFilterNodeConstructor","createNativeIIRFilterNode","createIIRFilterNodeRenderer","$eb0c128bbf4ea17f0ab8bda6ef60b52b$export$wrapIIRFilterNodeGetFrequencyResponseMethod","_nativeIIRFilterNode","filterBuffer","feedbackLength","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","filterFullBuffer","createIIRFilterNodeRendererFactory","filteredBuffer","$c154519fbeef00eaa4687c40ef70e97a$export$filterBuffer","createNativeAudioNode","filteredBufferPromise","nativeIIRFilterNodeIsOwnedByContext","ntvCntxt","createIncrementCycleCounterFactory","createIsAnyAudioContext","anything","createIsAnyAudioNode","audioNodeStore","createIsAnyAudioParam","createIsAnyOfflineAudioContext","createIsNativeAudioContext","createIsNativeAudioNode","AudioNode","createIsNativeAudioParam","AudioParam","createIsNativeContext","createIsNativeOfflineAudioContext","createIsSecureContext","isSecureContext","createIsSupportedPromise","testAudioBufferCopyChannelMethodsSubarraySupport","testAudioContextCloseMethodSupport","testAudioContextDecodeAudioDataMethodTypeErrorSupport","testAudioContextOptionsSupport","testAudioNodeConnectMethodSupport","testAudioWorkletProcessorNoOutputsSupport","testChannelMergerNodeChannelCountSupport","testConstantSourceNodeAccurateSchedulingSupport","testConvolverNodeBufferReassignabilitySupport","testIsSecureContextSupport","testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","testStereoPannerNodeDefaultValueSupport","testTransferablesSupport","createMediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","_mediaElement","_nativeMediaElementAudioSourceNode","createMediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","stream","createMediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","_nativeMediaStreamAudioSourceNode","createMediaStreamTrackAudioSourceNodeConstructor","createNativeMediaStreamTrackAudioSourceNode","createMinimalAudioContextConstructor","createMinimalBaseAudioContextConstructor","audioDestinationNodeConstructor","createAudioListener","$c0eaa44a1a5cf8271f2bfe632887932$export$CONTEXT_STORE","_destination","_listener","_onstatechange","onstatechange","nativeOnStateChange","uint32Array","Uint32Array","createMinimalOfflineAudioContextConstructor","createNativeOfflineAudioContext","startRendering","$ffceb753e9ff10678b99a53a366be$export$testPromiseSupport","delayStateChangeEvent","stopImmediatePropagation","_waitForThePromiseToSettle","_length","_nativeOfflineAudioContext","createMonitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","$d2e065ed71c0af9791ca7929177dbd6$export$assignNativeAudioNodeOption","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","wrapAnalyserNodeGetFloatTimeDomainDataMethod","byteTimeDomainData","Uint8Array","createNativeAnalyserNodeFactory","$d3eeffc3630903ca11c89966b48c2dd3$export$assignNativeAudioNodeOptions","$e6658508a1ece64c38532f$export$testAnalyserNodeGetFloatTimeDomainDataMethodSupport","$df54c41d3488a5e611cd392f7216ff33$export$wrapAnalyserNodeGetFloatTimeDomainDataMethod","createNativeAudioBufferConstructor","assignNativeAudioNodeAudioParamValue","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","isScheduled","wrapAudioBufferSourceNodeStartMethodDurationParameter","stopTime","actualStartTime","durationInBufferTime","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","RangeError","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","createNativeAudioBufferSourceNodeFactory","addSilentConnection","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodDurationParameterSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","$cbfe15b7cabfd3ac18d45758870$export$assignNativeAudioNodeAudioParamValue","$b850a079e93b4524bb2b61434aabd$export$wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","$dd692aed8188e660067958e7f0ade380$export$wrapAudioBufferSourceNodeStartMethodDurationParameter","$df56c7894eb518e3f97ed362$export$wrapAudioScheduledSourceNodeStartMethodNegativeParameters","$e72a0e3e97462be2cb08dc01e58010f$export$wrapAudioScheduledSourceNodeStopMethodNegativeParameters","createNativeAudioContextConstructor","AudioContext","webkitAudioContext","createNativeAudioDestinationNodeFactory","overwriteAccessors","isNodeOfNativeOfflineAudioContext","createNativeAudioNodeFactory","factoryFunction","createNativeAudioWorkletNodeConstructor","AudioWorkletNode","testClonabilityOfAudioWorkletNodeOptions","audioWorkletNodeOptions","createNativeAudioWorkletNodeFactory","createNativeAudioWorkletNodeFaker","monitorConnections","patchedEventListeners","unpatchedEventListener","handleEvent","patchedEventListener","$b50ab22d08a74c104c8afc5af2ca0078$export$testClonabilityOfAudioWorkletNodeOptions","computeBufferSize","cloneAudioWorkletNodeOptions","port2","onmessageerror","createAudioWorkletProcessorPromise","$cf81f5a7a0f9d5b05f2509625b050$export$cloneAudioWorkletNodeOptions","createAudioWorkletProcessor","audioWorkletProcessorPromise","$ca98e214d0315e0a7545c62d377b$export$createAudioWorkletProcessorPromise","createNativeAudioWorkletNodeFakerFactory","messageChannel","bufferSize","$c8b3a4711b268f9b51e6364931f6fea$export$computeBufferSize","parameterMap","nativeAudioWorkletNodeFaker","$dd6461cbd36aab41cf9b2282c2d3d$export$createAudioWorkletProcessor","dWrkltPrcssr","disconnectOutputsGraph","outputBuffer","isConnected","disconnectFakeGraph","connectFakeGraph","createNativeBiquadFilterNodeFactory","createNativeChannelMergerNodeFactory","wrapChannelMergerNode","nativeChannelMergerNode","wrapChannelSplitterNode","channelSplitterNode","createNativeChannelSplitterNodeFactory","nativeChannelSplitterNode","$ed39200f09e9a879f98b241af4fb34$export$wrapChannelSplitterNode","createNativeConstantSourceNodeFactory","createNativeConstantSourceNodeFaker","interceptConnections","original","interceptor","createNativeConstantSourceNodeFakerFactory","audioNodeOptions","nativeConstantSourceNodeFaker","$d150dc5057bd723376565a9e6a54$export$interceptConnections","createNativeConvolverNodeFactory","createNativeConvolverNodeFaker","createNativeConvolverNodeFakerFactory","convolverNode","nativeConvolverNodeFaker","createNativeDelayNodeFactory","createNativeDynamicsCompressorNodeFactory","createNativeGainNodeFactory","createNativeIIRFilterNodeFactory","createNativeIIRFilterNodeFaker","createNativeIIRFilterNodeFakerFactory","divide","denominator","evaluatePolynomial","coefficient","z","bufferIndexes","xBuffers","yBuffers","nyquist","omega","PI","cos","sin","sqrt","atan2","createNativeMediaElementAudioSourceNodeFactory","ntvDCntxt","createNativeMediaStreamAudioDestinationNodeFactory","createNativeMediaStreamAudioSourceNodeFactory","audioStreamTracks","getAudioTracks","filteredAudioStreamTracks","MediaStream","createNativeMediaStreamTrackAudioSourceNodeFactory","kind","createNativeOfflineAudioContextConstructor","OfflineAudioContext","webkitOfflineAudioContext","createNativeOscillatorNodeFactory","nativeOscillatorNode","periodicWave","setPeriodicWave","createNativePannerNodeFactory","createNativePannerNodeFaker","nativePannerNode","orientationX","createNativePannerNodeFakerFactory","createNativeWaveShaperNode","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationY","orientationZ","panningModel","refDistance","rolloffFactor","pannerNode","SINGLE_CHANNEL_OPTIONS","inputGainNode","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","curve","oversample","nativePannerNodeFaker","createNativePeriodicWaveFactory","wrappedImag","wrappedReal","createNativeScriptProcessorNodeFactory","createNativeStereoPannerNodeFactory","createNativeStereoPannerNodeFaker","nativeStereoPannerNode","createNativeStereoPannerNodeFakerFactory","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraph","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","connectGraph","disconnectGraph","buildInternalGraphForMono","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","centerIndex","CURVE_SIZE","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraphForStereo","pan","nativeStereoPannerNodeFakerFactory","createNativeWaveShaperNodeFactory","createConnectedNativeAudioBufferSourceNode","createNativeWaveShaperNodeFaker","isDCCurve","nativeWaveShaperNode","disconnectNativeAudioBufferSourceNode","createNativeWaveShaperNodeFakerFactory","negativeWaveShaperNode","positiveWaveShaperNode","invertGainNode","revertGainNode","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","createOfflineAudioContextConstructor","createOscillatorNodeConstructor","createNativeOscillatorNode","createOscillatorNodeRenderer","oscillatorNodeRenderer","_nativeOscillatorNode","_oscillatorNodeRenderer","createOscillatorNodeRendererFactory","renderedNativeOscillatorNodes","renderedNativeOscillatorNode","nativeOscillatorNodeIsOwnedByContext","createOscillatorNode","createPannerNodeConstructor","createNativePannerNode","createPannerNodeRenderer","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createPannerNodeRendererFactory","renderedBufferPromise","renderedNativeGainNodeOrNativePannerNode","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","createPeriodicWaveConstructor","createNativePeriodicWave","periodicWaveStore","PeriodicWave","createRenderAutomation","getAudioParamRenderer","createRenderInputsOfAudioNode","getAudioNodeRenderer","nextTrace","allRenderingPromises","renderingPromises","createRenderInputsOfAudioParam","createRenderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","oncomplete","createStartRendering","createStereoPannerNodeConstructor","createNativeStereoPannerNode","createStereoPannerNodeRenderer","_pan","createStereoPannerNodeRendererFactory","renderedNativeStereoPannerNodes","renderedNativeStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","createStereoPannerNode","createTestAudioBufferConstructorSupport","createTestAudioBufferCopyChannelMethodsSubarraySupport","createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","createTestAudioBufferSourceNodeStartMethodDurationParameterSupport","offlineAudioContext","createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport","createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport","createTestAudioContextCloseMethodSupport","audioContext","isAudioContextClosable","createTestAudioContextDecodeAudioDataMethodTypeErrorSupport","isPending","createTestAudioContextOptionsSupport","createTestAudioNodeConnectMethodSupport","isSupported","createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport","createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport","createTestAudioWorkletProcessorNoOutputsSupport","isCallingProcess","createTestChannelMergerNodeChannelCountSupport","createTestConstantSourceNodeAccurateSchedulingSupport","createTestConvolverNodeBufferReassignabilitySupport","createTestIsSecureContextSupport","createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","createTestOfflineAudioContextCurrentTimeSupport","createTestStereoPannerNodeDefaultValueSupport","stereoPanner","createWaveShaperNodeConstructor","createWaveShaperNodeRenderer","_isCurveNullified","_nativeWaveShaperNode","createWaveShaperNodeRendererFactory","renderedNativeWaveShaperNodes","renderedNativeWaveShaperNode","createWaveShaperNode","createWindow","createWrapAudioBufferCopyChannelMethods","convertNumberToUnsignedLong","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","nullifiedBuffer","createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","disconnectGainNode","isStopped","createWrapChannelMergerNode","monitorConnectionsFunction","object","property","createGetter","createSetter","ArrayBuffer","wrapAudioBufferSourceNodeStartMethodOffsetClamping","clampedOffset","currentTarget","createConstantSourceNodeRenderer","audioContextConstructor","audioWorkletNodeConstructor","minimalAudioContextConstructor","minimalOfflineAudioContextConstructor","offlineAudioContextConstructor","isAnyAudioContext","isAnyAudioNode","isAnyAudioParam","isAnyOfflineAudioContext","$b40ac1455b44f539facc655a25a8455$export$createCacheTestResult","$d4aa9e17ac77a94aec5bc42624fb7d$export$createWindow","$a612a7c11ed609975c28fac80ccb0c$export$createNativeOfflineAudioContextConstructor","$bbc0355e37a353f73391053152217$export$createIsNativeOfflineAudioContext","$d3819fa860bfb45f9f2d28c6871dc$export$createNativeAudioContextConstructor","$a63950611d0afa667a85b24588d6f454$export$createGetBackupNativeContext","$abded4e22f8b73e027356f46addb03f5$export$createNativeAudioNodeFactory","$cb2a8fd997cd599ab8fdb7c1afb7c$export$createNativeAnalyserNodeFactory","$ab6e4da648eec7a951d15088698b79c$export$createGetAudioNodeRenderer","$cbe1244a47ded2856b31d8436ede6bd7$export$createRenderInputsOfAudioNode","$d8a04c2bd61b1019e181239bc2a00199$export$createAnalyserNodeRendererFactory","$e3a610f1d0d9a32f1569c25e97263c3$export$createGetNativeContext","$d9661b19fb2c7e1acc62b5581b1fea$export$createEventTargetConstructor","$e8ccedf3d82d11dc261fcfe95ba87966$export$wrapEventListener","$b64b0d7943b24398179bfba1170adbb8$export$createIsNativeAudioContext","$ff8fec79ebf3e12477ec1f48db254ed0$export$createIsNativeAudioNode","$ff40baea072e03389179ac601e81c62a$export$createIsNativeAudioParam","$e77d76419e24972fa6bb6a203c$export$createAudioNodeConstructor","$f751e08c4bb7d97abf3710f8f2e3da1$export$createAddAudioNodeConnections","$b99d904a0f901d0394e6a2c9d09d$export$createIncrementCycleCounterFactory","$b04693f1e87080bdedb35d6788c59192$export$createNotSupportedError","$a53346d263682a64d356762094c55f91$export$createDecrementCycleCounter","$f18553c8bd027d1c38ab14cf2fbaa75e$export$createDetectCycles","$e8fefa2b1fce0ece00aa291c26e5f9a0$export$createAnalyserNodeConstructor","$ed35d9de8e9e74312cb42bf5c9c8dd3e$export$createNativeAudioBufferConstructor","$b9e5ee4b387720808854c7528d0144$export$createConvertNumberToUnsignedLong","$f7808219745f3b8c2613436f906597bc$export$createWrapAudioBufferCopyChannelMethods","$e1b23600ef04fe5fed98968119811d13$export$createWrapAudioBufferCopyChannelMethodsOutOfBounds","$aeed8d63ae627a50da3034b00$export$createAudioBufferConstructor","$c59ddabc5921d3a40646ad24b0ff9ec8$export$createTestAudioBufferConstructorSupport","$a3be0a65ca60da25e5d268643e79d8ca$export$createNativeGainNodeFactory","$c10cb87ee7e0ef65e660d1f3d1b7ae74$export$createAddSilentConnection","$df2017c47c9e4f97c7ac2a5a7c4$export$createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport","$d6eb71a9b5fc5c933c3597633aedc7c$export$createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","$e4b8ae6c259c35cf610b03a0d20fcc$export$createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport","$edcca1777e4f955dfbea8ce792491663$export$createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","$de52419e8442ac775352019cd0239f26$export$createRenderInputsOfAudioParam","$a349dd7f2d2a780882635282a80e4cc$export$createConnectAudioParam","$bb8f9ca15813a2fd91729067053983f2$export$createNativeAudioBufferSourceNodeFactory","$cdd50b9465b4be80d09f30b770784e$export$createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","$a13ccfcf30f29521f3a2f98c16f38670$export$createTestAudioBufferSourceNodeStartMethodDurationParameterSupport","$a69e43d9b991ac4212ed4356c16bc24c$export$createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport","$e03175ff6e636b0f2535baf68dd9cf4e$export$createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport","$a749da0bb66eb264d89d45a2a627c16b$export$wrapAudioBufferSourceNodeStartMethodOffsetClamping","$eedd8c421d5ead4f34feaeaf1cc03159$export$createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","$bf744733ca8c6bbaf47ecc42137c6e88$export$overwriteAccessors","$fd459cf47ebad99e3080ae2306b104$export$createRenderAutomation","$d0e859d69b3e272324053658f4548f$export$createGetAudioParamRenderer","$de9cdc44474c9884aec55d93221acb$export$createAudioBufferSourceNodeRendererFactory","$d8266f83c91324340e89fe0c7f514bad$export$createAudioParamFactory","$c727f16389d6004b1987bee614b5cc$export$createAddAudioParamConnections","$c29b84a3620b8ed3c5f63de0d2db0$export$createAudioParamRenderer","$b29c30af39f0966e5c337e4e54f2c24a$export$createAudioBufferSourceNodeConstructor","$a23b62aa1c559b2bee2ac1994ad117$export$createAudioDestinationNodeConstructor","$e70fd94cc6a1b151c414a229ae6220$export$createAudioDestinationNodeRenderer","$b3601032076eda080203f03fd270$export$createNativeAudioDestinationNodeFactory","$adef6d1cdc9f1bcaaf56bc5a3d8b6f76$export$createNativeBiquadFilterNodeFactory","$c61df34aef6bc81f254dc895165c$export$createBiquadFilterNodeRendererFactory","$bd12465bcbf8e3b67e837d5036e3d721$export$createBiquadFilterNodeConstructor","$f69ea058c96b5f2c5896df0ea579$export$createMonitorConnections","$a3b30377ea4e52443e3a1f34bff8d87$export$createWrapChannelMergerNode","$eb4b57f2affbdd9d5a66d10dfe5062$export$createNativeChannelMergerNodeFactory","$f0478ead939c53c9b88b3b027173a2f8$export$createChannelMergerNodeRendererFactory","$b3240aa791cfe76801dea3857e39e22$export$createChannelMergerNodeConstructor","$b1768dac9f3ff37ec86b3f21369d0c4$export$createNativeChannelSplitterNodeFactory","$a321064d78af74d599030335a4fc840$export$createChannelSplitterNodeRendererFactory","$b2d2e5aad16fb29586aa264fc10660$export$createChannelSplitterNodeConstructor","$d0f8124f53615807ececa50ab8923b$export$createNativeConstantSourceNodeFakerFactory","$b0640c271cd3cc831fbcfc5f301c5083$export$createNativeConstantSourceNodeFactory","$eaf3c8ccc269915d10b3d97c696ebe9$export$createConstantSourceNodeRendererFactory","$c2ed07fe4e290e8490fa3f46f793ec8a$export$createConstantSourceNodeConstructor","$ce5f1ce952a91fb070e9723dd04fb54$export$createNativeConvolverNodeFakerFactory","$e61d01f322b8b14d57fb86db3f3$export$createNativeConvolverNodeFactory","$fece98e9311576f34021d9d1f498e58c$export$createConvolverNodeRendererFactory","$c95066cb18b3ca9b5c679a0e45c00cce$export$createConvolverNodeConstructor","$b562f3ed927042fc03455f4baad0e$export$createNativeDelayNodeFactory","$f038f3ec594f8e5a0a114a59c9$export$createDelayNodeRendererFactory","$a1c293929d19703187510f603d4cfc$export$createDelayNodeConstructor","$ef70566836e887ae88b063f60820389d$export$createNativeDynamicsCompressorNodeFactory","$d9958f9149351676ff37b8bc85fa12b$export$createDynamicsCompressorNodeRendererFactory","$b75d46d0b0b737f175fc8de155efaa$export$createDynamicsCompressorNodeConstructor","$a744fa93fae5d3b17e57b003333217ac$export$createGainNodeRendererFactory","$cf1186349bed7d074e6befc74aa$export$createGainNodeConstructor","$e6e07b7942a004394612cc1831ae$export$createNativeScriptProcessorNodeFactory","$e91aea51ac02d3e90ab37ac70b820$export$createNativeIIRFilterNodeFakerFactory","$ffaebff802f2c63d29b67a92535bff$export$createRenderNativeOfflineAudioContext","$ab10d4b85054a19beae67aeb11bbcdf1$export$createTestOfflineAudioContextCurrentTimeSupport","$d3b61427e857fcdf01fe752a7014a9dd$export$createIIRFilterNodeRendererFactory","$ccf26989b3fde7dd17689e4a66f8faa$export$createNativeIIRFilterNodeFactory","$aa7c2132d69630d372aa9844041b52f$export$createIIRFilterNodeConstructor","$c2da379a61e4c9ad9adab1eb0192b513$export$createAudioListenerFactory","$fa0de4c8d39a5280bcdb4b574137517$export$createMinimalBaseAudioContextConstructor","$c9d5879dbea70feb00eb42a63db8ff3d$export$createNativeOscillatorNodeFactory","$ccd00461e2f0558afadaac07887cf7ca$export$createOscillatorNodeRendererFactory","$c0fafdc7a396ef9f141ba9ac62392f9$export$createOscillatorNodeConstructor","$c852c154235908a227305f1dd1dcd64$export$createConnectedNativeAudioBufferSourceNodeFactory","$a028b07a0af02bfa8d90cbb939813e$export$createNativeWaveShaperNodeFakerFactory","$b9fbcfe0705d4a391e27910df920b6e0$export$isDCCurve","$f251d02c619ee38ab6f0e3b91ab23632$export$createNativeWaveShaperNodeFactory","$f81d65b71c549273f1c4b448e83de0a8$export$createNativePannerNodeFakerFactory","$cf04873e84fb5aaf932804$export$createNativePannerNodeFactory","$b2109c412368a69d0f91d14dd032f8$export$createPannerNodeRendererFactory","$a0ba0aee0911f0f4c30ad4038e3e14$export$createPannerNodeConstructor","$c4d05650eb6583d83604abba0128506$export$createNativePeriodicWaveFactory","$ddba64be3bf69785dcdec2734921ea96$export$createPeriodicWaveConstructor","$b83e9aaae019f48b43cc3e7a7e$export$createNativeStereoPannerNodeFakerFactory","$c6ce22c5f1caa4bd9291d58b47bbc34$export$createNativeStereoPannerNodeFactory","$f72e719829e7a59ee7e6306de8fad3$export$createStereoPannerNodeRendererFactory","$d1fc1fb6e640ff3b3ff2e625faa43b4$export$createStereoPannerNodeConstructor","$f62f5f9986b6975d587c4904eacfe8$export$createWaveShaperNodeRendererFactory","$d74b5f01a37a0ab0b8c90372e6097016$export$createWaveShaperNodeConstructor","$ca1ea4314bbf270bb5cf9dc069acdd36$export$createIsSecureContext","$d4c941bb45d47d0a00a71e8c7f711270$export$createExposeCurrentFrameAndCurrentTime","$ba5c9ba317971c5528d53ad$export$createAddAudioWorkletModule","$ebbd8e842587b4dfeb0c8$export$createEvaluateSource","$fe20ac72e44f5fc8ac923235807e957$export$createFetchSource","$c05aca14ce4188064d6c96d3481a3$export$createAbortError","$d04626d93053a78d26f45cbe93d67ad2$export$createIsNativeContext","$eeb545e15a84a477f93d97556bc64e6$export$createDecodeAudioData","$b8ca0710a2fa66de9f4dbb0c1c2ec25$export$createDataCloneError","$d747515739f218fc0e7d5e1fcdb7074$export$createEncodingError","$c83f68963d5f60dd1e6c1$export$createBaseAudioContextConstructor","$e3b74ca418c6f3fda3a3e852514e389$export$createNativeMediaElementAudioSourceNodeFactory","$ecf9a7691b2946fa0408eb11c1242a17$export$createMediaElementAudioSourceNodeConstructor","$b09e6ede150d29dce2e7e75ce29f30$export$createNativeMediaStreamAudioDestinationNodeFactory","$eb45e696e555259bd9cf8eea6de562c$export$createMediaStreamAudioDestinationNodeConstructor","$f065f0b297a23e41d6cbe2abdbd$export$createNativeMediaStreamAudioSourceNodeFactory","$f43328e0c8cfaeeb8d21c613b87c6a0$export$createMediaStreamAudioSourceNodeConstructor","$d4a4c4738110feebe4a2524453e78093$export$createNativeMediaStreamTrackAudioSourceNodeFactory","$e09d0fa7c2be0462312dc4fb7fc8$export$createMediaStreamTrackAudioSourceNodeConstructor","$be97b9708099bd3c4011ba14d76c47e5$export$createAudioContextConstructor","$e78c5b2dfde4ede0987d4acb0077d$export$createUnknownError","$bba8f3c97f7fe748a3562c349481c400$export$createGetUnrenderedAudioWorkletNodes","$e8cc54919805d74acaba8bfa891022$export$createAddUnrenderedAudioWorkletNode","$f377738aee3190f11cbd7d2a5fafc6$export$createConnectMultipleOutputs","$fb18d41f67f0acad90a6e30df3fc5c$export$createDeleteUnrenderedAudioWorkletNode","$b6d645554c5cbfc1a57d52aea8697c0$export$createDisconnectMultipleOutputs","$be10b602969a84f772b89043ae2$export$createNativeAudioWorkletNodeFakerFactory","$e6e69637e5954040abd7ee199374b27f$export$createNativeAudioWorkletNodeFactory","$c04e2eaaf016112ed4b2fdee24f50$export$createNativeAudioWorkletNodeConstructor","$b953d9ff979082085cf8438baa6a4$export$createAudioWorkletNodeRendererFactory","$ddbac3008e2fe0efd5db4b53dbebf894$export$createAudioWorkletNodeConstructor","$c1687d20c0d14b0ddc9b2e3afa8bd0$export$createMinimalAudioContextConstructor","$cc8d299e6f67c7229d1f237b084e52$export$createCreateNativeOfflineAudioContext","$dd7bc4d5dddad4301adfade7bb0cf31$export$createStartRendering","$e9372092213f8e912dfa51c67a358d$export$createMinimalOfflineAudioContextConstructor","$ced7716f6599c66e8d9a3f2701955a4f$export$createOfflineAudioContextConstructor","$cf15a5bdc7e8bb4e2a104551b192589$export$createIsAnyAudioContext","$d01d134a4aa5e1d7da9cd76854$export$createIsAnyAudioNode","$bd89932935ff7f233ed1dceac312620$export$createIsAnyAudioParam","$a8a275c48d5565e3ba33481689dbcbce$export$createIsAnyOfflineAudioContext","$fbd3b9d3ec853230c14b0c616804b9$export$createIsSupportedPromise","$c28f45fa8117f02ef64d8b9317de1447$export$createTestAudioBufferCopyChannelMethodsSubarraySupport","$cd83e1019ed87648a05a97ec0bf7e878$export$createTestAudioContextCloseMethodSupport","$a48154022f0c157e5e43aef5a84b85b7$export$createTestAudioContextDecodeAudioDataMethodTypeErrorSupport","$a4dbeb041bedfa1901715a1296d098$export$createTestAudioContextOptionsSupport","$fc2249c72fcf94121aec8e062bb6cbc$export$createTestAudioNodeConnectMethodSupport","$bde56477c00a9f4511e6d324cd06838f$export$createTestAudioWorkletProcessorNoOutputsSupport","$e248692d4eeaf99b443cfdd4411b37$export$createTestChannelMergerNodeChannelCountSupport","$d9d8fee3dba948325cf2021ee20bb$export$createTestConstantSourceNodeAccurateSchedulingSupport","$a71cdf72b23c8bb12e1d2fd8abf66a43$export$createTestConvolverNodeBufferReassignabilitySupport","$dc0aadd9dcc9d4638a84503713af6b$export$createTestIsSecureContextSupport","$d3007350e31606dad2082d3fca1dcec8$export$createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","$ab3b06c3cf57a77b93d44cade3feec$export$createTestStereoPannerNodeDefaultValueSupport","$d26c001d4581a5ad7cff7abf68af2c23$export$testTransferablesSupport","defaultLogger","statement","assertRange","gte","lte","assertContextRunning","setLogger","isUndef","isDefined","isFunction","isNumber","isObject","isBoolean","isString","isNote","theWindow","hasAudioContext","createAudioContext","$a993c156e7853c07af41ae852$export$AudioContext","createOfflineAudioContext","channels","$a993c156e7853c07af41ae852$export$OfflineAudioContext","createAudioWorkletNode","$bed910145b706e4baa9d444dcf9cc9a$export$assert","$ed03ba364d614ba96548271c4eb7e10$export$isDefined","$a993c156e7853c07af41ae852$export$AudioWorkletNode","supported","Ticker","updateInterval","_callback","_type","_updateInterval","_createClock","_createWorker","toFixed","blobUrl","worker","Worker","_worker","_createTimeout","_timeout","_disposeClock","terminate","interval","dispose","isAudioParam","$a993c156e7853c07af41ae852$export$isAnyAudioParam","$a993c156e7853c07af41ae852$export$isAnyAudioNode","isOfflineAudioContext","$a993c156e7853c07af41ae852$export$isAnyOfflineAudioContext","isAudioContext","$a993c156e7853c07af41ae852$export$isAnyAudioContext","isAudioBuffer","noCopy","$b738399f48eb52564c6a494324edab4a$export$isAudioParam","$b738399f48eb52564c6a494324edab4a$export$isAudioNode","$b738399f48eb52564c6a494324edab4a$export$isAudioBuffer","deepMerge","sources","$ed03ba364d614ba96548271c4eb7e10$export$isObject","deepEquals","arrayA","arrayB","optionsFromArguments","defaults","argsArray","objKey","opts","getDefaultsFromInstance","getDefaults","defaultArg","given","fallback","$ed03ba364d614ba96548271c4eb7e10$export$isUndef","omitFromObject","omit","Tone","_wasDisposed","$e65cd22188939e2616c881c2b255$export$theWindow","TONE_DEBUG_CLASS","$bed910145b706e4baa9d444dcf9cc9a$export$log","disposed","$f1370f4f0d60ba7e1cfc0c401efa9a7$export$version","EPSILON","GT","GTE","EQ","LT","clamp","Timeline","$e2e65f112836a37bd3172bc4db76ce$export$Tone","_timeline","$c37dddcbec3ced426157fc8a86c5d$export$optionsFromArguments","memory","increasing","valueOf","lastValue","$fa3102f660528e12b97732a61c$export$GTE","_search","diff","param","getAfter","getBefore","after","$fa3102f660528e12b97732a61c$export$EQ","cancelBefore","previousEvent","beginning","end","midPoint","nextEvent","$fa3102f660528e12b97732a61c$export$LT","$fa3102f660528e12b97732a61c$export$GT","_iterate","lowerBound","upperBound","forEachBefore","forEachAfter","forEachBetween","forEachFrom","forEachAtTime","notifyNewContext","notifyCloseContext","onContextInit","cb","initializeContext","onContextClose","closeContext","Emitter","eventName","_events","boundCallback","constr","BaseContext","$ecee69c84ff053ec5e20b82$export$Emitter","Context","$ed5f4bb292e0688954f02f19d$export$BaseContext","_constants","_timeouts","$c986c6d898c9f099f7f9fe94ae2a1e4$export$Timeline","_timeoutIds","_initialized","_workletModules","$e65cd22188939e2616c881c2b255$export$createAudioContext","_ticker","$c4036ce0f0600ddd644bcf720b447bbe$export$Ticker","clockSource","_timeoutLoop","_setLatencyHint","lookAhead","initialize","$c98d07636b588b312abfa33b6c84d2b1$export$initializeContext","feedForward","$b738399f48eb52564c6a494324edab4a$export$isAudioContext","l","_transport","draw","_draw","$e65cd22188939e2616c881c2b255$export$createAudioWorkletNode","rawContext","workletsAreReady","promises","_latencyHint","hint","lookAheadValue","$ed03ba364d614ba96548271c4eb7e10$export$isString","immediate","$c98d07636b588b312abfa33b6c84d2b1$export$closeContext","getConstant","constant","firstEvent","intervalFn","DummyContext","_numberOfChannels","_sampleRate","_numberOfInputs","_numberOfOutputs","_maxDelayTime","_feedForward","_feedback","_real","_imag","_constraints","_stream","_audioData","_name","_options","_url","_fn","_id","_interval","_val","noOp","readOnly","$ed03ba364d614ba96548271c4eb7e10$export$isArray","ToneAudioBuffer","$ec94dc8329a669d360355d89645aacf3$export$noOp","load","_buffer","$cf565b0f18b38eeef46b7f3cf6c16cff$export$getContext","loaded","_reversed","_reverse","doneLoading","downloads","fromArray","isMultidimensional","multiChannelArray","toMono","chanNum","$ed03ba364d614ba96548271c4eb7e10$export$isNumber","toArray","outputArray","numChannels","channelArray","startSamples","endSamples","retBuffer","subarray","rev","extensions","extension","ext","supportsType","baseUrl","endsWith","canPlayType","OfflineContext","$b7fbb4041e66583f4d76d8e21851cd2$export$Context","$b738399f48eb52564c6a494324edab4a$export$isOfflineAudioContext","$e65cd22188939e2616c881c2b255$export$createOfflineAudioContext","_currentTime","_duration","_renderClock","asynchronous","yieldEvery","$a5f780c589ca8fdfe74fc86$export$ToneAudioBuffer","dummyContext","globalContext","getContext","$e65cd22188939e2616c881c2b255$export$hasAudioContext","setContext","$b011d9a6215b23e6c18d9d3daaebc$export$OfflineContext","$cbea689f7ecad7d619148fb981b3083$export$DummyContext","TONE_SILENCE_LOGGING","printString","A4","equalPowerScale","percent","piFactor","dbToGain","db","gainToDb","LN10","intervalToFrequencyRatio","getA4","setA4","freq","ftom","ftomf","mtof","midi","TimeBaseClass","units","defaultUnits","_units","_expressions","_getExpressions","hz","_frequencyToUnits","regexp","_ticksToUnits","_beatsToUnits","_getTimeSignature","dot","numericValue","scalar","number","_secondsToUnits","samples","tr","total","fromType","_noArg","typeName","quantity","expr","matching","beats","_getBpm","seconds","ticks","_getPPQ","_now","bpm","timeSignature","PPQ","toSeconds","toTicks","toFrequency","toMidi","toSamples","toMilliseconds","TimeClass","Time","$c69fca9c1cf243f781b1bdae4e59fcc3$export$TimeBaseClass","capture","quantize","quantTo","nextSubdivision","subdiv","subdivision","toNotation","testNotations","power","closest","closestSeconds","notation","notationSeconds","toBarsBeatsSixteenths","quarterTime","quarters","measures","sixteenths","sixteenthString","$e6ac9eccbff90bee7aeb9d849bd4413e$export$ftom","FrequencyClass","noteToScaleIndex","scaleIndexToNote","Frequency","$ffb0fa2a5e3a35861901ad175e83$export$TimeClass","$e6ac9eccbff90bee7aeb9d849bd4413e$export$getA4","$e6ac9eccbff90bee7aeb9d849bd4413e$export$setA4","note","pitch","octave","noteNumber","transpose","$e6ac9eccbff90bee7aeb9d849bd4413e$export$intervalToFrequencyRatio","harmonize","intervals","toNote","$e6ac9eccbff90bee7aeb9d849bd4413e$export$mtof","cbb","c#","cx","dbb","d#","dx","ebb","eb","e#","fbb","fb","f#","fx","gbb","gb","g#","gx","abb","ab","a#","ax","bbb","bb","b#","bx","TransportTimeClass","TransportTime","ToneWithContext","defaultContext","sampleTime","blockTime","$edea99bf1f042982e54886af3fc19$export$FrequencyClass","$eac71722f26d1b8bc8b84f7d12f8047$export$TransportTimeClass","_getPartialProperties","$c37dddcbec3ced426157fc8a86c5d$export$getDefaultsFromInstance","attribute","member","$ed03ba364d614ba96548271c4eb7e10$export$isBoolean","StateTimeline","initial","_initial","setStateAtTime","getValueAtTime","$bed910145b706e4baa9d444dcf9cc9a$export$assertRange","getLastState","getNextState","Param","$ec24aa229d7abd555d2cdb27a1737f1c$export$ToneWithContext","overridden","_minOutput","_param","_swappable","swappable","_initialValue","convert","_minValue","_maxValue","_toType","_is","_assertRange","_fromType","$e6ac9eccbff90bee7aeb9d849bd4413e$export$dbToGain","$e6ac9eccbff90bee7aeb9d849bd4413e$export$gainToDb","computedTime","isFinite","before","beforeValue","previous","_linearInterpolate","_exponentialInterpolate","previousVal","_exponentialApproach","setRampPoint","currentVal","exponentialRampTo","rampTime","linearRampTo","targetRampTo","exponentialApproachValueAtTime","scaling","startingValue","segTime","valueAtTime","rampTo","subdivisions","setParam","t0","v0","v1","t1","ToneAudioNode","connectSeries","first","prev","current","srcNode","dstNode","outputNumber","inputNumber","$c183b581e938560b9179b70476$export$Param","_internalChannels","_isAudioNode","_getInternalNodes","nodeList","_setChannelProperties","_getChannelProperties","outputNum","inputNum","toDestination","toMaster","$bed910145b706e4baa9d444dcf9cc9a$export$warn","fan","Gain","$bf8868a12eafcc67a3b0f904d5d12ca$export$ToneAudioNode","_gainNode","$ec94dc8329a669d360355d89645aacf3$export$readOnly","OneShotSource","_stopTime","$c91d629c9293a66d9e586f386e14$export$Gain","getStateAtTime","_fadeIn","fadeIn","_fadeOut","fadeOut","_curve","_startGain","fadeInTime","_stopGain","cancelStop","fadeOutTime","additionalTail","_stopSource","disposeCallback","requestIdleCallback","ToneConstantSource","$c647432c766c83091c88cc2eaf3ed20$export$OneShotSource","_source","$bf8868a12eafcc67a3b0f904d5d12ca$export$connect","Signal","connectSignal","signal","override","_constantSource","$eab81e993a1386ff6feb7e920748942$export$ToneConstantSource","TickParam","_multiplier","multiplier","computedValue","prevEvent","segments","rampVal","ticksUntilTime","_getTicksUntilEvent","computedVal","segmentDur","val0","val1","onTheLineEvent","getTicksAtTime","getDurationOfTicks","currentTick","getTimeOfTick","tick","sol1","sol2","ticksToTime","timeToTicks","computedDuration","startTicks","TickSignal","$fa16b276946645e834441fc76fcedb1$export$Signal","$fe08499d2cd51b69af78ff2b74e9a$export$TickParam","TickSource","$ed53018e1ab2a47459ccde289e77b215$export$StateTimeline","_tickOffset","$a01138e9c63b546cf9faefc5bf$export$TickSignal","setTicksAtTime","pause","stopEvent","tmpEvent","lastState","elapsedTicks","periodStartTime","offsetEvent","getSecondsAtTime","elapsedSeconds","absoluteTicks","forEachTickBetween","lastStateEvent","maxStartTime","nextTickTime","Clock","_lastUpdate","_boundLoop","_loop","_tickSource","$d4610f93e889c9970eddfe97a99a4a$export$TickSource","$bed910145b706e4baa9d444dcf9cc9a$export$assertContextRunning","mixin","TimelineValue","initialValue","TicksClass","Ticks","IntervalTimeline","IntervalNode","_root","updateHeight","updateMax","_rebalance","_removeNode","_setRoot","_replaceNodeInParent","replacement","isLeftChild","temp","getBalance","_rotateLeft","pivotNode","_rotateRight","balance","allNodes","traverse","searchAfter","_left","_right","height","point","TransportEvent","_eventId","_once","invoke","TransportRepeatEvent","$f69bd2f3ceeddac18f90c6a5b7a2d0af$export$TransportEvent","_currentId","_nextId","_nextTick","_boundRestart","_restart","$faa92ddc95eff95ea1a10e0abee6c65$export$TicksClass","_createEvents","scheduleOnce","Transport","$dcd1fb222d85859a6f5b23b157b70a5$export$TimelineValue","_loopStart","_loopEnd","_scheduledEvents","_repeatedEvents","$afa43c67d12ef604bb5ad2e45b8223$export$IntervalTimeline","_syncedSignals","_swingAmount","_ppq","ppq","_clock","$f2c151075308c6bd65219083a8019$export$Clock","_processTick","_bindClockEvents","_timeSignature","_swingTicks","swing","swingSubdivision","tickTime","progress","schedule","_addEvent","scheduleRepeat","$e29e16ce6f1259145e4db5d0bbdc1879$export$TransportRepeatEvent","eventId","item","timeline","computedAfter","offsetTicks","toggle","timeSig","startPosition","endPosition","setLoopPoints","position","remainingTicks","syncSignal","computedFreq","ratioSignal","unsyncSignal","syncedSignal","$ec94dc8329a669d360355d89645aacf3$export$writable","$c98d07636b588b312abfa33b6c84d2b1$export$onContextInit","$c98d07636b588b312abfa33b6c84d2b1$export$onContextClose","Delay","maxDelayInSeconds","maxDelay","_maxDelay","_delayNode","Volume","volume","_unmutedVolume","mute","Destination","$ac2d50459a8b2996bd08a09c79f74b$export$Volume","$bf8868a12eafcc67a3b0f904d5d12ca$export$connectSeries","Offline","originalContext","$cf565b0f18b38eeef46b7f3cf6c16cff$export$setContext","bufferPromise","ToneAudioBuffers","_buffers","_loadingCount","urls","_bufferLoaded","MidiClass","Midi","Draw","expiration","anticipation","_boundDrawLoop","_drawLoop","_animationFrame","requestAnimationFrame","cancelAnimationFrame","Source","_synced","_scheduled","_syncedStart","_syncedStop","_volume","onstop","_clampToCurrentTime","$c37dddcbec3ced426157fc8a86c5d$export$defaultArg","sched","_start","restart","_stop","sync","stateEvent","startOffset","unsync","ToneBufferSource","_sourceStarted","_sourceStopped","computedOffset","loopDuration","computedDur","Noise","_noiseCache","_noiseBuffers","$b34e8cc03ec63a610d9404c36db80f$export$Source","rate","$f8cf2d378002e48bb2d36795d4d$export$ToneBufferSource","brown","pink","white","channelNum","lastOut","b0","b1","b2","b3","b4","b5","b6","UserMedia","labelOrId","devices","enumerateDevices","_device","deviceId","audio","echoCancellation","noiseSuppression","mozNoiseSuppression","mediaDevices","getUserMedia","mediaStreamNode","_mediaStream","track","active","groupId","generateWaveform","ToneOscillatorNode","_oscillator","Oscillator","_partials","partials","_partialCount","partialCount","baseType","phase","oscillator","$a18572535394f4b48e40bb05f6e$export$ToneOscillatorNode","_wave","syncFrequency","unsyncFrequency","_getCachedPeriodicWave","_periodicWaveCache","description","_phase","$c37dddcbec3ced426157fc8a86c5d$export$deepEquals","oscProps","isBasicType","wave","_getRealImaginary","partial","exec","fullPartials","periodicWaveSize","_inverseFFT","getInitialValue","twoPi","$fa3102f660528e12b97732a61c$export$clamp","asArray","$a6945bf7a54edc077e64ec4$export$generateWaveform","SignalOperator","$fa16b276946645e834441fc76fcedb1$export$connectSignal","WaveShaper","$a60cae6389802fad24e1ad498a$export$SignalOperator","_shaper","$ed03ba364d614ba96548271c4eb7e10$export$isFunction","setMap","normalized","oversampling","AudioToGain","_norm","$f1fc441d5417ed569d8ee91bcdd32d05$export$WaveShaper","Multiply","_mult","factor","AMOscillator","_modulationScale","$b41e23141d3ec2e2f8ff16f2540f5a$export$AudioToGain","_modulationNode","_carrier","$f48800dd679a32a0a221c7f1752372b4$export$Oscillator","_modulator","modulationType","harmonicity","$ff17165bcd4612af54d5b81008f83$export$Multiply","FMOscillator","modulationIndex","PulseOscillator","_widthGate","_thresh","width","_triangle","carrierType","FatOscillator","_oscillators","_spread","spread","_forEach","osc","PWMOscillator","sourceType","_scale","_pulse","$b932568b9dfdcde17bf5ac671162759$export$PulseOscillator","modulationFrequency","OmniOscillatorSourceMap","OmniOscillator","am","$b6849132b5850a09d2157551d1cf53$export$AMOscillator","fat","$c257bd914c53ff7097b062701d1d3$export$FatOscillator","fm","$f8db5e0815ee47a3cef80882142af4a$export$FMOscillator","pulse","pwm","$fc7754c318d72c3f192cbb714adb5a70$export$PWMOscillator","_sourceType","_createNewOscillator","_getOscType","oscType","OscConstructor","oldOsc","sType","mType","Add","_sum","addend","Scale","_add","$eff132ffdb4b6376c4da91c49280cdc1$export$Add","_min","_max","_setRange","Zero","$bf8868a12eafcc67a3b0f904d5d12ca$export$disconnect","LFO","_stoppedValue","_clampValue","_amplitudeGain","amplitude","_stoppedSignal","_zeros","$ff3a4eca886ae8fffc77de59b0941fe7$export$Zero","_a2g","_scaler","$aa58724630c9932475724292f87f2cfb$export$Scale","currentMin","currentMax","range","valueMap","propertyKey","newValue","timeRange","Player","_activeSources","_onload","autostart","_onSourceEnd","origDuration","implicitEnd","seek","$f4a96ca9391961069b1fb6bb726fc04$export$__decorate","$b63b3328ab51c067b74dc2856c$export$timeRange","Players","_players","$f6caf5b13c48d35e8d48236ec8365c$export$ToneAudioBuffers","player","$d9717c84bae8f1b4b6e47fd0c786f$export$Player","stopAll","GrainPlayer","_tick","grainSize","_grainSize","_overlap","overlap","_onstop","Abs","_abs","GainToAudio","Negate","_multiply","Subtract","_neg","$b0461fdff0d5bfffdd76bb68b8d905f$export$Negate","subtrahend","GreaterThanZero","GreaterThan","_subtract","$eaf59487c4af30e485bc4e5ee3b1e3b4$export$Subtract","_gtz","$c75bf59126f81491915efb26e1de89$export$GreaterThanZero","Pow","_exponentScaler","_expFunc","_exponent","exponent","ScaleExp","_exp","$c1f70ac5565e2518cda38efeea7d6f$export$Pow","SyncedSignal","_lastVal","_onTick","_syncedCallback","_anchorValue","Envelope","EnvelopeCurves","_sig","decay","sustain","attackCurve","releaseCurve","decayCurve","_getCurve","direction","curveName","_setCurve","curveDef","_attackCurve","_releaseCurve","_decayCurve","triggerAttack","velocity","decayValue","decayStart","triggerRelease","triggerAttackRelease","attackPortion","envelopeDuration","sustainTime","totalDuration","clone","$b63b3328ab51c067b74dc2856c$export$range","cosineCurve","rippleCurve","curveLen","sineWave","stairsCurve","sineCurve","bounceCurve","invertCurve","bounce","In","Out","cosine","exponential","linear","ripple","sine","Instrument","_original_triggerAttack","_original_triggerRelease","_syncMethod","timePosition","originalMethod","Monophonic","$f62495c0833bb7cd47e86e602e916f$export$Instrument","portamento","onsilence","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","computedFrequency","getLevelAtTime","portTime","AmplitudeEnvelope","$af3d44c547d38c8f6c1e7866fcbd190d$export$Envelope","Synth","$c4d7bb9caf3d733c1a193e3523b02$export$Monophonic","$e57e7e30a0674b0bca042fe562570$export$OmniOscillator","envelope","$ec2606f10efc2958d2952763d8c780$export$AmplitudeEnvelope","$c37dddcbec3ced426157fc8a86c5d$export$omitFromObject","computedAttack","computedDecay","ModulationSynth","$ffea0d3d3ec0f4369e0cad33fe235735$export$Synth","modulation","modulationEnvelope","AMSynth","$eb5769b7ea44cea7afc8a3bc2a28db0$export$ModulationSynth","BiquadFilter","_filter","freqValues","magValues","phaseValues","filterClone","Filter","_filters","rolloff","_rolloff","rolloffNum","possibilities","cascadingCount","$eccfa0ff9389cc7cefc20b51963f57$export$BiquadFilter","totalResponse","FrequencyEnvelope","_octaves","octaves","_baseFrequency","baseFrequency","MonoSynth","$e611168db3bcebfafb2565f11d17$export$Filter","filterEnvelope","$cbbf18a41fba7b55ea67b85a681b764b$export$FrequencyEnvelope","DuoSynth","voice0","$fdef86aeb0199bf698ab6403a196b1$export$MonoSynth","voice1","_vibrato","$ef323f48a5a527135da6a5cd9042eee$export$LFO","vibratoRate","_vibratoGain","vibratoAmount","$c37dddcbec3ced426157fc8a86c5d$export$deepMerge","FMSynth","inharmRatios","MetalSynth","_freqMultipliers","_amplitude","_highpass","mult","_filterFreqScaler","resonance","freqMult","MembraneSynth","pitchDecay","hertz","maxNote","NoiseSynth","noise","$f403558467802761ef5c896$export$Noise","workletContext","addToWorklet","classOrFunction","registerProcessor","classDesc","processor","getWorkletGlobalScope","ToneAudioWorklet","workletOptions","$e5c85844c6bd64dcd8a67ef3b4$export$getWorkletGlobalScope","_audioWorkletName","_dummyGain","_dummyParam","_worklet","onReady","$e5c85844c6bd64dcd8a67ef3b4$export$addToWorklet","singleIOProcess","workletName","$e5c85844c6bd64dcd8a67ef3b4$export$registerProcessor","FeedbackCombFilter","$d0ee9a809bba088ce879f2b31$export$ToneAudioWorklet","$fcb182e1d42d93db365a172fabacce$export$workletName","OnePoleFilter","_createFilter","oldFilter","a0","fq","LowpassCombFilter","_combFilter","$c7846c6d4b32920699114a1f2bb1379c$export$FeedbackCombFilter","_lowpass","$a91da8a5a87992511a30e31ec1974107$export$OnePoleFilter","dampening","PluckSynth","_noise","attackNoise","_lfcf","$d942064cf618497787360c2fc$export$LowpassCombFilter","delayAmount","PolySynth","_availableVoices","_activeVoices","_voices","_gcTimeout","_averageActiveVoices","voice","maxPolyphony","_dummyVoice","_getNextAvailableVoice","_collectGarbage","activeVoices","_makeVoiceAvailable","activeVoiceIndex","firstAvail","_triggerAttack","notes","midiNote","$ab895d26dca863b70669b176770efdb7$export$MidiClass","released","_triggerRelease","_scheduleEvent","durationSeconds","releaseAll","Sampler","urlMap","$ed03ba364d614ba96548271c4eb7e10$export$isNote","mid","_findClosest","midiFloat","$e6ac9eccbff90bee7aeb9d849bd4413e$export$ftomf","remainder","difference","closestNote","ToneEvent","_startOffset","_probability","probability","_humanize","humanize","_rescheduleEvents","startTick","_getLoopDuration","prob","variation","reschedulTime","lastEvent","Loop","_event","$c3ac7642a129cbf15343ee683cf0bc7$export$ToneEvent","iterations","iters","Part","_startNote","at","timeInTicks","_restartEvent","_setAll","attr","_testLoopBoundries","upPatternGen","clampToArraySize","downPatternGen","infiniteGen","gen","alternatingGenerator","directionUp","jumpUp","stepIndex","jumpDown","randomOnce","PatternGenerator","pattern","randomIndex","randomGen","randomWalk","Pattern","$ebdb379af225c5447eac98f60c4ab$export$Loop","_values","_pattern","$bc1b7debaad831b49b60a0e33a24795a$export$PatternGenerator","Sequence","_part","$bf9784f84f505cbefd5f265646da171$export$Part","_seqCallback","_eventsArray","_subdivision","_createSequence","_eventsUpdated","_indexTime","_rescheduleSequence","sequence","eventOffset","CrossFade","_panner","_split","_g2a","$ac81c6c9ab7b71a66a05f25153bb008e$export$GainToAudio","fade","Effect","_dryWet","$ddcd8f4a93927c90b658bdf950c$export$CrossFade","wet","effectSend","effectReturn","connectEffect","effect","LFOEffect","$cd854b86ae73558a18fcc63286ead055$export$Effect","_lfo","depth","AutoFilter","$b88f14d8d9a8690a8e3842f1226982c$export$LFOEffect","oct","Panner","AutoPanner","$b72db668c4544731e0b185c2e12d0$export$Panner","Follower","$cc7ef031933116c03f8c5756b8ac94$export$Abs","smoothing","_smoothing","AutoWah","_follower","$b8f2b648ddd7de815de48c52612c8b8f$export$Follower","follower","_sweepRange","$aee65c8559141913e93744b63140bd$export$ScaleExp","_inputBoost","_bandpass","_peaking","_setSweepRange","sensitivity","baseFreq","bitCrusherWorklet","BitCrusher","BitCrusherWorklet","_bitCrusherWorklet","$b0460f1a0137bfafc4aae702e2eaeb$export$workletName","Chebyshev","_order","_getCoefficient","degree","memo","Split","_splitter","_merger","StereoEffect","$f99b0c94baebc50e2d9ee5ad6a2192$export$Split","_merge","$e21c1595c793bdaa933e8e62c27fbea0$export$Merge","connectEffectLeft","connectEffectRight","StereoFeedbackEffect","$ae0f098f78ac5b3087ab64ee84$export$StereoEffect","_feedbackL","_feedbackR","_feedbackSplit","_feedbackMerge","Chorus","$acf76c89137ebb29086879f381c7f1$export$StereoFeedbackEffect","_depth","_lfoL","_lfoR","_delayNodeL","$beabbc9cd1c849a0e28a0bac7c1110ff$export$Delay","_delayNodeR","deviation","Distortion","_distortion","distortion","deg","FeedbackEffect","_feedbackGain","FeedbackDelay","$afdcd85802eb7b1f10e6614$export$FeedbackEffect","PhaseShiftAllpass","offset90","_bank0","_createAllPassFilterBank","_bank1","_oneSampleDelay","bankValues","coefficients","FrequencyShifter","_sine","_cosine","_sineMultiply","_cosineMultiply","_negate","_phaseShifter","$fa05036364cf49f096d8a6360b357ca1$export$PhaseShiftAllpass","combFilterTunings","allpassFilterFrequencies","Freeverb","_combFilters","_allpassFiltersL","_allpassFiltersR","roomSize","allpassL","allpassR","lfpf","al","cf","combFilterDelayTimes","combFilterResonances","allpassFilterFreqs","JCReverb","_allpassFilters","_feedbackCombFilters","_scaleRoomSize","allpass","fbcf","apf","StereoXFeedbackEffect","PingPongDelay","$f355cbfbcd1805203d113204a656941$export$StereoXFeedbackEffect","_leftDelay","_rightDelay","_rightPreDelay","PitchShift","_delayA","_lfoA","_delayB","_lfoB","_crossFade","_crossFadeLFO","_feedbackDelay","_pitch","_windowSize","windowSize","Phaser","_filtersL","_makeFilters","stages","_filtersR","connectToFreq","filters","Reverb","_convolver","ready","_decay","_preDelay","preDelay","generate","previousReady","noiseL","noiseR","renderPromise","MidSideSplit","_midAdd","SQRT1_2","_sideSubtract","side","MidSideMerge","_leftMult","_rightMult","MidSideEffect","_midSideMerge","$e6a39c73857d5c0c56c7903860272a7$export$MidSideMerge","_midSideSplit","$ea87e16029da1b1a4a7952d50a1156a6$export$MidSideSplit","_midSend","_sideSend","_midReturn","_sideReturn","connectEffectMid","connectEffectSide","StereoWidener","$aefd5a6825c8458e4447a7e835745cf$export$MidSideEffect","_twoTimesWidthMid","_twoTimesWidthSide","_midMult","_oneMinusWidth","_sideMult","Tremolo","_amplitudeL","_amplitudeR","Vibrato","Analyser","_analysers","analyser","MeterBase","_analyser","$d396814986d36a05271c27d68a47f276$export$Analyser","Meter","$d3fb0d3b8b482ad3868566a99dfdbf3$export$MeterBase","_rms","normalRange","getLevel","aValues","vals","totalSquared","rms","FFT","getFrequencyOfIndex","DCMeter","Waveform","Solo","_allSolos","solo","_isSoloed","_addSolo","_removeSolo","_updateSolo","muted","_soloed","_noSolos","PanVol","Channel","_solo","$bf7d7375a303c20b21b0045d39ef1ae$export$Solo","_panVol","$f7a14c2a57270b994d0de371bfa90f1e$export$PanVol","_getBus","buses","bus","sendKnob","receive","MultibandSplit","_lowMidFilter","lowFrequency","highFrequency","Listener","Panner3D","Recorder","_recorder","MediaRecorder","mimeType","startPromise","handleStart","dataPromise","handleData","Compressor","_compressor","Gate","_gt","$aef62d16eb2fbf694364c9568b5b50b4$export$GreaterThan","_gate","thresh","smoothingTime","Limiter","$b633b248a378a68dd528f4080f0957e9$export$Compressor","MidSideCompressor","MultibandCompressor","$b31fc2ae250087f9b51387d4$export$MultibandSplit","EQ3","_multibandSplit","_lowGain","_midGain","_highGain","Convolver","buff","norm","Master","Buffer","Buffers","BufferSource","getTransport","getDestination","getListener","getDraw","Audio","useMic","$f25e9b9c518c5268dafded937d9f19$init","agents","mic","highpass","lowpass","addedAgents","newAgent","removedAgents","agentNames","agent","acc","existingAgent","_this2","midiToFrequency","$edea99bf1f042982e54886af3fc19$export$Frequency","randomRange","isAudioSupported","getQueryVariable","variable","vars","pair","_console","$cfd9be8367f7ac3f9aafd159a6188$exports","f2","h1","h2","defaultOptions","filterQ","filterRange","filterRolloff","minInitialNote","maxInitialNote","minLFOFrequency","maxLFOFrequency","minVelocity","maxVelocity","velocityRange","minVolume","maxVolume","triggerChord","FlockingAgent","visuals","$e23304670b70ebf5a8f49dab4c62d97$var$_classCallCheck","synth","synthGainNode","filterLeft","filterRight","meterLeft","$db8d06d0af1d35d571$export$Meter","meterRight","newRandomNote","lfoFrequency","$db32a5f0edca84561b3a72a40263952$export$randomRange","gainLFO","initialNote","currentNote","currentVelocity","setFilterPoles","$db32a5f0edca84561b3a72a40263952$export$midiToFrequency","nextFrequency","setToColor","resetColor","centerNote","leftMeterValue","rightMeterValue","leftFilterFreq","rightFilterFreq","$db32a5f0edca84561b3a72a40263952$export$debug","_isPlaceholder","_curry1","f1","$c4ce93d1c6d758e7d743438ca$export$default","_curry2","$eb689977ad08cbde0ef924751be62b36$export$default","_isTransformer","_dispatchable","methodNames","xf","$dcdef70d50cf773f109fb87a8abe0108$export$default","$b1bd9b8769baa57e2b71574a94ee723$export$default","transducer","XAll","$a07af39fed012ff89036e806b3705b79$export$default","@@transducer/value","@@transducer/reduced","$c7bedd444d51415f39aca8dd9af37aec$export$default","$f4724f26b32c6c318db8c66fa2f365a0$export$default","list","getSmoothingFunctor","smoothedValue","createBandpassNoteTracker","midiNotes","inputNode","filterMeters","meter","smoother","overallInputMeter","inputMeterSmoother","previousChordTriggered","filterMeterValues","overallInputLevel","normalizedFilterMeterValues","chordTriggered","$cf894896c37abc363e748c8b8f8$export$default","newChordTriggered","CHORDS","ChordAgent","$ebaa9c685c840578b9c4ccc8ef6a8cc$var$_classCallCheck","converter","$efbfd0f4a918c1b9c80a122dd83cc0$export$PolySynth","chordDetectors","chordName","$c5f8927ce10a99c29311ac082ef2$export$default","playingChord","chordsTriggered","triggered","_ref2","triggeredChordName","nextChord","_ref3","_ref4","flash","$fd0a322313a05a1b0406eab92d2bb2f6$exports","dbAgentNames","agentCollection","controlElem","controlButtonElems","getElementsByClassName","errorElem","screenElem","startElem","forcedAgentParam","$db32a5f0edca84561b3a72a40263952$export$getQueryVariable","hasControl","$c4b69addf645168379b53b794a8cd614$export$default","setControlButton","agentName","disabled","button","dataset","getAgent","getAgents","startPerformance","$d45c96ebbf279bd53883a7c7c2ba07e$export$default","setup","chord","$ebaa9c685c840578b9c4ccc8ef6a8cc$export$default","flocking","$e23304670b70ebf5a8f49dab4c62d97$export$default","$fd0a322313a05a1b0406eab92d2bb2f6$$interop$default","agentNameState","existingAgentNames","newAgents","newAgentName","removeAgents","addAgents","initFirebase","preventDefault","initControl","$db32a5f0edca84561b3a72a40263952$export$isAudioSupported","audioElem","imageName","setAnimal","$cea06a8bdce3f9f85f456e15790bba4$$interop$default","play"],"version":3,"file":"scripts.794546a5.js.map"}